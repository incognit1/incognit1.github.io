var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.3,1,0.817]],["body/components/AppComponent.html",[0,0.549,1,1.437,2,0.218,3,0.218,4,1.227,5,1.227,6,1.227,7,0.182,8,3.046,9,0.724,10,0.029,11,0.913,12,2.236,13,1.664,14,4.024,15,1.621,16,4.787,17,1.621,18,4.787,19,0.377,20,0.811,21,3.748,22,0.678,23,4.787,24,0.913,25,2.666,26,1.423,27,3.694,28,0.437,29,4.787,30,0.678,31,0.662,32,0.335,33,0.616,34,4.787,35,3.624,36,3.624,37,0.616,38,0.664,39,1.321,40,0.421,41,1.321,42,3.624,43,3.624,44,3.624,45,3.624,46,3.624,47,1.14,48,3.522,49,2.155,50,1.966,51,0.182,52,0.043,53,3.046,54,0.846,55,1.059,56,3.624,57,1.059,58,1.621,59,1.506,60,1.621,61,1.931,62,1.227,63,1.227,64,0.913,65,1.227,66,0.846,67,1.059,68,1.815,69,0.846,70,1.227,71,0.913,72,1.227,73,0.913,74,1.227,75,0.846,76,1.227,77,0.846,78,0.784,79,0.846,80,1.227,81,0.846,82,0.784,83,0.846,84,1.227,85,0.846,86,0.668,87,1.227,88,1.227,89,0.02,90,0.02]],["title/modules/AppModule.html",[91,1.614,92,2.13]],["body/modules/AppModule.html",[1,1.573,2,0.167,3,0.167,7,0.139,9,0.552,10,0.029,13,0.696,26,1.309,38,0.699,40,0.321,41,1.007,47,0.869,51,0.199,52,0.033,57,0.808,64,1.411,66,1.309,67,0.808,69,1.309,71,1.411,73,1.411,75,1.309,77,1.309,78,0.598,79,1.309,81,1.309,82,0.598,83,1.309,85,1.309,86,0.509,89,0.017,90,0.017,91,1.977,92,4.487,93,1.816,94,3.419,95,1.996,96,2.314,97,2.323,98,2.323,99,2.323,100,2.323,101,2.323,102,3.04,103,3.332,104,3.332,105,3.332,106,3.332,107,1.637,108,3.04,109,2.571,110,3.338,111,2.323,112,2.323,113,2.763,114,3.971,115,3.338,116,1.816,117,3.338,118,2.763,119,2.763,120,1.086,121,1.172,122,2.323,123,1.499,124,3.971,125,1.816,126,1.816,127,2.763,128,2.323,129,1.816,130,4.271,131,2.323,132,1.816,133,2.323,134,2.323,135,3.971,136,3.971,137,1.376,138,1.086,139,2.763,140,2.763,141,1.816,142,2.323,143,2.323,144,3.907,145,2.763,146,2.763,147,1.816,148,1.816,149,2.763,150,2.033,151,2.763,152,3.971,153,2.763,154,2.154,155,2.033,156,2.763]],["title/classes/AppPage.html",[52,0.039,157,2.385]],["body/classes/AppPage.html",[2,0.291,3,0.291,7,0.242,10,0.029,14,4.058,19,0.503,22,0.812,28,0.467,37,0.813,38,0.503,51,0.242,52,0.068,59,1.518,89,0.024,90,0.024,116,3.173,157,4.217,158,4.058,159,6.324,160,6.324,161,4.828,162,4.828,163,4.828,164,4.828,165,4.828,166,4.828]],["title/modules/AppRoutingModule.html",[91,1.614,106,1.927]],["body/modules/AppRoutingModule.html",[0,0.605,2,0.219,3,0.219,7,0.182,10,0.029,38,0.681,40,0.421,47,1.142,51,0.241,52,0.043,66,1.119,67,1.401,69,1.119,75,1.253,77,1.119,78,1.283,79,1.253,81,1.253,82,1.16,83,1.253,85,1.119,86,0.988,89,0.02,90,0.02,91,1.807,106,2.85,108,3.547,117,4.029,122,4.029,123,2.911,128,3.051,129,2.385,130,4.797,131,3.051,132,2.385,133,3.051,134,3.051,141,2.385,142,3.051,148,2.385,167,3.629,168,3.629,169,1.969,170,6.607,171,2.67,172,5.303,173,6.308,174,1.665,175,4.792,176,3.629,177,3.629,178,5.46,179,1.253,180,1.507,181,3.629,182,1.668,183,3.629,184,3.629,185,3.629,186,3.629,187,3.629]],["title/injectables/AuthService.html",[26,0.757,188,0.88]],["body/injectables/AuthService.html",[2,0.195,3,0.195,7,0.162,9,0.645,10,0.03,19,0.336,20,0.75,22,0.627,24,0.813,26,1.035,28,0.513,30,0.627,31,0.514,32,0.468,33,0.57,37,0.811,38,0.594,40,0.375,47,1.016,51,0.162,52,0.038,54,0.754,55,1.478,86,0.816,89,0.019,90,0.019,107,1.721,109,2.497,125,3.576,126,2.122,171,4.333,172,2.714,179,0.754,180,1.016,182,0.944,188,1.372,189,2.714,190,4.574,191,5.441,192,5.441,193,4.574,194,5.441,195,4.574,196,5.441,197,1.752,198,2.558,199,4.25,200,5.056,201,4.429,202,3.229,203,3.229,204,4.429,205,3.229,206,1.59,207,1.002,208,2.32,209,3.229,210,2.643,211,3.229,212,3.229,213,3.323,214,3.229,215,3.229,216,2.714,217,3.229,218,3.229,219,3.229,220,2.079,221,2.714,222,3.229,223,3.229,224,3.229,225,2.714,226,0.876,227,3.229,228,2.122,229,4.003,230,3.229,231,3.229,232,2.714,233,2.714,234,2.375,235,2.714,236,2.714,237,2.714,238,3.229,239,3.229,240,3.229]],["title/components/CommentsComponent.html",[0,0.3,64,0.817]],["body/components/CommentsComponent.html",[0,0.484,1,0.648,2,0.155,3,0.155,4,0.871,5,0.871,6,0.871,7,0.129,9,0.514,10,0.03,11,0.648,12,2.123,13,1.58,15,1.276,17,1.276,19,0.268,20,0.639,22,0.534,24,0.648,26,1.319,28,0.489,30,0.632,31,0.635,32,0.484,33,0.574,37,0.673,38,0.545,39,1.627,40,0.438,41,0.938,51,0.129,52,0.031,54,0.601,55,1.102,57,0.752,58,1.276,59,1.186,60,1.276,61,1.664,62,0.871,63,0.871,64,1.238,65,0.871,66,0.601,67,0.752,68,1.511,69,0.601,70,0.871,71,0.648,72,0.871,73,0.648,74,0.871,75,0.601,76,0.871,77,0.601,78,0.556,79,0.601,80,0.871,81,0.601,82,1.063,83,0.601,84,0.871,85,0.601,86,0.695,87,0.871,88,0.871,89,0.021,90,0.016,107,1.597,137,1.281,138,1.011,180,0.809,182,0.752,197,1.396,206,0.752,207,0.474,210,1.599,220,1.907,226,1.023,228,1.691,241,2.163,242,1.023,243,4.021,244,3.77,245,3.77,246,4.914,247,4.914,248,3.77,249,4.914,250,1.791,251,3.77,252,4.914,253,3.615,254,2.654,255,2.922,256,3.77,257,0.95,258,3.77,259,2.573,260,1.482,261,1.771,262,2.573,263,2.573,264,3.77,265,2.573,266,3.77,267,2.573,268,3.615,269,2.163,270,2.774,271,2.573,272,2.573,273,2.573,274,2.573,275,4.463,276,1.691,277,3.77,278,2.573,279,1.53,280,2.573,281,2.163,282,2.573,283,3.77,284,2.573,285,2.163,286,2.242,287,1.893,288,1.893,289,1.893,290,2.573,291,2.573,292,2.573,293,2.573,294,3.77,295,3.17,296,4.463,297,3.17,298,2.573,299,3.17,300,1.893,301,3.77,302,2.573,303,3.77,304,2.573,305,2.573,306,1.53,307,2.573,308,1.281,309,2.573,310,2.163,311,1.281,312,2.163,313,2.163,314,2.774,315,2.163,316,3.77,317,3.77,318,3.77,319,3.77,320,3.77]],["title/injectables/CustomDatepicker.html",[188,0.88,321,1.759]],["body/injectables/CustomDatepicker.html",[2,0.199,3,0.199,7,0.166,9,0.66,10,0.03,13,0.832,19,0.344,22,0.637,24,0.832,28,0.494,30,0.814,31,0.667,32,0.532,33,0.739,37,0.815,38,0.468,40,0.384,51,0.257,52,0.061,54,0.772,89,0.019,90,0.019,95,1.298,96,1.645,120,1.298,121,1.401,169,1.792,179,1.283,180,1.039,188,1.56,207,0.609,226,1.56,257,1.556,321,2.441,322,1.964,323,4.499,324,4.499,325,4.499,326,4.499,327,3.303,328,3.118,329,3.303,330,3.31,331,3.31,332,3.218,333,3.303,334,3.31,335,2.874,336,3.303,337,3.118,338,3.31,339,3.303,340,3.31,341,3.303,342,3.363,343,2.957,344,1.964,345,2.957,346,3.363,347,1.964,348,2.957,349,2.43,350,2.43,351,2.43,352,1.964,353,2.171,354,2.43,355,2.43,356,2.171,357,2.43,358,2.43,359,2.43,360,2.43,361,2.43,362,2.43,363,2.676,364,2.957,365,2.43,366,1.792,367,2.43,368,3.31,369,1.964,370,2.171,371,1.964,372,2.171,373,2.441,374,2.43,375,2.171]],["title/injectables/DateOperations.html",[188,0.88,366,1.759]],["body/injectables/DateOperations.html",[2,0.214,3,0.214,7,0.178,10,0.03,13,0.894,19,0.37,22,0.669,28,0.461,30,0.669,31,0.548,32,0.437,33,0.607,37,0.807,38,0.492,40,0.412,51,0.266,52,0.063,54,0.829,89,0.02,90,0.02,95,1.395,96,1.768,120,1.395,121,1.506,169,1.926,179,1.321,180,1.117,188,1.599,207,0.654,226,1.725,257,1.425,321,1.926,322,2.111,328,2.879,330,2.612,331,2.612,332,3.354,334,2.612,335,2.435,337,2.879,338,2.612,340,2.612,342,3.104,343,3.104,344,2.111,345,3.104,346,3.488,347,2.111,348,3.104,349,2.612,350,2.612,351,2.612,352,2.111,353,2.333,354,2.612,355,2.612,356,2.333,357,2.612,358,2.612,359,2.612,360,2.612,361,2.612,362,2.612,363,2.809,364,3.104,365,2.612,366,2.562,367,3.474,368,3.474,369,2.111,370,2.333,371,2.111,372,2.333,373,2.562,374,3.474,375,2.333,376,4.723,377,4.723,378,3.55,379,3.55]],["title/components/EventsListComponent.html",[0,0.3,66,0.757]],["body/components/EventsListComponent.html",[0,0.5,1,0.702,2,0.168,3,0.168,4,0.943,5,0.943,6,0.943,7,0.14,9,0.557,10,0.03,11,0.702,12,2.152,13,1.602,15,1.352,17,1.352,19,0.29,20,0.677,22,0.566,24,0.702,26,0.651,28,0.458,30,0.566,31,0.592,32,0.472,33,0.514,37,0.601,38,0.562,39,1.702,40,0.324,41,1.016,51,0.14,52,0.033,54,0.651,55,0.814,57,0.814,58,1.352,59,1.257,60,1.352,61,1.727,62,0.943,63,0.943,64,0.702,65,0.943,66,1.191,67,1.844,68,1.581,69,0.651,70,0.943,71,0.702,72,0.943,73,0.702,74,0.943,75,0.651,76,0.943,77,0.651,78,0.864,79,0.651,80,0.943,81,0.651,82,0.864,83,0.651,84,0.943,85,0.651,86,0.513,87,1.581,88,0.943,89,0.017,90,0.017,107,1.642,125,1.832,126,1.832,138,1.095,148,3.803,154,3.14,155,2.05,179,0.651,197,1.512,206,0.814,207,0.513,220,1.456,242,1.084,243,2.05,250,1.859,257,1.285,261,1.352,311,1.989,335,2.143,348,1.832,380,4.865,381,1.657,382,2.626,383,2.626,384,5.1,385,4.723,386,3.995,387,2.939,388,2.343,389,3.995,390,2.787,391,4.257,392,2.787,393,2.343,394,3.358,395,2.343,396,2.343,397,4.288,398,4.288,399,2.343,400,2.343,401,2.343,402,2.343,403,3.926,404,3.358,405,3.358,406,2.343,407,2.787,408,2.787,409,2.787,410,2.787,411,2.787,412,2.787,413,2.343,414,2.787,415,2.787,416,2.787,417,2.787,418,2.787,419,2.787]],["title/pipes/FilterData.html",[102,1.759,420,1.274]],["body/pipes/FilterData.html",[2,0.241,3,0.241,7,0.201,9,0.799,10,0.029,11,1.007,22,0.566,28,0.326,30,0.566,31,0.653,32,0.37,33,0.514,37,0.828,38,0.416,40,0.464,51,0.201,52,0.048,82,0.865,89,0.022,90,0.022,102,2.769,147,3.354,174,1.835,179,0.934,180,1.968,182,1.168,207,0.94,226,1.607,242,1.085,370,3.354,372,3.354,420,2.209,421,4.29,422,2.628,423,2.378,424,3.354,425,4.978,426,3.361,427,2.169,428,3.354,429,2.628,430,5.103,431,3.998,432,3.361,433,3.361,434,2.941,435,4.356,436,5.621,437,5.103,438,5.103,439,5.103,440,5.621,441,5.621,442,2.628,443,3.998,444,3.998,445,2.628,446,3.998,447,3.361]],["title/injectables/GuardService.html",[108,1.759,188,0.88]],["body/injectables/GuardService.html",[2,0.219,3,0.219,7,0.182,9,0.725,10,0.03,19,0.378,22,0.679,24,0.914,26,1.452,28,0.39,30,0.679,31,0.557,32,0.444,33,0.616,37,0.734,38,0.618,40,0.421,47,1.142,51,0.182,52,0.043,54,0.848,55,1.568,78,0.785,86,0.669,89,0.02,90,0.02,107,1.816,108,2.6,123,1.969,125,3.751,126,2.385,178,4.797,188,1.456,198,2.585,199,4.51,208,2.722,210,2.636,216,3.051,220,1.323,232,3.051,233,3.051,234,2.67,235,3.051,236,4.029,237,3.051,242,0.985,448,3.051,449,2.67,450,3.629,451,4.792,452,5.707,453,4.51,454,5.707,455,3.629,456,3.629,457,3.629,458,5.707,459,5.365,460,5.365,461,3.947,462,2.385,463,2.67,464,3.629,465,3.629]],["title/injectables/I18n.html",[188,0.88,328,1.759]],["body/injectables/I18n.html",[2,0.22,3,0.22,7,0.184,10,0.03,13,0.922,19,0.381,20,0.816,28,0.439,32,0.339,37,0.786,38,0.502,40,0.425,51,0.27,52,0.064,54,0.855,89,0.02,90,0.02,95,1.438,96,1.822,120,1.438,121,1.552,169,1.985,179,1.337,180,1.151,188,1.615,206,1.069,207,0.887,226,1.554,257,1.539,321,1.985,322,2.176,328,3.106,330,2.691,331,2.691,332,3.106,334,2.691,335,2.472,337,2.922,338,2.691,340,2.691,342,3.166,343,3.166,344,2.176,345,3.54,346,4.014,347,2.176,348,3.166,349,2.691,350,2.691,351,2.691,352,2.176,353,2.405,354,2.691,355,2.691,356,2.405,357,2.691,358,2.691,359,2.691,360,2.691,361,2.691,362,2.691,363,2.865,364,3.166,365,2.691,366,1.985,367,2.691,368,3.544,369,2.176,370,2.405,371,2.176,372,2.405,373,2.614,374,2.691,375,2.405,466,3.658]],["title/components/LoginComponent.html",[0,0.3,69,0.757]],["body/components/LoginComponent.html",[0,0.498,1,0.695,2,0.166,3,0.166,4,0.934,5,0.934,6,0.934,7,0.139,9,0.551,10,0.03,11,0.695,12,2.149,13,1.599,15,1.343,17,1.343,19,0.287,20,0.672,22,0.562,24,0.695,26,1.348,28,0.456,30,0.391,31,0.539,32,0.43,33,0.355,37,0.51,38,0.529,40,0.32,41,1.006,47,0.868,51,0.139,52,0.033,53,4.269,54,0.645,55,1.159,57,0.807,58,1.343,59,1.248,60,1.343,61,2.066,62,0.934,63,0.934,64,0.695,65,0.934,66,0.645,67,0.807,68,1.572,69,1.186,70,0.934,71,0.695,72,0.934,73,0.695,74,0.934,75,0.645,76,0.934,77,0.645,78,0.597,79,0.645,80,0.934,81,0.645,82,0.597,83,0.645,84,0.934,85,0.645,86,0.508,87,0.934,88,0.934,89,0.017,90,0.017,94,3.417,137,1.374,171,2.919,179,0.645,182,1.159,198,2.447,208,1.266,250,1.851,254,2.359,255,3.02,261,1.343,279,1.641,463,2.03,467,2.03,468,3.967,469,3.967,470,3.736,471,5.078,472,5.078,473,5.078,474,2.76,475,3.967,476,2.76,477,2.76,478,5.77,479,2.76,480,2.76,481,2.32,482,2.76,483,1.814,484,2.76,485,2.76,486,2.76,487,2.03,488,2.919,489,2.32,490,2.76,491,3.967,492,2.76,493,2.76,494,5.379,495,2.76,496,2.76,497,2.32,498,2.76,499,2.76,500,2.76,501,2.76,502,2.76,503,2.76,504,2.76,505,4.644,506,2.76,507,3.967,508,2.76,509,2.76,510,3.967,511,2.76,512,2.76,513,2.76,514,2.32,515,3.967,516,2.76,517,3.967,518,2.76,519,2.76,520,3.967,521,3.967]],["title/components/MenuComponent.html",[0,0.3,71,0.817]],["body/components/MenuComponent.html",[0,0.47,1,0.603,2,0.144,3,0.144,4,0.81,5,0.81,6,0.81,7,0.12,9,0.478,10,0.03,11,0.603,12,2.096,13,1.56,15,1.209,17,1.209,19,0.249,20,0.605,22,0.506,24,0.603,25,1.76,26,1.243,28,0.494,30,0.506,31,0.551,32,0.493,33,0.459,37,0.685,38,0.494,39,1.559,40,0.278,41,0.872,47,0.752,51,0.12,52,0.029,54,0.559,55,1.044,57,0.699,58,1.209,59,1.124,60,1.209,61,1.606,62,0.81,63,0.81,64,0.603,65,0.81,66,0.559,67,1.612,68,1.448,69,0.559,70,0.81,71,1.195,72,0.81,73,0.603,74,0.81,75,0.559,76,0.81,77,0.559,78,0.773,79,0.559,80,0.81,81,0.559,82,0.925,83,0.559,84,0.81,85,0.559,86,0.788,87,0.81,88,0.81,89,0.015,90,0.015,107,1.612,138,0.94,174,1.962,182,0.699,190,3.987,198,2.34,206,0.699,207,0.441,210,1.515,220,2.152,228,1.572,242,0.97,243,1.76,250,1.729,257,1.195,260,1.404,261,1.802,306,1.423,308,2.361,314,1.76,335,1.962,373,1.298,395,2.011,396,2.011,397,3.987,398,3.987,399,2.011,400,2.011,401,2.011,402,2.011,403,3.594,404,3.003,405,3.003,406,2.011,442,1.572,462,1.572,463,1.76,522,2.011,523,3.573,524,3.573,525,3.573,526,4.743,527,5.324,528,3.573,529,4.743,530,4.743,531,4.743,532,4.743,533,3.573,534,3.573,535,2.392,536,2.392,537,2.392,538,2.392,539,2.392,540,2.392,541,2.392,542,2.392,543,2.392,544,2.392,545,2.392,546,2.392,547,3.573,548,2.392,549,2.011,550,3.573,551,2.392,552,2.392,553,2.392,554,2.392,555,2.392,556,2.392,557,2.392,558,2.392,559,2.392,560,2.011,561,2.392,562,2.392,563,2.392,564,2.392,565,2.392,566,3.573,567,2.392,568,2.392,569,3.573,570,3.573,571,3.573,572,3.573,573,3.573]],["title/components/NotificationComponent.html",[0,0.3,73,0.817]],["body/components/NotificationComponent.html",[0,0.536,1,0.851,2,0.204,3,0.204,4,1.143,5,1.143,6,1.143,7,0.17,10,0.029,11,0.851,12,2.215,13,1.648,15,1.546,17,1.546,19,0.352,20,0.773,22,0.647,24,0.851,28,0.451,30,0.478,31,0.601,32,0.423,33,0.434,37,0.587,38,0.539,39,1.886,40,0.392,51,0.17,52,0.04,54,0.789,55,1.335,57,0.987,58,1.546,59,1.436,60,1.546,61,1.877,62,1.143,63,1.143,64,0.851,65,1.143,66,0.789,67,0.987,68,1.752,69,0.789,70,1.143,71,0.851,72,1.143,73,1.397,74,1.143,75,0.789,76,1.143,77,0.789,78,0.73,79,0.789,80,1.143,81,0.789,82,0.73,83,0.789,84,1.143,85,0.789,86,0.622,87,1.143,88,1.143,89,0.019,90,0.019,109,2.544,150,2.484,179,0.789,182,0.987,242,1.24,250,2.021,261,1.546,268,4.078,308,3.091,434,2.484,435,3.36,574,2.839,575,4.567,576,4.567,577,5.544,578,3.377,579,5.175,580,5.175,581,5.544,582,4.567,583,4.567,584,3.377,585,3.377,586,3.297,587,3.377,588,3.377,589,5.969,590,3.377,591,3.377,592,4.567,593,2.839,594,2.839,595,5.175,596,4.567,597,4.567,598,4.567,599,5.175,600,3.377,601,3.377,602,4.567]],["title/classes/NotificationType.html",[52,0.039,586,1.927]],["body/classes/NotificationType.html",[2,0.283,3,0.283,7,0.236,10,0.029,19,0.489,20,0.955,24,1.184,28,0.492,30,0.665,31,0.546,32,0.622,33,0.604,51,0.236,52,0.067,89,0.024,90,0.024,257,1.522,285,5.471,335,2.773,586,3.354,603,3.95,604,5.639,605,5.639,606,4.698,607,4.698,608,4.698]],["title/injectables/NotificationsService.html",[109,1.487,188,0.88]],["body/injectables/NotificationsService.html",[2,0.263,3,0.263,7,0.219,10,0.029,19,0.455,20,0.913,22,0.764,28,0.498,30,0.618,31,0.507,32,0.581,33,0.561,37,0.753,38,0.562,40,0.507,51,0.219,52,0.052,55,1.71,89,0.023,90,0.023,109,2.475,180,1.841,188,1.588,206,1.276,207,0.804,261,1.478,308,3.126,427,2.369,481,4.919,586,3.634,594,4.533,609,3.67,610,6.112,611,6.112,612,5.393,613,4.366,614,5.393,615,4.366,616,4.366,617,4.366,618,4.366,619,4.366,620,4.366]],["title/classes/PagerService.html",[52,0.039,154,1.759]],["body/classes/PagerService.html",[2,0.232,3,0.232,7,0.194,10,0.029,19,0.519,20,0.653,22,0.706,28,0.314,30,0.546,31,0.448,32,0.357,33,0.496,37,0.711,38,0.402,51,0.194,52,0.059,89,0.021,90,0.021,120,1.515,154,2.705,179,1.447,182,1.127,206,1.127,207,0.71,311,1.92,335,3.066,385,4.192,391,4.45,394,3.242,445,2.535,621,3.242,622,4.986,623,4.986,624,6.39,625,6.457,626,3.856,627,6.049,628,4.192,629,6.39,630,6.196,631,3.856,632,3.856,633,4.986,634,3.856,635,3.856,636,6.196,637,3.856,638,3.856,639,3.856,640,5.526,641,5.526,642,3.856,643,3.856,644,3.856,645,3.856,646,3.856,647,3.856,648,2.837,649,3.856]],["title/classes/Project.html",[52,0.039,78,0.701]],["body/classes/Project.html",[2,0.25,3,0.25,7,0.208,10,0.029,19,0.431,20,0.884,28,0.537,31,0.697,32,0.61,51,0.208,52,0.062,78,1.129,89,0.022,90,0.022,226,1.714,257,1.719,260,2.357,286,3.568,335,2.622,650,3.483,651,3.943,652,3.943,653,3.943,654,5.043,655,3.943,656,3.568,657,5.043,658,4.144,659,4.144,660,4.144,661,4.144,662,4.144,663,4.144,664,4.144,665,4.144,666,4.144,667,4.144]],["title/components/ProjectComponent.html",[0,0.3,75,0.757]],["body/components/ProjectComponent.html",[0,0.462,1,0.51,2,0.122,3,0.122,4,0.685,5,0.685,6,1.064,7,0.102,9,0.404,10,0.03,11,0.51,12,2.027,13,1.509,15,1.064,17,1.064,19,0.211,20,0.532,21,3.277,22,0.445,24,0.51,26,1.216,27,3.095,28,0.482,30,0.445,31,0.547,32,0.436,33,0.404,37,0.641,38,0.519,39,1.406,40,0.235,41,0.738,47,0.636,51,0.102,52,0.024,54,0.473,55,1.377,57,0.591,58,1.064,59,0.989,60,1.064,61,1.472,62,0.685,63,0.685,64,0.51,65,0.685,66,0.473,67,0.591,68,1.306,69,0.473,70,0.685,71,0.51,72,0.685,73,0.51,74,0.685,75,1.016,76,0.685,77,0.473,78,1.125,79,0.473,80,0.685,81,0.473,82,0.68,83,0.473,84,0.685,85,0.473,86,0.959,87,0.685,88,0.685,89,0.013,90,0.013,95,0.795,107,1.521,120,0.795,121,0.858,137,1.007,138,0.795,169,1.098,174,0.928,179,0.901,180,0.989,198,2.115,206,1.127,207,0.959,208,0.928,210,1.334,213,2.535,220,1.586,226,0.853,242,0.853,250,1.586,254,2.293,255,2.586,257,1.256,260,1.515,261,1.595,279,1.203,286,1.203,287,1.488,288,1.488,295,1.701,297,1.701,300,1.488,306,1.87,332,1.706,337,2.092,353,1.33,356,1.33,363,1.203,364,1.33,369,1.87,371,2.293,375,1.33,413,1.701,449,1.488,461,3.2,483,1.33,488,2.313,651,1.33,652,1.33,653,1.33,654,1.701,655,3.096,656,2.293,657,1.701,668,1.701,669,3.144,670,3.144,671,4.349,672,4.349,673,3.656,674,3.656,675,4.349,676,2.313,677,4.349,678,2.837,679,4.349,680,2.837,681,3.2,682,3.144,683,2.023,684,2.023,685,2.023,686,2.313,687,2.023,688,1.488,689,2.023,690,2.023,691,2.023,692,2.023,693,2.023,694,2.023,695,2.023,696,2.023,697,2.023,698,2.023,699,2.023,700,2.023,701,1.488,702,2.023,703,2.023,704,2.023,705,2.023,706,2.023,707,2.023,708,2.023,709,3.96,710,2.023,711,1.488,712,3.144,713,1.488,714,2.023,715,2.023,716,2.023,717,2.023,718,4.349,719,1.701,720,2.023,721,2.023,722,2.023,723,3.857,724,2.023,725,2.023,726,2.023,727,3.857,728,3.144,729,2.023,730,2.023,731,2.023,732,2.023,733,2.023,734,3.144,735,3.144,736,2.023,737,2.023,738,1.701,739,3.144,740,2.023,741,2.023,742,1.701,743,1.488,744,1.701,745,2.023,746,1.488,747,1.488,748,1.488,749,1.488,750,2.023,751,1.701,752,1.33,753,3.144,754,1.488,755,2.313,756,2.313]],["title/components/ProjectsListComponent.html",[0,0.3,77,0.757]],["body/components/ProjectsListComponent.html",[0,0.452,1,0.551,2,0.132,3,0.132,4,0.741,5,0.741,6,0.741,7,0.11,9,0.437,10,0.03,11,0.551,12,2.06,13,1.533,15,1.131,17,1.131,19,0.228,20,0.566,22,0.473,24,0.551,26,1.25,28,0.484,30,0.729,31,0.641,32,0.452,33,0.662,37,0.754,38,0.575,39,1.477,40,0.254,41,0.798,47,0.688,49,1.301,50,1.187,51,0.11,52,0.026,54,0.511,55,1.653,57,0.639,58,1.131,59,1.05,60,1.131,61,1.535,62,0.741,63,0.741,64,0.551,65,0.741,66,0.511,67,0.639,68,1.371,69,0.511,70,0.741,71,0.551,72,0.741,73,0.551,74,0.741,75,0.511,76,0.741,77,1.059,78,1.391,79,0.511,80,0.741,81,0.511,82,0.473,83,0.511,84,0.741,85,0.511,86,0.403,87,1.371,88,0.741,89,0.019,90,0.014,95,1.312,96,1.663,107,1.504,120,1.312,121,1.417,129,3.958,138,0.86,197,1.187,198,2.27,206,0.976,207,0.615,220,1.218,242,0.907,250,1.652,257,1.23,260,0.86,261,1.742,381,1.301,382,2.195,383,2.195,387,1.61,462,1.438,470,3.785,497,1.839,549,1.839,593,2.808,676,2.457,678,2.98,680,2.98,681,3.335,686,2.457,688,1.61,743,1.61,746,1.61,747,1.61,748,3.591,754,1.61,757,5.063,758,4.326,759,4.533,760,3.209,761,3.34,762,3.34,763,2.808,764,4.533,765,3.34,766,2.808,767,3.34,768,2.188,769,3.34,770,2.188,771,2.808,772,1.839,773,2.188,774,3.34,775,1.839,776,2.188,777,2.188,778,2.188,779,1.61,780,1.839,781,2.188,782,1.812,783,1.839,784,1.839,785,1.61,786,3.34,787,2.188,788,2.188,789,2.188,790,2.188,791,2.188,792,2.188,793,2.188,794,2.188,795,4.051,796,2.188,797,2.188,798,3.34,799,4.051,800,2.188,801,2.188,802,2.188,803,2.188,804,1.61,805,2.188,806,1.839,807,1.839,808,1.839,809,1.839,810,1.839,811,1.839,812,3.34,813,3.34,814,3.34,815,3.34,816,3.34,817,3.34]],["title/pipes/SearchPipe.html",[103,1.927,420,1.274]],["body/pipes/SearchPipe.html",[2,0.275,3,0.275,7,0.229,9,0.912,10,0.029,11,1.15,22,0.647,28,0.372,30,0.647,31,0.693,33,0.587,37,0.798,38,0.476,40,0.53,51,0.229,52,0.054,89,0.024,90,0.024,103,3.297,207,1.021,242,1.24,420,2.345,423,2.716,424,3.644,427,2.478,428,3.644,818,3.839,819,4.66,820,6.36,821,4.567,822,4.567,823,4.567,824,4.567]],["title/pipes/SortData.html",[104,1.927,420,1.274]],["body/pipes/SortData.html",[2,0.245,3,0.245,7,0.204,9,0.813,10,0.03,11,1.025,22,0.576,28,0.331,30,0.576,31,0.658,33,0.523,37,0.808,38,0.424,40,0.473,51,0.204,52,0.049,89,0.022,90,0.022,104,3.069,174,2.368,179,0.951,180,1.623,182,1.189,207,0.75,242,1.105,420,2.227,422,2.675,423,2.42,424,3.392,426,3.421,427,2.8,428,3.392,442,2.675,711,4.385,825,4.339,826,5.161,827,6.284,828,6.384,829,4.07,830,6.151,831,5.96,832,4.07,833,4.07,834,4.07,835,4.07,836,4.07,837,4.07,838,4.07,839,4.07]],["title/classes/Task.html",[52,0.039,82,0.701]],["body/classes/Task.html",[2,0.232,3,0.232,7,0.193,10,0.029,19,0.4,20,0.843,28,0.542,31,0.678,32,0.616,51,0.193,52,0.059,82,1.076,89,0.021,90,0.021,226,1.752,257,1.733,260,2.293,286,3.469,651,3.835,652,3.835,653,3.835,655,3.835,656,3.469,760,3.835,804,4.292,840,3.231,841,4.905,842,4.905,843,4.292,844,4.905,845,3.843,846,3.843,847,3.843,848,3.843,849,3.843,850,3.843,851,3.843,852,3.843,853,3.843,854,3.843,855,3.843,856,3.843,857,3.843,858,3.843]],["title/components/TaskComponent.html",[0,0.3,79,0.757]],["body/components/TaskComponent.html",[0,0.365,1,0.36,2,0.086,3,0.086,4,0.484,5,0.484,6,0.484,7,0.072,9,0.286,10,0.03,11,0.36,12,1.864,13,1.387,15,0.805,17,0.805,19,0.149,20,0.403,21,2.8,22,0.337,24,0.36,26,1.055,27,2.533,28,0.487,30,0.504,31,0.549,32,0.481,33,0.457,37,0.631,38,0.511,39,1.113,40,0.276,41,0.521,47,0.45,51,0.072,52,0.017,54,0.334,55,1.434,57,0.418,58,0.805,59,0.748,60,0.805,61,1.204,62,0.484,63,0.484,64,0.36,65,0.484,66,0.334,67,0.418,68,1.033,69,0.334,70,0.484,71,0.36,72,0.484,73,0.36,74,0.484,75,0.334,76,0.484,77,0.334,78,0.309,79,0.831,80,0.484,81,0.334,82,0.976,83,0.334,84,0.484,85,0.334,86,0.871,87,0.484,88,0.484,89,0.01,90,0.01,95,0.562,96,1.519,107,1.32,120,0.562,121,0.606,137,0.712,138,0.562,169,1.656,174,0.656,179,0.555,180,1.42,182,0.418,188,0.388,193,2.989,198,1.915,206,1.434,207,0.957,208,1.632,210,1.915,213,2.006,220,1.439,221,2.565,226,1.6,228,0.94,229,1.749,234,1.749,242,0.645,250,1.296,253,1.052,254,1.815,255,2.115,257,0.994,260,1.674,261,1.336,276,1.563,279,0.85,281,1.202,286,1.414,287,1.052,288,1.052,300,1.052,306,0.85,308,0.712,310,1.202,311,0.712,312,1.202,313,1.202,314,1.749,315,1.202,321,1.29,328,1.656,332,3.197,337,1.29,343,1.563,352,2.347,363,1.414,366,2.663,369,1.414,371,1.414,373,0.776,429,0.94,432,1.998,433,1.998,461,2.904,483,0.94,488,2.245,560,1.202,651,0.94,652,0.94,653,0.94,655,0.94,656,1.815,673,2.989,674,2.989,676,1.749,680,2.245,681,2.616,686,1.749,688,1.052,701,1.052,709,3.796,711,1.052,719,1.202,742,1.202,743,1.052,744,1.202,746,1.052,747,1.052,748,2.904,749,1.052,751,1.202,752,0.94,754,1.052,755,1.749,756,1.749,760,0.94,763,1.998,771,1.998,780,1.202,804,1.052,806,1.202,807,1.202,808,1.202,809,1.202,810,1.202,811,1.202,841,1.202,842,1.202,843,1.052,844,1.202,859,1.052,860,2.377,861,2.377,862,3.556,863,3.556,864,3.556,865,3.556,866,3.556,867,3.556,868,3.556,869,3.556,870,3.556,871,3.556,872,2.377,873,3.556,874,1.43,875,3.052,876,3.556,877,2.377,878,1.43,879,1.43,880,1.43,881,2.377,882,1.43,883,1.43,884,1.43,885,1.43,886,1.43,887,1.43,888,3.556,889,5.661,890,1.43,891,5.505,892,3.556,893,3.947,894,3.556,895,1.43,896,1.43,897,1.43,898,2.377,899,1.43,900,1.43,901,1.43,902,1.43,903,1.43,904,1.43,905,1.43,906,1.43,907,1.43,908,1.43,909,1.43,910,1.43,911,1.43,912,1.43,913,3.556,914,1.43,915,1.43,916,3.556,917,3.556,918,2.377,919,4.515,920,2.377,921,2.565,922,2.565,923,1.43,924,3.556,925,3.052,926,1.43,927,1.43,928,1.43,929,1.43,930,3.556,931,1.43,932,3.052,933,2.377,934,1.43,935,1.43,936,1.43,937,1.43,938,1.43,939,1.43,940,2.377,941,1.202,942,2.565,943,1.202,944,1.43,945,1.43,946,1.43,947,1.43,948,1.43,949,1.052,950,3.318,951,2.989,952,2.989,953,2.989,954,2.989,955,2.989,956,3.318,957,1.052,958,2.377,959,2.377,960,2.377,961,2.377,962,2.377]],["title/components/TasksListComponent.html",[0,0.3,81,0.757]],["body/components/TasksListComponent.html",[0,0.439,1,0.517,2,0.124,3,0.124,4,0.695,5,0.695,6,0.695,7,0.103,9,0.41,10,0.03,11,0.517,12,2.034,13,1.514,15,1.077,17,1.077,19,0.214,20,0.539,22,0.451,24,0.517,26,1.222,27,3.112,28,0.494,30,0.672,31,0.659,32,0.484,33,0.61,37,0.645,38,0.591,39,1.42,40,0.239,41,0.749,47,0.646,49,1.221,50,1.114,51,0.103,52,0.024,54,0.48,55,1.281,57,0.6,58,1.077,59,1.001,60,1.077,61,1.484,62,0.695,63,0.695,64,0.517,65,0.695,66,0.48,67,0.6,68,1.318,69,0.48,70,0.695,71,0.517,72,0.695,73,0.517,74,0.695,75,0.48,76,0.695,77,0.48,78,0.688,79,0.48,80,0.695,81,1.024,82,1.285,83,0.48,84,0.695,85,0.48,86,0.378,87,1.318,88,0.695,89,0.014,90,0.014,95,0.807,102,1.114,107,1.529,120,0.807,121,0.871,132,4.023,138,0.807,143,1.727,144,1.727,154,2.839,155,1.511,179,1.024,198,2.128,206,1.281,207,0.808,208,1.46,210,1.349,220,1.829,226,0.864,242,0.864,250,1.598,257,1.455,260,1.25,261,1.699,299,1.727,311,1.584,381,1.221,382,2.091,383,2.091,387,1.511,388,1.727,425,2.674,427,1.114,447,2.674,449,1.511,462,1.35,514,2.674,678,2.865,758,3.686,760,2.559,766,1.727,772,1.727,775,1.727,779,1.511,782,1.726,783,1.727,784,1.727,785,1.511,819,3.686,843,3.226,921,2.674,922,2.674,941,1.727,942,1.727,943,1.727,963,5.146,964,4.385,965,4.385,966,4.218,967,4.385,968,5.017,969,4.385,970,3.181,971,3.181,972,3.181,973,3.181,974,3.894,975,4.385,976,2.054,977,2.054,978,3.181,979,2.054,980,3.181,981,2.054,982,2.054,983,3.181,984,3.181,985,2.054,986,3.181,987,3.181,988,2.054,989,3.181,990,2.054,991,3.181,992,3.894,993,3.181,994,3.181,995,3.181,996,3.181,997,3.181,998,3.181,999,3.181,1000,3.181,1001,2.054,1002,1.727,1003,2.054,1004,2.054,1005,2.054,1006,2.054,1007,2.054,1008,2.054,1009,2.054,1010,1.727,1011,2.054,1012,2.054,1013,3.181,1014,2.674,1015,2.054,1016,2.054,1017,2.054,1018,2.054,1019,2.054,1020,2.054,1021,2.054,1022,2.054,1023,2.054,1024,2.054,1025,2.054,1026,2.054,1027,3.181,1028,2.054,1029,2.34,1030,3.181,1031,3.181,1032,3.181,1033,3.181,1034,3.181,1035,3.181,1036,3.181]],["title/classes/User.html",[52,0.039,86,0.597]],["body/classes/User.html",[2,0.239,3,0.239,7,0.199,10,0.029,19,0.413,20,0.86,28,0.539,32,0.613,33,0.653,51,0.199,52,0.061,86,0.936,89,0.022,90,0.022,226,1.521,257,1.732,260,2.321,289,4.345,308,2.941,311,2.79,487,4.345,656,3.512,1037,3.338,1038,4.965,1039,4.965,1040,5.906,1041,4.965,1042,4.965,1043,4.965,1044,4.965,1045,3.97,1046,3.97,1047,3.97,1048,3.97,1049,3.97,1050,3.97,1051,3.97,1052,3.97,1053,3.97,1054,3.97,1055,3.97,1056,3.97]],["title/components/UserComponent.html",[0,0.3,83,0.757]],["body/components/UserComponent.html",[0,0.447,1,0.538,2,0.129,3,0.129,4,0.723,5,0.723,6,0.723,7,0.107,9,0.427,10,0.03,11,0.538,12,2.05,13,1.526,15,1.11,17,1.11,19,0.222,20,0.555,21,2.941,22,0.464,24,0.538,26,1.239,27,3.155,28,0.502,30,0.565,31,0.561,32,0.491,33,0.513,37,0.704,38,0.553,39,1.454,40,0.248,41,0.778,47,0.671,49,1.269,50,1.158,51,0.107,52,0.025,54,0.499,55,1.411,57,0.624,58,1.11,59,1.031,60,1.11,61,1.515,62,0.723,63,0.723,64,0.538,65,0.723,66,0.499,67,0.624,68,1.351,69,0.499,70,0.723,71,0.538,72,0.723,73,0.538,74,0.723,75,0.499,76,0.723,77,0.499,78,0.462,79,0.499,80,0.723,81,0.499,82,0.462,83,1.045,84,0.723,85,0.499,86,0.735,87,0.723,88,0.723,89,0.014,90,0.014,107,1.489,109,2.053,137,1.063,138,0.839,150,1.571,179,0.499,182,0.624,195,2.755,197,1.158,198,2.251,206,1.308,207,0.824,208,1.83,210,2.048,213,3.349,220,1.631,226,1.215,229,1.571,242,0.89,250,1.631,254,2.372,255,2.661,257,1.284,260,1.288,261,1.854,268,3.292,269,1.795,270,2.411,276,1.403,279,1.269,289,1.571,306,1.269,308,1.063,373,3.21,483,1.403,487,1.571,489,3.762,782,1.778,966,4.284,1010,1.795,1014,2.755,1038,4.059,1039,1.795,1041,1.795,1042,2.755,1043,1.795,1044,4.46,1057,1.795,1058,3.277,1059,3.277,1060,4.475,1061,4.475,1062,4.475,1063,4.475,1064,4.475,1065,4.475,1066,3.277,1067,4.475,1068,4.475,1069,3.989,1070,3.277,1071,2.135,1072,2.135,1073,2.135,1074,3.277,1075,2.135,1076,2.135,1077,3.277,1078,2.135,1079,2.135,1080,2.135,1081,2.135,1082,2.135,1083,2.135,1084,2.135,1085,2.135,1086,2.135,1087,2.135,1088,2.135,1089,2.135,1090,2.135,1091,2.135,1092,2.135,1093,3.277,1094,3.989,1095,2.135,1096,2.135,1097,3.277,1098,2.135,1099,2.135,1100,3.277,1101,2.135,1102,3.277,1103,2.135,1104,2.135,1105,2.135,1106,2.135,1107,2.135,1108,2.135,1109,3.277,1110,2.135,1111,4.475,1112,4.475,1113,3.277,1114,3.277,1115,3.277,1116,3.277,1117,3.277,1118,2.755,1119,2.755,1120,3.277]],["title/pipes/UserFilterData.html",[105,1.927,420,1.274]],["body/pipes/UserFilterData.html",[2,0.241,3,0.241,7,0.201,9,0.8,10,0.03,11,1.009,20,0.678,22,0.567,25,2.947,26,1.193,28,0.416,30,0.567,31,0.653,32,0.549,33,0.515,37,0.787,38,0.532,40,0.465,51,0.201,52,0.048,86,1.036,89,0.022,90,0.022,105,3.524,147,3.698,179,0.936,182,1.171,207,0.941,242,1.087,276,2.633,420,2.211,422,2.633,423,2.382,424,3.358,427,2.772,428,3.358,434,2.947,435,3.758,738,3.367,752,2.633,1121,4.729,1122,4.005,1123,4.005,1124,4.005,1125,4.005,1126,4.005,1127,4.005,1128,5.109,1129,5.925,1130,4.005,1131,4.005,1132,4.005]],["title/components/UsersListComponent.html",[0,0.3,85,0.757]],["body/components/UsersListComponent.html",[0,0.53,1,0.824,2,0.197,3,0.197,4,1.107,5,1.107,6,1.107,7,0.164,9,0.653,10,0.029,11,0.824,12,2.205,13,1.641,15,1.513,17,1.513,19,0.341,20,0.757,22,0.633,24,0.824,28,0.445,30,0.463,31,0.591,32,0.471,33,0.421,37,0.421,38,0.57,39,1.856,40,0.38,49,1.945,50,1.774,51,0.164,52,0.039,54,0.764,57,0.956,58,1.513,59,1.405,60,1.513,61,1.852,62,1.107,63,1.107,64,0.824,65,1.107,66,0.764,67,0.956,68,1.723,69,0.764,70,1.107,71,0.824,72,1.107,73,0.824,74,1.107,75,0.764,76,1.107,77,0.764,78,0.707,79,0.764,80,1.107,81,0.764,82,0.707,83,0.764,84,1.107,85,1.278,86,1.206,87,1.723,88,1.107,89,0.019,90,0.019,107,1.728,138,1.285,141,3.764,197,1.774,206,0.956,207,0.602,220,1.629,225,3.756,226,1.213,242,1.213,250,1.994,253,4.024,257,1.126,261,1.107,270,2.406,381,1.945,382,2.937,383,2.937,393,3.756,470,3.287,749,2.406,752,2.149,755,3.287,756,3.287,779,2.406,782,2.424,1118,3.756,1119,3.756,1133,4.815,1134,5.09,1135,3.27,1136,3.27,1137,4.468,1138,4.468,1139,4.468]],["title/coverage.html",[1140,3.733]],["body/coverage.html",[0,0.594,1,0.816,7,0.163,8,2.722,10,0.029,26,0.756,32,0.3,48,2.382,52,0.07,64,0.816,66,0.756,69,0.756,71,0.816,73,0.816,75,0.756,77,0.756,78,0.7,79,0.756,81,0.756,82,0.7,83,0.756,85,0.756,86,0.596,89,0.019,90,0.019,102,1.757,103,1.925,104,1.925,105,1.925,107,0.946,108,1.757,109,1.486,129,2.128,132,2.128,141,2.128,147,2.128,148,2.128,154,1.757,157,2.382,158,2.722,174,3.084,180,1.018,188,1.638,189,2.722,241,2.722,321,1.757,322,3.24,328,1.757,344,1.925,366,1.757,380,2.722,381,3.24,420,2.141,421,2.722,422,3.328,429,2.128,445,2.128,448,2.722,467,4.008,522,2.722,574,2.722,586,1.925,603,2.722,609,2.722,621,2.722,628,2.722,648,2.382,650,2.722,668,2.722,713,2.382,757,2.722,782,1.757,818,2.722,825,2.722,840,2.722,859,4.199,949,2.382,957,2.382,963,2.722,1029,3.725,1037,2.722,1057,2.722,1121,2.722,1133,2.722,1140,2.722,1141,3.238,1142,3.238,1143,3.238,1144,4.438,1145,3.731,1146,4.785,1147,6.505,1148,3.238,1149,3.238,1150,3.238,1151,3.238,1152,4.579,1153,5.448,1154,4.438,1155,4.438,1156,3.238,1157,3.238,1158,4.438,1159,3.238,1160,3.238,1161,3.238,1162,3.238,1163,3.238,1164,4.438,1165,3.238,1166,3.238,1167,3.731,1168,4.438,1169,2.722,1170,2.722,1171,4.438,1172,3.238,1173,3.238,1174,3.238,1175,3.238,1176,3.238,1177,3.238,1178,2.722,1179,3.731,1180,2.722,1181,3.731,1182,2.722,1183,3.238,1184,3.238]],["title/dependencies.html",[93,2.565,1185,2.698]],["body/dependencies.html",[10,0.029,40,0.561,47,1.518,89,0.024,90,0.024,93,3.173,95,1.897,115,4.818,116,3.767,120,1.897,121,2.048,137,2.404,1002,4.058,1186,4.828,1187,6.709,1188,4.828,1189,4.828,1190,4.828,1191,4.828,1192,4.828,1193,4.828,1194,4.828,1195,4.828,1196,4.828,1197,4.828,1198,4.828]],["title/index.html",[19,0.338,1199,2.725]],["body/index.html",[0,0.358,1,1.59,10,0.029,26,1.293,51,0.194,52,0.046,57,1.131,64,1.394,66,1.293,69,1.293,71,1.394,73,1.394,75,1.293,77,1.293,79,1.293,81,1.293,83,1.293,85,1.293,89,0.021,90,0.021,91,2.488,92,4.552,93,2.543,94,2.847,95,1.52,96,1.927,97,3.253,98,3.253,99,3.253,100,3.253,101,3.253,102,3.003,103,3.291,104,3.291,105,3.291,106,3.291,107,1.617,108,3.003,109,2.54,110,4.201,111,3.253,112,3.253,123,2.099,182,1.131,188,1.05,420,1.52,445,2.543,701,2.847,713,2.847,1029,2.847,1167,3.253,1199,3.253]],["title/modules.html",[91,2.211]],["body/modules.html",[10,0.025,89,0.025,90,0.025,91,2.602,92,3.435,106,3.108,116,3.435,347,3.108,1200,5.226,1201,6.003,1202,5.226,1203,5.226]],["title/routes.html",[123,2.41]],["body/routes.html",[10,0.026,89,0.026,90,0.026,123,2.895]],["title/miscellaneous/variables.html",[1146,2.871,1204,2.268]],["body/miscellaneous/variables.html",[10,0.03,19,0.29,32,0.535,48,3.433,50,2.166,89,0.017,90,0.017,174,2.715,179,1.09,180,0.875,182,1.49,206,1.787,207,1.126,208,1.832,210,2.289,226,0.756,311,2.796,322,1.655,332,3.047,337,1.51,342,1.829,344,2.775,345,1.829,346,1.829,347,1.655,352,3.34,391,2.936,423,3.519,429,3.547,442,1.829,453,2.34,467,2.048,648,3.433,782,2.532,785,2.936,859,2.048,949,3.433,950,4.721,951,4.285,952,4.285,953,4.285,954,4.285,955,4.285,956,4.537,957,3.433,1145,2.34,1146,2.048,1152,3.355,1169,3.923,1170,3.923,1178,2.34,1179,4.721,1180,2.34,1181,2.34,1182,3.923,1204,2.34,1205,4.667,1206,5.098,1207,3.991,1208,3.991,1209,2.783,1210,2.783,1211,2.783,1212,2.783,1213,2.783,1214,6.356,1215,5.098,1216,2.783,1217,2.783,1218,2.783,1219,2.783,1220,3.991,1221,5.616,1222,3.991,1223,5.098,1224,3.991,1225,3.991,1226,3.991,1227,3.991,1228,3.991,1229,3.991,1230,3.991,1231,5.397,1232,5.397,1233,5.397,1234,3.991,1235,3.991,1236,3.991,1237,3.991,1238,2.783,1239,2.783,1240,2.783,1241,2.783,1242,2.783,1243,2.783,1244,3.991]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"components/EventsListComponent.html":{},"pipes/FilterData.html":{},"injectables/GuardService.html":{},"injectables/I18n.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"classes/NotificationType.html":{},"injectables/NotificationsService.html":{},"classes/PagerService.html":{},"classes/Project.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"classes/User.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"components/UsersListComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{},"pipes/FilterData.html":{},"components/MenuComponent.html":{},"components/ProjectComponent.html":{},"pipes/SortData.html":{},"components/TaskComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.8.19",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1164,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"components/EventsListComponent.html":{},"pipes/FilterData.html":{},"injectables/I18n.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"classes/PagerService.html":{},"components/ProjectComponent.html":{},"pipes/SortData.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"miscellaneous/variables.html":{}}}],["1).slice(0",{"_index":999,"title":{},"body":{"components/TasksListComponent.html":{}}}],["1.1.2",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":1171,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":1172,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["1/17",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["1/23",{"_index":1173,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1163,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1166,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1177,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1157,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1168,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1000,"title":{},"body":{"components/TasksListComponent.html":{}}}],["100",{"_index":1152,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":701,"title":{},"body":{"components/ProjectComponent.html":{},"components/TaskComponent.html":{},"index.html":{}}}],["14",{"_index":1167,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["16",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["19/29",{"_index":1161,"title":{},"body":{"coverage.html":{}}}],["1900",{"_index":698,"title":{},"body":{"components/ProjectComponent.html":{}}}],["2",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"pipes/FilterData.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"classes/PagerService.html":{},"pipes/SortData.html":{},"components/TaskComponent.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["2.4.1",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1176,"title":{},"body":{"coverage.html":{}}}],["2099",{"_index":700,"title":{},"body":{"components/ProjectComponent.html":{}}}],["25",{"_index":1165,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":442,"title":{},"body":{"pipes/FilterData.html":{},"components/MenuComponent.html":{},"pipes/SortData.html":{},"miscellaneous/variables.html":{}}}],["30",{"_index":498,"title":{},"body":{"components/LoginComponent.html":{}}}],["3000",{"_index":601,"title":{},"body":{"components/NotificationComponent.html":{}}}],["31",{"_index":702,"title":{},"body":{"components/ProjectComponent.html":{}}}],["33",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["380687771953",{"_index":521,"title":{},"body":{"components/LoginComponent.html":{}}}],["4",{"_index":445,"title":{},"body":{"pipes/FilterData.html":{},"classes/PagerService.html":{},"coverage.html":{},"index.html":{}}}],["5",{"_index":628,"title":{},"body":{"classes/PagerService.html":{},"coverage.html":{}}}],["5.2.0",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["5.5.6",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":496,"title":{},"body":{"components/LoginComponent.html":{}}}],["500",{"_index":600,"title":{},"body":{"components/NotificationComponent.html":{}}}],["55",{"_index":502,"title":{},"body":{"components/LoginComponent.html":{}}}],["6",{"_index":713,"title":{},"body":{"components/ProjectComponent.html":{},"coverage.html":{},"index.html":{}}}],["604800000",{"_index":444,"title":{},"body":{"pipes/FilterData.html":{}}}],["65",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1029,"title":{},"body":{"components/TasksListComponent.html":{},"coverage.html":{},"index.html":{}}}],["70",{"_index":500,"title":{},"body":{"components/LoginComponent.html":{}}}],["9",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":631,"title":{},"body":{"classes/PagerService.html":{}}}],["_.range(startpag",{"_index":647,"title":{},"body":{"classes/PagerService.html":{}}}],["_i18n",{"_index":330,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{}}}],["_notificationservic",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["_notifservic",{"_index":1069,"title":{},"body":{"components/UserComponent.html":{}}}],["_notifsservic",{"_index":583,"title":{},"body":{"components/NotificationComponent.html":{}}}],["a.nam",{"_index":836,"title":{},"body":{"pipes/SortData.html":{}}}],["a.statu",{"_index":838,"title":{},"body":{"pipes/SortData.html":{}}}],["absolut",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accept",{"_index":528,"title":{},"body":{"components/MenuComponent.html":{}}}],["accept(id",{"_index":534,"title":{},"body":{"components/MenuComponent.html":{}}}],["action",{"_index":310,"title":{},"body":{"components/CommentsComponent.html":{},"components/TaskComponent.html":{}}}],["activatedrout",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{}}}],["activatedroutesnapshot",{"_index":452,"title":{},"body":{"injectables/GuardService.html":{}}}],["actual_compon",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["after(d",{"_index":893,"title":{},"body":{"components/TaskComponent.html":{}}}],["alreadi",{"_index":351,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{}}}],["angular",{"_index":354,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{}}}],["angular/anim",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/EventsListComponent.html":{},"injectables/GuardService.html":{}}}],["angular/compil",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"components/EventsListComponent.html":{},"pipes/FilterData.html":{},"injectables/GuardService.html":{},"injectables/I18n.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"injectables/NotificationsService.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"components/UsersListComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"components/CommentsComponent.html":{},"components/LoginComponent.html":{},"components/ProjectComponent.html":{},"components/TaskComponent.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/GuardService.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["anim",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectsListComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{},"miscellaneous/variables.html":{}}}],["animate('0.3",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animate('100m",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"components/EventsListComponent.html":{},"injectables/I18n.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["app.compon",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{},"coverage.html":{},"index.html":{}}}],["appearancetrigg",{"_index":782,"title":{},"body":{"components/ProjectsListComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appmodul",{"_index":92,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["apppag",{"_index":157,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodul",{"_index":106,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["arr",{"_index":563,"title":{},"body":{"components/MenuComponent.html":{}}}],["array",{"_index":644,"title":{},"body":{"classes/PagerService.html":{}}}],["assets/avatar.jpg",{"_index":1098,"title":{},"body":{"components/UserComponent.html":{}}}],["auth.servic",{"_index":456,"title":{},"body":{"injectables/GuardService.html":{}}}],["author",{"_index":286,"title":{},"body":{"components/CommentsComponent.html":{},"classes/Project.html":{},"components/ProjectComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{}}}],["authorid",{"_index":841,"title":{},"body":{"classes/Task.html":{},"components/TaskComponent.html":{}}}],["authservic",{"_index":26,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"injectables/GuardService.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"coverage.html":{},"index.html":{}}}],["authservice.currentus",{"_index":1125,"title":{},"body":{"pipes/UserFilterData.html":{}}}],["avail",{"_index":1203,"title":{},"body":{"modules.html":{}}}],["away",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b",{"_index":830,"title":{},"body":{"pipes/SortData.html":{}}}],["b.name",{"_index":837,"title":{},"body":{"pipes/SortData.html":{}}}],["b.statu",{"_index":839,"title":{},"body":{"pipes/SortData.html":{}}}],["backdrop",{"_index":811,"title":{},"body":{"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{}}}],["befor",{"_index":957,"title":{},"body":{"components/TaskComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["before(d",{"_index":894,"title":{},"body":{"components/TaskComponent.html":{}}}],["belong",{"_index":704,"title":{},"body":{"components/ProjectComponent.html":{}}}],["bezier(.35,0,.25,1",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bindproject",{"_index":761,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["bindproject(project",{"_index":767,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["bodi",{"_index":285,"title":{},"body":{"components/CommentsComponent.html":{},"classes/NotificationType.html":{}}}],["boolean",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"components/ProjectComponent.html":{},"components/TaskComponent.html":{},"components/UserComponent.html":{}}}],["booster",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["bootstrap",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"dependencies.html":{},"index.html":{}}}],["bootstrap/ng",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"dependencies.html":{}}}],["bottom",{"_index":784,"title":{},"body":{"components/ProjectsListComponent.html":{},"components/TasksListComponent.html":{}}}],["break",{"_index":592,"title":{},"body":{"components/NotificationComponent.html":{}}}],["brows",{"_index":1201,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":164,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/anim",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":313,"title":{},"body":{"components/CommentsComponent.html":{},"components/TaskComponent.html":{}}}],["c",{"_index":831,"title":{},"body":{"pipes/SortData.html":{}}}],["calcul",{"_index":633,"title":{},"body":{"classes/PagerService.html":{}}}],["calendar",{"_index":875,"title":{},"body":{"components/TaskComponent.html":{}}}],["calendar.getnext(calendar.gettoday",{"_index":909,"title":{},"body":{"components/TaskComponent.html":{}}}],["canactiv",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/GuardService.html":{}}}],["canactivate(rout",{"_index":451,"title":{},"body":{"injectables/GuardService.html":{}}}],["case",{"_index":435,"title":{},"body":{"pipes/FilterData.html":{},"components/NotificationComponent.html":{},"pipes/UserFilterData.html":{}}}],["catch(this.dataservice.handleerror",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{}}}],["center",{"_index":1007,"title":{},"body":{"components/TasksListComponent.html":{}}}],["checkedproject",{"_index":759,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["checkedproject.nam",{"_index":816,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["class",{"_index":52,"title":{"classes/AppPage.html":{},"classes/NotificationType.html":{},"classes/PagerService.html":{},"classes/Project.html":{},"classes/Task.html":{},"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"components/EventsListComponent.html":{},"pipes/FilterData.html":{},"injectables/GuardService.html":{},"injectables/I18n.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"classes/NotificationType.html":{},"injectables/NotificationsService.html":{},"classes/PagerService.html":{},"classes/Project.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"classes/User.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"components/UsersListComponent.html":{},"coverage.html":{},"index.html":{}}}],["click",{"_index":810,"title":{},"body":{"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{}}}],["cluster_appmodul",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declar",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_import",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_provid",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["comment",{"_index":243,"title":{},"body":{"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/MenuComponent.html":{}}}],["comment.author",{"_index":316,"title":{},"body":{"components/CommentsComponent.html":{}}}],["comment.bodi",{"_index":319,"title":{},"body":{"components/CommentsComponent.html":{}}}],["comment.d",{"_index":317,"title":{},"body":{"components/CommentsComponent.html":{}}}],["commentelem",{"_index":246,"title":{},"body":{"components/CommentsComponent.html":{}}}],["comments'},{'nam",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["comments.component.css",{"_index":244,"title":{},"body":{"components/CommentsComponent.html":{}}}],["comments.component.html",{"_index":245,"title":{},"body":{"components/CommentsComponent.html":{}}}],["comments/comments.compon",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["commentscompon",{"_index":64,"title":{"components/CommentsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{},"coverage.html":{},"index.html":{}}}],["commentsform",{"_index":247,"title":{},"body":{"components/CommentsComponent.html":{}}}],["commentsform?.value.author",{"_index":320,"title":{},"body":{"components/CommentsComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_templ",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["config",{"_index":678,"title":{},"body":{"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TasksListComponent.html":{}}}],["config.markdis",{"_index":710,"title":{},"body":{"components/ProjectComponent.html":{}}}],["config.maxd",{"_index":699,"title":{},"body":{"components/ProjectComponent.html":{}}}],["config.mind",{"_index":697,"title":{},"body":{"components/ProjectComponent.html":{}}}],["config.outsideday",{"_index":706,"title":{},"body":{"components/ProjectComponent.html":{}}}],["config.plac",{"_index":783,"title":{},"body":{"components/ProjectsListComponent.html":{},"components/TasksListComponent.html":{}}}],["configtab",{"_index":974,"title":{},"body":{"components/TasksListComponent.html":{}}}],["configtabs.justifi",{"_index":1006,"title":{},"body":{"components/TasksListComponent.html":{}}}],["configtabs.typ",{"_index":1008,"title":{},"body":{"components/TasksListComponent.html":{}}}],["console.log",{"_index":276,"title":{},"body":{"components/CommentsComponent.html":{},"components/TaskComponent.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{}}}],["console.log('error",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('hello",{"_index":567,"title":{},"body":{"components/MenuComponent.html":{}}}],["console.log(`clos",{"_index":796,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["console.log(data",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(err",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(project.id",{"_index":792,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["console.log(r",{"_index":306,"title":{},"body":{"components/CommentsComponent.html":{},"components/MenuComponent.html":{},"components/ProjectComponent.html":{},"components/TaskComponent.html":{},"components/UserComponent.html":{}}}],["console.log(res[i].managerid",{"_index":733,"title":{},"body":{"components/ProjectComponent.html":{}}}],["console.log(result",{"_index":730,"title":{},"body":{"components/ProjectComponent.html":{}}}],["console.log(task",{"_index":740,"title":{},"body":{"components/ProjectComponent.html":{}}}],["console.log(this.loginform.valu",{"_index":518,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(this.pag",{"_index":412,"title":{},"body":{"components/EventsListComponent.html":{}}}],["console.log(this.userform.getrawvalu",{"_index":1105,"title":{},"body":{"components/UserComponent.html":{}}}],["const",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"components/ProjectComponent.html":{},"components/TaskComponent.html":{}}}],["constructor",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"components/EventsListComponent.html":{},"injectables/GuardService.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"classes/NotificationType.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["constructor(_i18n",{"_index":327,"title":{},"body":{"injectables/CustomDatepicker.html":{}}}],["constructor(_notifsservic",{"_index":578,"title":{},"body":{"components/NotificationComponent.html":{}}}],["constructor(activatedrout",{"_index":874,"title":{},"body":{"components/TaskComponent.html":{}}}],["constructor(authservic",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/MenuComponent.html":{},"pipes/UserFilterData.html":{}}}],["constructor(bodi",{"_index":604,"title":{},"body":{"classes/NotificationType.html":{}}}],["constructor(dataservic",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/ProjectsListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["constructor(fb",{"_index":474,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(priv",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"components/EventsListComponent.html":{},"injectables/GuardService.html":{},"injectables/I18n.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["constructor(rout",{"_index":449,"title":{},"body":{"injectables/GuardService.html":{},"components/ProjectComponent.html":{},"components/TasksListComponent.html":{}}}],["contain",{"_index":506,"title":{},"body":{"components/LoginComponent.html":{}}}],["container\").mousemove(funct",{"_index":492,"title":{},"body":{"components/LoginComponent.html":{}}}],["content",{"_index":688,"title":{},"body":{"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{}}}],["context",{"_index":1182,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continu",{"_index":549,"title":{},"body":{"components/MenuComponent.html":{},"components/ProjectsListComponent.html":{}}}],["control",{"_index":646,"title":{},"body":{"classes/PagerService.html":{}}}],["core",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":1140,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":643,"title":{},"body":{"classes/PagerService.html":{}}}],["createtask",{"_index":969,"title":{},"body":{"components/TasksListComponent.html":{}}}],["createus",{"_index":1063,"title":{},"body":{"components/UserComponent.html":{}}}],["cubic",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":413,"title":{},"body":{"components/EventsListComponent.html":{},"components/ProjectComponent.html":{}}}],["currentpag",{"_index":624,"title":{},"body":{"classes/PagerService.html":{}}}],["currentpage+2",{"_index":637,"title":{},"body":{"classes/PagerService.html":{}}}],["currentus",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"components/MenuComponent.html":{}}}],["currentuser.lastnam",{"_index":573,"title":{},"body":{"components/MenuComponent.html":{}}}],["custom",{"_index":356,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"components/ProjectComponent.html":{}}}],["customdatepick",{"_index":321,"title":{"injectables/CustomDatepicker.html":{}},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"components/TaskComponent.html":{},"coverage.html":{}}}],["d",{"_index":711,"title":{},"body":{"components/ProjectComponent.html":{},"pipes/SortData.html":{},"components/TaskComponent.html":{}}}],["d.getday",{"_index":712,"title":{},"body":{"components/ProjectComponent.html":{}}}],["d/m/yi",{"_index":1032,"title":{},"body":{"components/TasksListComponent.html":{}}}],["data",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{}}}],["data.pip",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"components/TasksListComponent.html":{}}}],["data.pipe.t",{"_index":422,"title":{},"body":{"pipes/FilterData.html":{},"pipes/SortData.html":{},"pipes/UserFilterData.html":{},"coverage.html":{}}}],["data.pipe.ts:10",{"_index":426,"title":{},"body":{"pipes/FilterData.html":{},"pipes/SortData.html":{}}}],["data.pipe.ts:12",{"_index":1123,"title":{},"body":{"pipes/UserFilterData.html":{}}}],["data.pipe.ts:17",{"_index":1122,"title":{},"body":{"pipes/UserFilterData.html":{}}}],["data.servic",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{}}}],["dataoper",{"_index":964,"title":{},"body":{"components/TasksListComponent.html":{}}}],["dataservic",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"injectables/GuardService.html":{},"components/MenuComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{},"coverage.html":{},"index.html":{}}}],["date",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"pipes/FilterData.html":{},"injectables/I18n.html":{},"classes/Project.html":{},"components/ProjectComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"classes/User.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{},"miscellaneous/variables.html":{}}}],["date(a.datecompletion).valueof",{"_index":832,"title":{},"body":{"pipes/SortData.html":{}}}],["date(b.datecompletion).valueof",{"_index":833,"title":{},"body":{"pipes/SortData.html":{}}}],["date(date.getfullyear",{"_index":439,"title":{},"body":{"pipes/FilterData.html":{}}}],["date(date.year",{"_index":375,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"components/ProjectComponent.html":{}}}],["date(now.getfullyear",{"_index":431,"title":{},"body":{"pipes/FilterData.html":{}}}],["date(res[\"datecomplet",{"_index":920,"title":{},"body":{"components/TaskComponent.html":{}}}],["date(res[\"datecr",{"_index":914,"title":{},"body":{"components/TaskComponent.html":{}}}],["date(res[\"datestart",{"_index":918,"title":{},"body":{"components/TaskComponent.html":{}}}],["date(task.datecomplet",{"_index":437,"title":{},"body":{"pipes/FilterData.html":{}}}],["date.day",{"_index":363,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"components/ProjectComponent.html":{},"components/TaskComponent.html":{}}}],["date.getd",{"_index":372,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"pipes/FilterData.html":{},"injectables/I18n.html":{}}}],["date.getfullyear",{"_index":368,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{}}}],["date.getmonth",{"_index":370,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"pipes/FilterData.html":{},"injectables/I18n.html":{}}}],["date.month",{"_index":364,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"components/ProjectComponent.html":{}}}],["date.year",{"_index":365,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{}}}],["date:\"mm/dd/yi",{"_index":318,"title":{},"body":{"components/CommentsComponent.html":{}}}],["datebirthday",{"_index":1089,"title":{},"body":{"components/UserComponent.html":{}}}],["datecomplet",{"_index":651,"title":{},"body":{"classes/Project.html":{},"components/ProjectComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{}}}],["datecr",{"_index":652,"title":{},"body":{"classes/Project.html":{},"components/ProjectComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{}}}],["dateoper",{"_index":366,"title":{"injectables/DateOperations.html":{}},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"components/TaskComponent.html":{},"coverage.html":{}}}],["datepick",{"_index":696,"title":{},"body":{"components/ProjectComponent.html":{}}}],["datestart",{"_index":842,"title":{},"body":{"classes/Task.html":{},"components/TaskComponent.html":{}}}],["day",{"_index":371,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"components/ProjectComponent.html":{},"components/TaskComponent.html":{}}}],["dd/m/yyyi",{"_index":1119,"title":{},"body":{"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["dd/mm/yyyi",{"_index":960,"title":{},"body":{"components/TaskComponent.html":{}}}],["debouncetim",{"_index":1003,"title":{},"body":{"components/TasksListComponent.html":{}}}],["debouncetime(200",{"_index":994,"title":{},"body":{"components/TasksListComponent.html":{}}}],["declar",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["decor",{"_index":269,"title":{},"body":{"components/CommentsComponent.html":{},"components/UserComponent.html":{}}}],["default",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"injectables/I18n.html":{},"components/MenuComponent.html":{},"injectables/NotificationsService.html":{},"classes/PagerService.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"components/EventsListComponent.html":{},"pipes/FilterData.html":{},"injectables/GuardService.html":{},"injectables/I18n.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"classes/NotificationType.html":{},"injectables/NotificationsService.html":{},"classes/PagerService.html":{},"classes/Project.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"classes/User.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"components/UsersListComponent.html":{}}}],["deletecom",{"_index":248,"title":{},"body":{"components/CommentsComponent.html":{}}}],["deletecomment(id",{"_index":258,"title":{},"body":{"components/CommentsComponent.html":{}}}],["deleteproject",{"_index":762,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["deleteproject(project",{"_index":769,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["deletetask",{"_index":970,"title":{},"body":{"components/TasksListComponent.html":{}}}],["deletetask(task",{"_index":978,"title":{},"body":{"components/TasksListComponent.html":{}}}],["deleteus",{"_index":1064,"title":{},"body":{"components/UserComponent.html":{}}}],["depend",{"_index":93,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["depth",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["desc",{"_index":653,"title":{},"body":{"classes/Project.html":{},"components/ProjectComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{}}}],["descript",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"components/EventsListComponent.html":{},"pipes/FilterData.html":{},"injectables/GuardService.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"components/UsersListComponent.html":{}}}],["direct",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["disabl",{"_index":709,"title":{},"body":{"components/ProjectComponent.html":{},"components/TaskComponent.html":{}}}],["document",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["don't",{"_index":703,"title":{},"body":{"components/ProjectComponent.html":{}}}],["dynam",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":493,"title":{},"body":{"components/LoginComponent.html":{}}}],["e.pagex",{"_index":508,"title":{},"body":{"components/LoginComponent.html":{}}}],["e.pagey",{"_index":511,"title":{},"body":{"components/LoginComponent.html":{}}}],["e2e/app.po.t",{"_index":158,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/app.po.ts:4",{"_index":162,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/app.po.ts:8",{"_index":161,"title":{},"body":{"classes/AppPage.html":{}}}],["editus",{"_index":1065,"title":{},"body":{"components/UserComponent.html":{}}}],["element",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["element(by.css('app",{"_index":165,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":268,"title":{},"body":{"components/CommentsComponent.html":{},"components/NotificationComponent.html":{},"components/UserComponent.html":{}}}],["elref",{"_index":579,"title":{},"body":{"components/NotificationComponent.html":{}}}],["email",{"_index":1038,"title":{},"body":{"classes/User.html":{},"components/UserComponent.html":{}}}],["end",{"_index":639,"title":{},"body":{"classes/PagerService.html":{}}}],["endindex",{"_index":641,"title":{},"body":{"classes/PagerService.html":{}}}],["endpag",{"_index":636,"title":{},"body":{"classes/PagerService.html":{}}}],["enter",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environ",{"_index":1179,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":949,"title":{},"body":{"components/TaskComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["equals(d",{"_index":888,"title":{},"body":{"components/TaskComponent.html":{}}}],["err",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"components/TaskComponent.html":{},"components/UserComponent.html":{}}}],["error",{"_index":593,"title":{},"body":{"components/NotificationComponent.html":{},"components/ProjectsListComponent.html":{}}}],["errormessag",{"_index":470,"title":{},"body":{"components/LoginComponent.html":{},"components/ProjectsListComponent.html":{},"components/UsersListComponent.html":{}}}],["esc",{"_index":808,"title":{},"body":{"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{}}}],["event",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["eventemitt",{"_index":481,"title":{},"body":{"components/LoginComponent.html":{},"injectables/NotificationsService.html":{}}}],["eventslistcompon",{"_index":66,"title":{"components/EventsListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{},"coverage.html":{},"index.html":{}}}],["export",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"components/EventsListComponent.html":{},"pipes/FilterData.html":{},"injectables/GuardService.html":{},"injectables/I18n.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"classes/NotificationType.html":{},"injectables/NotificationsService.html":{},"classes/PagerService.html":{},"classes/Project.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"classes/User.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"components/UsersListComponent.html":{},"index.html":{}}}],["extend",{"_index":358,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{}}}],["fals",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"injectables/GuardService.html":{},"components/MenuComponent.html":{},"components/ProjectComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":254,"title":{},"body":{"components/CommentsComponent.html":{},"components/LoginComponent.html":{},"components/ProjectComponent.html":{},"components/TaskComponent.html":{},"components/UserComponent.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"components/EventsListComponent.html":{},"pipes/FilterData.html":{},"injectables/GuardService.html":{},"injectables/I18n.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"classes/NotificationType.html":{},"injectables/NotificationsService.html":{},"classes/PagerService.html":{},"classes/Project.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"classes/User.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"components/UsersListComponent.html":{},"coverage.html":{}}}],["filter",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"pipes/FilterData.html":{},"pipes/UserFilterData.html":{},"coverage.html":{}}}],["filterdata",{"_index":102,"title":{"pipes/FilterData.html":{}},"body":{"modules/AppModule.html":{},"pipes/FilterData.html":{},"components/TasksListComponent.html":{},"coverage.html":{},"index.html":{}}}],["filtertyp",{"_index":425,"title":{},"body":{"pipes/FilterData.html":{},"components/TasksListComponent.html":{}}}],["firstnam",{"_index":1039,"title":{},"body":{"classes/User.html":{},"components/UserComponent.html":{}}}],["fixedproject",{"_index":526,"title":{},"body":{"components/MenuComponent.html":{}}}],["form",{"_index":471,"title":{},"body":{"components/LoginComponent.html":{}}}],["formatt",{"_index":965,"title":{},"body":{"components/TasksListComponent.html":{}}}],["formbuild",{"_index":255,"title":{},"body":{"components/CommentsComponent.html":{},"components/LoginComponent.html":{},"components/ProjectComponent.html":{},"components/TaskComponent.html":{},"components/UserComponent.html":{}}}],["formgroup",{"_index":478,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodul",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["fromdat",{"_index":862,"title":{},"body":{"components/TaskComponent.html":{}}}],["frommodel",{"_index":376,"title":{},"body":{"injectables/DateOperations.html":{}}}],["frommodel(d",{"_index":367,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{}}}],["full",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":503,"title":{},"body":{"components/LoginComponent.html":{}}}],["getcom",{"_index":249,"title":{},"body":{"components/CommentsComponent.html":{}}}],["getcurrentus",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"components/UserComponent.html":{}}}],["getcurrentuser(id",{"_index":1074,"title":{},"body":{"components/UserComponent.html":{}}}],["getdayarialabel",{"_index":323,"title":{},"body":{"injectables/CustomDatepicker.html":{}}}],["getdayarialabel(d",{"_index":331,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{}}}],["getdepth",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["getdepth(outlet",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["getdismissreason",{"_index":763,"title":{},"body":{"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{}}}],["getdismissreason(reason",{"_index":771,"title":{},"body":{"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{}}}],["getev",{"_index":529,"title":{},"body":{"components/MenuComponent.html":{}}}],["getfixedproject",{"_index":530,"title":{},"body":{"components/MenuComponent.html":{}}}],["getmonthfullnam",{"_index":324,"title":{},"body":{"injectables/CustomDatepicker.html":{}}}],["getmonthfullname(month",{"_index":334,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{}}}],["getmonthshortnam",{"_index":325,"title":{},"body":{"injectables/CustomDatepicker.html":{}}}],["getmonthshortname(month",{"_index":338,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{}}}],["getnotif",{"_index":611,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getpag",{"_index":622,"title":{},"body":{"classes/PagerService.html":{}}}],["getpager(totalitem",{"_index":623,"title":{},"body":{"classes/PagerService.html":{}}}],["getparagraphtext",{"_index":159,"title":{},"body":{"classes/AppPage.html":{}}}],["getproject",{"_index":764,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["gettask",{"_index":971,"title":{},"body":{"components/TasksListComponent.html":{}}}],["gettasks(id",{"_index":980,"title":{},"body":{"components/TasksListComponent.html":{}}}],["getus",{"_index":674,"title":{},"body":{"components/ProjectComponent.html":{},"components/TaskComponent.html":{}}}],["getusersinproject",{"_index":765,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["getusersinproject(id",{"_index":774,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["getweekdayshortnam",{"_index":326,"title":{},"body":{"injectables/CustomDatepicker.html":{}}}],["getweekdayshortname(weekday",{"_index":340,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{}}}],["goback",{"_index":675,"title":{},"body":{"components/ProjectComponent.html":{}}}],["graph",{"_index":1202,"title":{},"body":{"modules.html":{}}}],["group",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guardservic",{"_index":108,"title":{"injectables/GuardService.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/GuardService.html":{},"coverage.html":{},"index.html":{}}}],["h1')).gettext",{"_index":166,"title":{},"body":{"classes/AppPage.html":{}}}],["height",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hh:mm",{"_index":1118,"title":{},"body":{"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["hidden",{"_index":707,"title":{},"body":{"components/ProjectComponent.html":{}}}],["hide",{"_index":598,"title":{},"body":{"components/NotificationComponent.html":{}}}],["hold",{"_index":349,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{}}}],["hoveredd",{"_index":863,"title":{},"body":{"components/TaskComponent.html":{}}}],["html",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["http",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{}}}],["httpclient",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/EventsListComponent.html":{},"injectables/GuardService.html":{}}}],["httpclientmodul",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["i18n",{"_index":328,"title":{"injectables/I18n.html":{}},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"components/TaskComponent.html":{},"coverage.html":{}}}],["i18n_valu",{"_index":344,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["i18n_values[this._i18n.language].months[month",{"_index":361,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{}}}],["i18n_values[this._i18n.language].weekdays[weekday",{"_index":360,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{}}}],["id",{"_index":260,"title":{},"body":{"components/CommentsComponent.html":{},"components/MenuComponent.html":{},"classes/Project.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"classes/User.html":{},"components/UserComponent.html":{}}}],["identifi",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["if(!c",{"_index":834,"title":{},"body":{"pipes/SortData.html":{}}}],["if(!d",{"_index":835,"title":{},"body":{"pipes/SortData.html":{}}}],["img",{"_index":497,"title":{},"body":{"components/LoginComponent.html":{},"components/ProjectsListComponent.html":{}}}],["imglink",{"_index":289,"title":{},"body":{"components/CommentsComponent.html":{},"classes/User.html":{},"components/UserComponent.html":{}}}],["implement",{"_index":242,"title":{},"body":{"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"pipes/FilterData.html":{},"injectables/GuardService.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"components/UsersListComponent.html":{}}}],["import",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"components/EventsListComponent.html":{},"pipes/FilterData.html":{},"injectables/GuardService.html":{},"injectables/I18n.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"injectables/NotificationsService.html":{},"classes/PagerService.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"components/UsersListComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"components/EventsListComponent.html":{},"injectables/GuardService.html":{},"injectables/I18n.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"classes/NotificationType.html":{},"injectables/NotificationsService.html":{},"classes/PagerService.html":{},"classes/Project.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"classes/User.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"components/EventsListComponent.html":{},"pipes/FilterData.html":{},"injectables/GuardService.html":{},"injectables/I18n.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"classes/NotificationType.html":{},"injectables/NotificationsService.html":{},"classes/PagerService.html":{},"classes/Project.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"classes/User.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"components/UsersListComponent.html":{}}}],["inject",{"_index":188,"title":{"injectables/AuthService.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/GuardService.html":{},"injectables/I18n.html":{},"injectables/NotificationsService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/GuardService.html":{},"injectables/I18n.html":{},"injectables/NotificationsService.html":{},"components/TaskComponent.html":{},"coverage.html":{},"index.html":{}}}],["input",{"_index":253,"title":{},"body":{"components/CommentsComponent.html":{},"components/TaskComponent.html":{},"components/UsersListComponent.html":{}}}],["isadmin",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["iseditus",{"_index":1060,"title":{},"body":{"components/UserComponent.html":{}}}],["isfrom",{"_index":864,"title":{},"body":{"components/TaskComponent.html":{}}}],["ishov",{"_index":865,"title":{},"body":{"components/TaskComponent.html":{}}}],["isinsid",{"_index":866,"title":{},"body":{"components/TaskComponent.html":{}}}],["islogin",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["ismanag",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnewus",{"_index":1061,"title":{},"body":{"components/UserComponent.html":{}}}],["isto",{"_index":867,"title":{},"body":{"components/TaskComponent.html":{}}}],["iswork",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"components/TaskComponent.html":{}}}],["item",{"_index":394,"title":{},"body":{"components/EventsListComponent.html":{},"classes/PagerService.html":{}}}],["j",{"_index":801,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["jqueri",{"_index":1169,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jquery:ani",{"_index":484,"title":{},"body":{"components/LoginComponent.html":{}}}],["js",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["languag",{"_index":346,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"miscellaneous/variables.html":{}}}],["laquo",{"_index":417,"title":{},"body":{"components/EventsListComponent.html":{}}}],["lastestlogind",{"_index":1040,"title":{},"body":{"classes/User.html":{}}}],["lastnam",{"_index":1041,"title":{},"body":{"classes/User.html":{},"components/UserComponent.html":{}}}],["latestlogind",{"_index":1090,"title":{},"body":{"components/UserComponent.html":{}}}],["leav",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["left",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{},"index.html":{}}}],["length",{"_index":558,"title":{},"body":{"components/MenuComponent.html":{}}}],["list",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["list'},{'nam",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["list.compon",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["list.component.css",{"_index":382,"title":{},"body":{"components/EventsListComponent.html":{},"components/ProjectsListComponent.html":{},"components/TasksListComponent.html":{},"components/UsersListComponent.html":{}}}],["list.component.html",{"_index":383,"title":{},"body":{"components/EventsListComponent.html":{},"components/ProjectsListComponent.html":{},"components/TasksListComponent.html":{},"components/UsersListComponent.html":{}}}],["list.component.t",{"_index":381,"title":{},"body":{"components/EventsListComponent.html":{},"components/ProjectsListComponent.html":{},"components/TasksListComponent.html":{},"components/UsersListComponent.html":{},"coverage.html":{}}}],["list.component.ts:101",{"_index":772,"title":{},"body":{"components/ProjectsListComponent.html":{},"components/TasksListComponent.html":{}}}],["list.component.ts:108",{"_index":990,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list.component.ts:16",{"_index":1135,"title":{},"body":{"components/UsersListComponent.html":{}}}],["list.component.ts:17",{"_index":392,"title":{},"body":{"components/EventsListComponent.html":{}}}],["list.component.ts:19",{"_index":393,"title":{},"body":{"components/EventsListComponent.html":{},"components/UsersListComponent.html":{}}}],["list.component.ts:21",{"_index":778,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["list.component.ts:22",{"_index":387,"title":{},"body":{"components/EventsListComponent.html":{},"components/ProjectsListComponent.html":{},"components/TasksListComponent.html":{}}}],["list.component.ts:23",{"_index":779,"title":{},"body":{"components/ProjectsListComponent.html":{},"components/TasksListComponent.html":{},"components/UsersListComponent.html":{}}}],["list.component.ts:24",{"_index":1001,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list.component.ts:25",{"_index":766,"title":{},"body":{"components/ProjectsListComponent.html":{},"components/TasksListComponent.html":{}}}],["list.component.ts:26",{"_index":388,"title":{},"body":{"components/EventsListComponent.html":{},"components/TasksListComponent.html":{}}}],["list.component.ts:30",{"_index":988,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list.component.ts:31",{"_index":776,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["list.component.ts:34",{"_index":976,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list.component.ts:35",{"_index":773,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["list.component.ts:43",{"_index":982,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list.component.ts:45",{"_index":770,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["list.component.ts:51",{"_index":768,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["list.component.ts:53",{"_index":390,"title":{},"body":{"components/EventsListComponent.html":{}}}],["list.component.ts:55",{"_index":981,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list.component.ts:56",{"_index":777,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["list.component.ts:67",{"_index":775,"title":{},"body":{"components/ProjectsListComponent.html":{},"components/TasksListComponent.html":{}}}],["list.component.ts:71",{"_index":977,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list.component.ts:75",{"_index":979,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list.component.ts:95",{"_index":985,"title":{},"body":{"components/TasksListComponent.html":{}}}],["list/ev",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EventsListComponent.html":{},"coverage.html":{}}}],["list/project",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProjectsListComponent.html":{},"coverage.html":{}}}],["list/task",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TasksListComponent.html":{},"coverage.html":{}}}],["list/us",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/UsersListComponent.html":{},"coverage.html":{}}}],["locale_id",{"_index":355,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{}}}],["login",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'nam",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["login(data",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":468,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":469,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincompon",{"_index":69,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{},"coverage.html":{},"index.html":{}}}],["loginform",{"_index":472,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginus",{"_index":473,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":531,"title":{},"body":{"components/MenuComponent.html":{}}}],["lt",{"_index":418,"title":{},"body":{"components/EventsListComponent.html":{}}}],["manag",{"_index":654,"title":{},"body":{"classes/Project.html":{},"components/ProjectComponent.html":{}}}],["managerid",{"_index":655,"title":{},"body":{"classes/Project.html":{},"components/ProjectComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{}}}],["map",{"_index":1004,"title":{},"body":{"components/TasksListComponent.html":{}}}],["map(term",{"_index":995,"title":{},"body":{"components/TasksListComponent.html":{}}}],["match",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"components/EventsListComponent.html":{},"pipes/FilterData.html":{},"injectables/GuardService.html":{},"injectables/I18n.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"classes/NotificationType.html":{},"injectables/NotificationsService.html":{},"classes/PagerService.html":{},"classes/Project.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"classes/User.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"components/UsersListComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalitem",{"_index":635,"title":{},"body":{"classes/PagerService.html":{}}}],["math.min(startindex",{"_index":642,"title":{},"body":{"classes/PagerService.html":{}}}],["menu",{"_index":523,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu'},{'nam",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["menu.component.css",{"_index":524,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.html",{"_index":525,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu/menu.compon",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["menucompon",{"_index":71,"title":{"components/MenuComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{},"coverage.html":{},"index.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"pipes/FilterData.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"components/UsersListComponent.html":{}}}],["method",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"components/EventsListComponent.html":{},"pipes/FilterData.html":{},"injectables/GuardService.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"injectables/NotificationsService.html":{},"classes/PagerService.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"components/UsersListComponent.html":{}}}],["miscellan",{"_index":1204,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["misire351@gmail.com",{"_index":520,"title":{},"body":{"components/LoginComponent.html":{}}}],["modaldismissreason",{"_index":780,"title":{},"body":{"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{}}}],["modaldismissreasons.backdrop_click",{"_index":809,"title":{},"body":{"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{}}}],["modaldismissreasons.esc",{"_index":806,"title":{},"body":{"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{}}}],["modalservic",{"_index":680,"title":{},"body":{"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{}}}],["model",{"_index":868,"title":{},"body":{"components/TaskComponent.html":{}}}],["models/notif",{"_index":618,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["modul",{"_index":91,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["month",{"_index":337,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"components/ProjectComponent.html":{},"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["movement",{"_index":505,"title":{},"body":{"components/LoginComponent.html":{}}}],["msg",{"_index":966,"title":{},"body":{"components/TasksListComponent.html":{},"components/UserComponent.html":{}}}],["mytodolist",{"_index":967,"title":{},"body":{"components/TasksListComponent.html":{}}}],["name",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"components/EventsListComponent.html":{},"pipes/FilterData.html":{},"injectables/GuardService.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"classes/NotificationType.html":{},"injectables/NotificationsService.html":{},"classes/PagerService.html":{},"classes/Project.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"components/UsersListComponent.html":{}}}],["navigateto",{"_index":160,"title":{},"body":{"classes/AppPage.html":{}}}],["new",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"pipes/FilterData.html":{},"injectables/I18n.html":{},"injectables/NotificationsService.html":{},"components/ProjectComponent.html":{},"pipes/SortData.html":{},"components/TaskComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newproject",{"_index":671,"title":{},"body":{"components/ProjectComponent.html":{}}}],["newtask",{"_index":869,"title":{},"body":{"components/TaskComponent.html":{}}}],["nexttask",{"_index":798,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["ng",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"classes/PagerService.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"dependencies.html":{}}}],["ngbcalendar",{"_index":876,"title":{},"body":{"components/TaskComponent.html":{}}}],["ngbdatepickerconfig",{"_index":679,"title":{},"body":{"components/ProjectComponent.html":{}}}],["ngbdatepickeri18n",{"_index":343,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"components/TaskComponent.html":{}}}],["ngbdatestruct",{"_index":332,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"components/ProjectComponent.html":{},"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["ngbdropdownconfig",{"_index":758,"title":{},"body":{"components/ProjectsListComponent.html":{},"components/TasksListComponent.html":{}}}],["ngbmodal",{"_index":681,"title":{},"body":{"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{}}}],["ngbmodul",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbmodule.forroot",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbtabsetconfig",{"_index":975,"title":{},"body":{"components/TasksListComponent.html":{}}}],["ngmodul",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":250,"title":{},"body":{"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["note",{"_index":1042,"title":{},"body":{"classes/User.html":{},"components/UserComponent.html":{}}}],["note.valu",{"_index":1107,"title":{},"body":{"components/UserComponent.html":{}}}],["notif",{"_index":308,"title":{},"body":{"components/CommentsComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"injectables/NotificationsService.html":{},"components/TaskComponent.html":{},"classes/User.html":{},"components/UserComponent.html":{}}}],["notif.act",{"_index":571,"title":{},"body":{"components/MenuComponent.html":{}}}],["notif.author",{"_index":570,"title":{},"body":{"components/MenuComponent.html":{}}}],["notif.object.nam",{"_index":572,"title":{},"body":{"components/MenuComponent.html":{}}}],["notif.typ",{"_index":590,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notifcount",{"_index":527,"title":{},"body":{"components/MenuComponent.html":{}}}],["notification'},{'nam",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["notification.component.css",{"_index":575,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notification.component.html",{"_index":576,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notification/notification.compon",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["notification?.bodi",{"_index":602,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notificationcompon",{"_index":73,"title":{"components/NotificationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{},"coverage.html":{},"index.html":{}}}],["notifications.servic",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["notificationsservic",{"_index":109,"title":{"injectables/NotificationsService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/NotificationComponent.html":{},"injectables/NotificationsService.html":{},"components/UserComponent.html":{},"coverage.html":{},"index.html":{}}}],["notificationtyp",{"_index":586,"title":{"classes/NotificationType.html":{}},"body":{"components/NotificationComponent.html":{},"classes/NotificationType.html":{},"injectables/NotificationsService.html":{},"coverage.html":{}}}],["notificationtype(notif",{"_index":619,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notifuserid",{"_index":266,"title":{},"body":{"components/CommentsComponent.html":{}}}],["now",{"_index":429,"title":{},"body":{"pipes/FilterData.html":{},"components/TaskComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["now.getd",{"_index":433,"title":{},"body":{"pipes/FilterData.html":{},"components/TaskComponent.html":{}}}],["now.getfullyear",{"_index":898,"title":{},"body":{"components/TaskComponent.html":{}}}],["now.getmonth",{"_index":432,"title":{},"body":{"pipes/FilterData.html":{},"components/TaskComponent.html":{}}}],["null",{"_index":373,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"components/MenuComponent.html":{},"components/TaskComponent.html":{},"components/UserComponent.html":{}}}],["number",{"_index":335,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"components/EventsListComponent.html":{},"injectables/I18n.html":{},"components/MenuComponent.html":{},"classes/NotificationType.html":{},"classes/PagerService.html":{},"classes/Project.html":{}}}],["object",{"_index":311,"title":{},"body":{"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"classes/PagerService.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":992,"title":{},"body":{"components/TasksListComponent.html":{}}}],["on",{"_index":352,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["ondateselect",{"_index":872,"title":{},"body":{"components/TaskComponent.html":{}}}],["ondateselection(d",{"_index":881,"title":{},"body":{"components/TaskComponent.html":{}}}],["one.day",{"_index":956,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["one.month",{"_index":954,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["one.year",{"_index":952,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["oninit",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["onnotifchang",{"_index":610,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["opac",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":676,"title":{},"body":{"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{}}}],["open(cont",{"_index":686,"title":{},"body":{"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{}}}],["opentask",{"_index":972,"title":{},"body":{"components/TasksListComponent.html":{}}}],["opentask(id",{"_index":983,"title":{},"body":{"components/TasksListComponent.html":{}}}],["option",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"components/EventsListComponent.html":{},"pipes/FilterData.html":{},"injectables/GuardService.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"classes/NotificationType.html":{},"injectables/NotificationsService.html":{},"classes/PagerService.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"classes/User.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"components/UsersListComponent.html":{}}}],["order",{"_index":828,"title":{},"body":{"pipes/SortData.html":{}}}],["out",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["outlet",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["outlet.activatedroutedata['depth",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["output",{"_index":482,"title":{},"body":{"components/LoginComponent.html":{}}}],["overview",{"_index":1199,"title":{"index.html":{}},"body":{"index.html":{}}}],["p",{"_index":941,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksListComponent.html":{}}}],["p['taskquant",{"_index":942,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksListComponent.html":{}}}],["packag",{"_index":1185,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":391,"title":{},"body":{"components/EventsListComponent.html":{},"classes/PagerService.html":{},"miscellaneous/variables.html":{}}}],["pageditem",{"_index":384,"title":{},"body":{"components/EventsListComponent.html":{}}}],["pager",{"_index":385,"title":{},"body":{"components/EventsListComponent.html":{},"classes/PagerService.html":{}}}],["pagerservic",{"_index":154,"title":{"classes/PagerService.html":{}},"body":{"modules/AppModule.html":{},"components/EventsListComponent.html":{},"classes/PagerService.html":{},"components/TasksListComponent.html":{},"coverage.html":{}}}],["pages",{"_index":625,"title":{},"body":{"classes/PagerService.html":{}}}],["paralax",{"_index":491,"title":{},"body":{"components/LoginComponent.html":{}}}],["paralax_desc",{"_index":501,"title":{},"body":{"components/LoginComponent.html":{}}}],["paralax_slid",{"_index":495,"title":{},"body":{"components/LoginComponent.html":{}}}],["paralax_titl",{"_index":499,"title":{},"body":{"components/LoginComponent.html":{}}}],["parallaxit(",{"_index":494,"title":{},"body":{"components/LoginComponent.html":{}}}],["paramet",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"components/EventsListComponent.html":{},"pipes/FilterData.html":{},"injectables/GuardService.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"classes/NotificationType.html":{},"injectables/NotificationsService.html":{},"classes/PagerService.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"components/UsersListComponent.html":{}}}],["params[\"id",{"_index":1013,"title":{},"body":{"components/TasksListComponent.html":{}}}],["params[\"userid",{"_index":1091,"title":{},"body":{"components/UserComponent.html":{}}}],["pass",{"_index":490,"title":{},"body":{"components/LoginComponent.html":{}}}],["password",{"_index":489,"title":{},"body":{"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["path",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["phone",{"_index":1043,"title":{},"body":{"classes/User.html":{},"components/UserComponent.html":{}}}],["pill",{"_index":1009,"title":{},"body":{"components/TasksListComponent.html":{}}}],["pipe",{"_index":420,"title":{"pipes/FilterData.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"pipes/UserFilterData.html":{}},"body":{"pipes/FilterData.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"pipes/UserFilterData.html":{},"coverage.html":{},"index.html":{}}}],["pipetransform",{"_index":428,"title":{},"body":{"pipes/FilterData.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"pipes/UserFilterData.html":{}}}],["posit",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["press",{"_index":807,"title":{},"body":{"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{}}}],["prevurl",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["privat",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"injectables/GuardService.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"injectables/NotificationsService.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{}}}],["probabl",{"_index":350,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{}}}],["product",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":78,"title":{"classes/Project.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"injectables/GuardService.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"classes/Project.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{},"coverage.html":{}}}],["project'},{'nam",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["project.component.css",{"_index":669,"title":{},"body":{"components/ProjectComponent.html":{}}}],["project.component.html",{"_index":670,"title":{},"body":{"components/ProjectComponent.html":{}}}],["project.manag",{"_index":815,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["project.managerid",{"_index":1132,"title":{},"body":{"pipes/UserFilterData.html":{}}}],["project.nam",{"_index":812,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["project.projectnam",{"_index":569,"title":{},"body":{"components/MenuComponent.html":{}}}],["project.statu",{"_index":814,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["project.taskquant",{"_index":813,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["project/project.compon",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["projectcompon",{"_index":75,"title":{"components/ProjectComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{},"coverage.html":{},"index.html":{}}}],["projectform",{"_index":672,"title":{},"body":{"components/ProjectComponent.html":{}}}],["projectform?.value.manag",{"_index":753,"title":{},"body":{"components/ProjectComponent.html":{}}}],["projectid",{"_index":843,"title":{},"body":{"classes/Task.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{}}}],["projectnam",{"_index":844,"title":{},"body":{"classes/Task.html":{},"components/TaskComponent.html":{}}}],["projects/:id",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["projects/:id/task",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["projects/:id/tasks/:taskid",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["projects/:id/tasks/new",{"_index":186,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["projectslistcompon",{"_index":77,"title":{"components/ProjectsListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{},"coverage.html":{},"index.html":{}}}],["properti",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"injectables/I18n.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"classes/NotificationType.html":{},"injectables/NotificationsService.html":{},"classes/PagerService.html":{},"classes/Project.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"classes/User.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"components/UsersListComponent.html":{}}}],["protractor",{"_index":163,"title":{},"body":{"classes/AppPage.html":{}}}],["provid",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"index.html":{}}}],["pushnotif",{"_index":251,"title":{},"body":{"components/CommentsComponent.html":{}}}],["pushnotification(notifuserid",{"_index":264,"title":{},"body":{"components/CommentsComponent.html":{}}}],["query(':ent",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["query(':leav",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["r.name",{"_index":1030,"title":{},"body":{"components/TasksListComponent.html":{}}}],["raquo",{"_index":419,"title":{},"body":{"components/EventsListComponent.html":{}}}],["re",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"injectables/GuardService.html":{},"components/MenuComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["reactiveformsmodul",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["reason",{"_index":748,"title":{},"body":{"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{}}}],["redirectto",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["relativeto",{"_index":921,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksListComponent.html":{}}}],["reli",{"_index":510,"title":{},"body":{"components/LoginComponent.html":{}}}],["relx",{"_index":507,"title":{},"body":{"components/LoginComponent.html":{}}}],["render",{"_index":580,"title":{},"body":{"components/NotificationComponent.html":{}}}],["renderer2",{"_index":581,"title":{},"body":{"components/NotificationComponent.html":{}}}],["repeat",{"_index":645,"title":{},"body":{"classes/PagerService.html":{}}}],["requir",{"_index":648,"title":{},"body":{"classes/PagerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.length",{"_index":1021,"title":{},"body":{"components/TasksListComponent.html":{}}}],["res.uid",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["res[\"datestart",{"_index":915,"title":{},"body":{"components/TaskComponent.html":{}}}],["res[\"managerid",{"_index":300,"title":{},"body":{"components/CommentsComponent.html":{},"components/ProjectComponent.html":{},"components/TaskComponent.html":{}}}],["res[\"nam",{"_index":936,"title":{},"body":{"components/TaskComponent.html":{}}}],["res[\"notif",{"_index":557,"title":{},"body":{"components/MenuComponent.html":{}}}],["res[\"notifications\"].length",{"_index":559,"title":{},"body":{"components/MenuComponent.html":{}}}],["res[\"rol",{"_index":458,"title":{},"body":{"injectables/GuardService.html":{}}}],["res['id",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{}}}],["res[i",{"_index":737,"title":{},"body":{"components/ProjectComponent.html":{}}}],["res[i].managerid",{"_index":736,"title":{},"body":{"components/ProjectComponent.html":{}}}],["res[i].projectid",{"_index":734,"title":{},"body":{"components/ProjectComponent.html":{}}}],["res[i].rol",{"_index":948,"title":{},"body":{"components/TaskComponent.html":{}}}],["res[i][\"act",{"_index":405,"title":{},"body":{"components/EventsListComponent.html":{},"components/MenuComponent.html":{}}}],["res[i][\"projectnam",{"_index":398,"title":{},"body":{"components/EventsListComponent.html":{},"components/MenuComponent.html":{}}}],["res[i][\"rol",{"_index":750,"title":{},"body":{"components/ProjectComponent.html":{}}}],["res[i][\"tasknam",{"_index":397,"title":{},"body":{"components/EventsListComponent.html":{},"components/MenuComponent.html":{}}}],["res[i][\"us",{"_index":404,"title":{},"body":{"components/EventsListComponent.html":{},"components/MenuComponent.html":{}}}],["res[i][\"workerid",{"_index":799,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["res[i]['act",{"_index":400,"title":{},"body":{"components/EventsListComponent.html":{},"components/MenuComponent.html":{}}}],["res[i]['projectnam",{"_index":402,"title":{},"body":{"components/EventsListComponent.html":{},"components/MenuComponent.html":{}}}],["res[i]['tasknam",{"_index":401,"title":{},"body":{"components/EventsListComponent.html":{},"components/MenuComponent.html":{}}}],["res[i]['us",{"_index":399,"title":{},"body":{"components/EventsListComponent.html":{},"components/MenuComponent.html":{}}}],["reset",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["resp",{"_index":940,"title":{},"body":{"components/TaskComponent.html":{}}}],["respons",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{},"components/TaskComponent.html":{}}}],["result",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"components/EventsListComponent.html":{},"pipes/FilterData.html":{},"injectables/GuardService.html":{},"injectables/I18n.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"classes/NotificationType.html":{},"injectables/NotificationsService.html":{},"classes/PagerService.html":{},"classes/Project.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"classes/User.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"components/UsersListComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.id",{"_index":735,"title":{},"body":{"components/ProjectComponent.html":{}}}],["result.managerid",{"_index":731,"title":{},"body":{"components/ProjectComponent.html":{}}}],["result[\"firstnam",{"_index":747,"title":{},"body":{"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{}}}],["result[\"id",{"_index":744,"title":{},"body":{"components/ProjectComponent.html":{},"components/TaskComponent.html":{}}}],["result[\"imglink",{"_index":805,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["result[\"lastnam",{"_index":746,"title":{},"body":{"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{}}}],["return",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"components/EventsListComponent.html":{},"pipes/FilterData.html":{},"injectables/GuardService.html":{},"injectables/I18n.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"injectables/NotificationsService.html":{},"classes/PagerService.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"components/UsersListComponent.html":{}}}],["reveal",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["right",{"_index":785,"title":{},"body":{"components/ProjectsListComponent.html":{},"components/TasksListComponent.html":{},"miscellaneous/variables.html":{}}}],["role",{"_index":1044,"title":{},"body":{"classes/User.html":{},"components/UserComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{}}}],["root'},{'nam",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["rout",{"_index":123,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/GuardService.html":{},"index.html":{},"routes.html":{}}}],["routeanimationtrigg",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{}}}],["routermodul",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":187,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":454,"title":{},"body":{"injectables/GuardService.html":{}}}],["routing.modul",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ru",{"_index":345,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"miscellaneous/variables.html":{}}}],["rxj",{"_index":1002,"title":{},"body":{"components/TasksListComponent.html":{},"dependencies.html":{}}}],["rxjs/add/observable/of",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["rxjs/add/observable/throw",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["rxjs/add/operator/catch",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["rxjs/add/operator/map",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["rxjs/add/operator/topromis",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["rxjs/oper",{"_index":1005,"title":{},"body":{"components/TasksListComponent.html":{}}}],["savenot",{"_index":1066,"title":{},"body":{"components/UserComponent.html":{}}}],["savenotes(not",{"_index":1077,"title":{},"body":{"components/UserComponent.html":{}}}],["saveproject",{"_index":677,"title":{},"body":{"components/ProjectComponent.html":{}}}],["savetask",{"_index":873,"title":{},"body":{"components/TaskComponent.html":{}}}],["saveus",{"_index":1067,"title":{},"body":{"components/UserComponent.html":{}}}],["scale(1",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scale(2",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search",{"_index":819,"title":{},"body":{"pipes/SearchPipe.html":{},"components/TasksListComponent.html":{}}}],["searchphras",{"_index":1134,"title":{},"body":{"components/UsersListComponent.html":{}}}],["searchpip",{"_index":103,"title":{"pipes/SearchPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/SearchPipe.html":{},"coverage.html":{},"index.html":{}}}],["searchpras",{"_index":820,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["sendcom",{"_index":252,"title":{},"body":{"components/CommentsComponent.html":{}}}],["servic",{"_index":348,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"components/EventsListComponent.html":{},"injectables/I18n.html":{}}}],["services/auth.servic",{"_index":1124,"title":{},"body":{"pipes/UserFilterData.html":{}}}],["sessionstorage.getitem(\"id",{"_index":457,"title":{},"body":{"injectables/GuardService.html":{}}}],["sessionstorage.getitem(\"id\")).map((r",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{}}}],["sessionstorage.removeitem('id",{"_index":551,"title":{},"body":{"components/MenuComponent.html":{}}}],["sessionstorage.setitem('id",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["setnotif",{"_index":612,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["setnotification(notif",{"_index":614,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["setpag",{"_index":386,"title":{},"body":{"components/EventsListComponent.html":{}}}],["setpage(pag",{"_index":389,"title":{},"body":{"components/EventsListComponent.html":{}}}],["settimeout",{"_index":597,"title":{},"body":{"components/NotificationComponent.html":{}}}],["shared/anim",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectsListComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["shared/models/notif",{"_index":587,"title":{},"body":{"components/NotificationComponent.html":{}}}],["shared/models/project",{"_index":781,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["shared/models/task",{"_index":907,"title":{},"body":{"components/TaskComponent.html":{}}}],["shared/models/us",{"_index":1136,"title":{},"body":{"components/UsersListComponent.html":{}}}],["shared/pipes/filt",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"components/TasksListComponent.html":{}}}],["shared/pipes/search.pip",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/pipes/sort",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/pipes/us",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/services/auth.servic",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{}}}],["shared/services/calendar.servic",{"_index":906,"title":{},"body":{"components/TaskComponent.html":{}}}],["shared/services/data.servic",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/MenuComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["shared/services/guard.servic",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["shared/services/notifications.servic",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"components/NotificationComponent.html":{},"components/UserComponent.html":{}}}],["shared/services/pager.servic",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"components/EventsListComponent.html":{},"components/TasksListComponent.html":{}}}],["short",{"_index":961,"title":{},"body":{"components/TaskComponent.html":{}}}],["show",{"_index":596,"title":{},"body":{"components/NotificationComponent.html":{}}}],["shownotif",{"_index":577,"title":{},"body":{"components/NotificationComponent.html":{}}}],["sort",{"_index":826,"title":{},"body":{"pipes/SortData.html":{}}}],["sortdata",{"_index":104,"title":{"pipes/SortData.html":{}},"body":{"modules/AppModule.html":{},"pipes/SortData.html":{},"coverage.html":{},"index.html":{}}}],["sortfunc",{"_index":973,"title":{},"body":{"components/TasksListComponent.html":{}}}],["sortfunc(typ",{"_index":984,"title":{},"body":{"components/TasksListComponent.html":{}}}],["sortord",{"_index":987,"title":{},"body":{"components/TasksListComponent.html":{}}}],["sorttyp",{"_index":986,"title":{},"body":{"components/TasksListComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"components/EventsListComponent.html":{},"pipes/FilterData.html":{},"injectables/GuardService.html":{},"injectables/I18n.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"classes/NotificationType.html":{},"injectables/NotificationsService.html":{},"classes/PagerService.html":{},"classes/Project.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"classes/User.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"components/UsersListComponent.html":{}}}],["spec\\.t",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../animations.t",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../calendar.service.t",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../login.component.t",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../task.component.t",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:21",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/comments/comments.component.t",{"_index":241,"title":{},"body":{"components/CommentsComponent.html":{},"coverage.html":{}}}],["src/app/comments/comments.component.ts:18",{"_index":272,"title":{},"body":{"components/CommentsComponent.html":{}}}],["src/app/comments/comments.component.ts:19",{"_index":273,"title":{},"body":{"components/CommentsComponent.html":{}}}],["src/app/comments/comments.component.ts:20",{"_index":271,"title":{},"body":{"components/CommentsComponent.html":{}}}],["src/app/comments/comments.component.ts:23",{"_index":256,"title":{},"body":{"components/CommentsComponent.html":{}}}],["src/app/comments/comments.component.ts:27",{"_index":263,"title":{},"body":{"components/CommentsComponent.html":{}}}],["src/app/comments/comments.component.ts:43",{"_index":262,"title":{},"body":{"components/CommentsComponent.html":{}}}],["src/app/comments/comments.component.ts:51",{"_index":267,"title":{},"body":{"components/CommentsComponent.html":{}}}],["src/app/comments/comments.component.ts:78",{"_index":259,"title":{},"body":{"components/CommentsComponent.html":{}}}],["src/app/comments/comments.component.ts:88",{"_index":265,"title":{},"body":{"components/CommentsComponent.html":{}}}],["src/app/ev",{"_index":380,"title":{},"body":{"components/EventsListComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.t",{"_index":467,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/login/login.component.ts:28",{"_index":479,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:30",{"_index":480,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:31",{"_index":475,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:35",{"_index":477,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:60",{"_index":476,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/menu/menu.component.t",{"_index":522,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["src/app/menu/menu.component.ts:107",{"_index":535,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/menu/menu.component.ts:16",{"_index":542,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/menu/menu.component.ts:17",{"_index":541,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/menu/menu.component.ts:18",{"_index":543,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/menu/menu.component.ts:19",{"_index":544,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/menu/menu.component.ts:20",{"_index":533,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/menu/menu.component.ts:25",{"_index":539,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/menu/menu.component.ts:37",{"_index":538,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/menu/menu.component.ts:44",{"_index":537,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/menu/menu.component.ts:53",{"_index":536,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/menu/menu.component.ts:79",{"_index":540,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/notification/notification.component.t",{"_index":574,"title":{},"body":{"components/NotificationComponent.html":{},"coverage.html":{}}}],["src/app/notification/notification.component.ts:11",{"_index":582,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/notification/notification.component.ts:16",{"_index":584,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/notification/notification.component.ts:47",{"_index":585,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/project",{"_index":757,"title":{},"body":{"components/ProjectsListComponent.html":{},"coverage.html":{}}}],["src/app/project/project.component.t",{"_index":668,"title":{},"body":{"components/ProjectComponent.html":{},"coverage.html":{}}}],["src/app/project/project.component.ts:128",{"_index":687,"title":{},"body":{"components/ProjectComponent.html":{}}}],["src/app/project/project.component.ts:136",{"_index":683,"title":{},"body":{"components/ProjectComponent.html":{}}}],["src/app/project/project.component.ts:17",{"_index":692,"title":{},"body":{"components/ProjectComponent.html":{}}}],["src/app/project/project.component.ts:18",{"_index":693,"title":{},"body":{"components/ProjectComponent.html":{}}}],["src/app/project/project.component.ts:19",{"_index":695,"title":{},"body":{"components/ProjectComponent.html":{}}}],["src/app/project/project.component.ts:20",{"_index":690,"title":{},"body":{"components/ProjectComponent.html":{}}}],["src/app/project/project.component.ts:21",{"_index":691,"title":{},"body":{"components/ProjectComponent.html":{}}}],["src/app/project/project.component.ts:23",{"_index":694,"title":{},"body":{"components/ProjectComponent.html":{}}}],["src/app/project/project.component.ts:24",{"_index":682,"title":{},"body":{"components/ProjectComponent.html":{}}}],["src/app/project/project.component.ts:45",{"_index":685,"title":{},"body":{"components/ProjectComponent.html":{}}}],["src/app/project/project.component.ts:78",{"_index":684,"title":{},"body":{"components/ProjectComponent.html":{}}}],["src/app/project/project.component.ts:82",{"_index":689,"title":{},"body":{"components/ProjectComponent.html":{}}}],["src/app/shared/animations.t",{"_index":1145,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/models/notification.t",{"_index":603,"title":{},"body":{"classes/NotificationType.html":{},"coverage.html":{}}}],["src/app/shared/models/notification.ts:2",{"_index":606,"title":{},"body":{"classes/NotificationType.html":{}}}],["src/app/shared/models/notification.ts:3",{"_index":605,"title":{},"body":{"classes/NotificationType.html":{}}}],["src/app/shared/models/projects.t",{"_index":650,"title":{},"body":{"classes/Project.html":{},"coverage.html":{}}}],["src/app/shared/models/projects.ts:10",{"_index":659,"title":{},"body":{"classes/Project.html":{}}}],["src/app/shared/models/projects.ts:11",{"_index":664,"title":{},"body":{"classes/Project.html":{}}}],["src/app/shared/models/projects.ts:12",{"_index":663,"title":{},"body":{"classes/Project.html":{}}}],["src/app/shared/models/projects.ts:3",{"_index":665,"title":{},"body":{"classes/Project.html":{}}}],["src/app/shared/models/projects.ts:4",{"_index":661,"title":{},"body":{"classes/Project.html":{}}}],["src/app/shared/models/projects.ts:5",{"_index":666,"title":{},"body":{"classes/Project.html":{}}}],["src/app/shared/models/projects.ts:6",{"_index":658,"title":{},"body":{"classes/Project.html":{}}}],["src/app/shared/models/projects.ts:7",{"_index":662,"title":{},"body":{"classes/Project.html":{}}}],["src/app/shared/models/projects.ts:8",{"_index":667,"title":{},"body":{"classes/Project.html":{}}}],["src/app/shared/models/projects.ts:9",{"_index":660,"title":{},"body":{"classes/Project.html":{}}}],["src/app/shared/models/task.t",{"_index":840,"title":{},"body":{"classes/Task.html":{},"coverage.html":{}}}],["src/app/shared/models/task.ts:10",{"_index":848,"title":{},"body":{"classes/Task.html":{}}}],["src/app/shared/models/task.ts:11",{"_index":849,"title":{},"body":{"classes/Task.html":{}}}],["src/app/shared/models/task.ts:12",{"_index":847,"title":{},"body":{"classes/Task.html":{}}}],["src/app/shared/models/task.ts:13",{"_index":855,"title":{},"body":{"classes/Task.html":{}}}],["src/app/shared/models/task.ts:14",{"_index":852,"title":{},"body":{"classes/Task.html":{}}}],["src/app/shared/models/task.ts:15",{"_index":851,"title":{},"body":{"classes/Task.html":{}}}],["src/app/shared/models/task.ts:2",{"_index":853,"title":{},"body":{"classes/Task.html":{}}}],["src/app/shared/models/task.ts:3",{"_index":850,"title":{},"body":{"classes/Task.html":{}}}],["src/app/shared/models/task.ts:4",{"_index":854,"title":{},"body":{"classes/Task.html":{}}}],["src/app/shared/models/task.ts:5",{"_index":856,"title":{},"body":{"classes/Task.html":{}}}],["src/app/shared/models/task.ts:6",{"_index":857,"title":{},"body":{"classes/Task.html":{}}}],["src/app/shared/models/task.ts:7",{"_index":858,"title":{},"body":{"classes/Task.html":{}}}],["src/app/shared/models/task.ts:8",{"_index":845,"title":{},"body":{"classes/Task.html":{}}}],["src/app/shared/models/task.ts:9",{"_index":846,"title":{},"body":{"classes/Task.html":{}}}],["src/app/shared/models/user.t",{"_index":1037,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/shared/models/user.ts:10",{"_index":1054,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/user.ts:11",{"_index":1055,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/user.ts:12",{"_index":1056,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/user.ts:13",{"_index":1051,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/user.ts:2",{"_index":1045,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/user.ts:3",{"_index":1046,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/user.ts:4",{"_index":1047,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/user.ts:5",{"_index":1048,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/user.ts:6",{"_index":1050,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/user.ts:7",{"_index":1049,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/user.ts:8",{"_index":1052,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/user.ts:9",{"_index":1053,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/pipes/filt",{"_index":421,"title":{},"body":{"pipes/FilterData.html":{},"coverage.html":{}}}],["src/app/shared/pipes/search.pipe.t",{"_index":818,"title":{},"body":{"pipes/SearchPipe.html":{},"coverage.html":{}}}],["src/app/shared/pipes/search.pipe.ts:12",{"_index":821,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["src/app/shared/pipes/sort",{"_index":825,"title":{},"body":{"pipes/SortData.html":{},"coverage.html":{}}}],["src/app/shared/pipes/us",{"_index":1121,"title":{},"body":{"pipes/UserFilterData.html":{},"coverage.html":{}}}],["src/app/shared/services/auth.service.t",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/shared/services/auth.service.ts:12",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:13",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:15",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:20",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:21",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:22",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:24",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:51",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:65",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/calendar.service.t",{"_index":322,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/services/calendar.service.ts:17",{"_index":466,"title":{},"body":{"injectables/I18n.html":{}}}],["src/app/shared/services/calendar.service.ts:25",{"_index":329,"title":{},"body":{"injectables/CustomDatepicker.html":{}}}],["src/app/shared/services/calendar.service.ts:31",{"_index":341,"title":{},"body":{"injectables/CustomDatepicker.html":{}}}],["src/app/shared/services/calendar.service.ts:34",{"_index":339,"title":{},"body":{"injectables/CustomDatepicker.html":{}}}],["src/app/shared/services/calendar.service.ts:37",{"_index":336,"title":{},"body":{"injectables/CustomDatepicker.html":{}}}],["src/app/shared/services/calendar.service.ts:41",{"_index":333,"title":{},"body":{"injectables/CustomDatepicker.html":{}}}],["src/app/shared/services/calendar.service.ts:48",{"_index":378,"title":{},"body":{"injectables/DateOperations.html":{}}}],["src/app/shared/services/calendar.service.ts:52",{"_index":379,"title":{},"body":{"injectables/DateOperations.html":{}}}],["src/app/shared/services/data.service.t",{"_index":1159,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/services/guard.service.t",{"_index":448,"title":{},"body":{"injectables/GuardService.html":{},"coverage.html":{}}}],["src/app/shared/services/guard.service.ts:11",{"_index":450,"title":{},"body":{"injectables/GuardService.html":{}}}],["src/app/shared/services/guard.service.ts:16",{"_index":455,"title":{},"body":{"injectables/GuardService.html":{}}}],["src/app/shared/services/notifications.service.t",{"_index":609,"title":{},"body":{"injectables/NotificationsService.html":{},"coverage.html":{}}}],["src/app/shared/services/notifications.service.ts:10",{"_index":615,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/shared/services/notifications.service.ts:16",{"_index":613,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/shared/services/notifications.service.ts:6",{"_index":616,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/shared/services/notifications.service.ts:8",{"_index":617,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/shared/services/pager.service.t",{"_index":621,"title":{},"body":{"classes/PagerService.html":{},"coverage.html":{}}}],["src/app/shared/services/pager.service.ts:4",{"_index":626,"title":{},"body":{"classes/PagerService.html":{}}}],["src/app/task",{"_index":963,"title":{},"body":{"components/TasksListComponent.html":{},"coverage.html":{}}}],["src/app/task/task.component.t",{"_index":859,"title":{},"body":{"components/TaskComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/task/task.component.ts:186",{"_index":883,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/task/task.component.ts:195",{"_index":879,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/task/task.component.ts:212",{"_index":878,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/task/task.component.ts:22",{"_index":902,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/task/task.component.ts:226",{"_index":887,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/task/task.component.ts:227",{"_index":886,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/task/task.component.ts:228",{"_index":904,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/task/task.component.ts:23",{"_index":903,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/task/task.component.ts:231",{"_index":882,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/task/task.component.ts:24",{"_index":901,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/task/task.component.ts:244",{"_index":895,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/task/task.component.ts:245",{"_index":896,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/task/task.component.ts:246",{"_index":890,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/task/task.component.ts:247",{"_index":897,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/task/task.component.ts:25",{"_index":905,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/task/task.component.ts:26",{"_index":900,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/task/task.component.ts:28",{"_index":899,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/task/task.component.ts:29",{"_index":885,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/task/task.component.ts:31",{"_index":877,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/task/task.component.ts:39",{"_index":880,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/task/task.component.ts:93",{"_index":884,"title":{},"body":{"components/TaskComponent.html":{}}}],["src/app/us",{"_index":1133,"title":{},"body":{"components/UsersListComponent.html":{},"coverage.html":{}}}],["src/app/user/user.component.t",{"_index":1057,"title":{},"body":{"components/UserComponent.html":{},"coverage.html":{}}}],["src/app/user/user.component.ts:108",{"_index":1071,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:19",{"_index":1086,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:20",{"_index":1085,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:21",{"_index":1084,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:22",{"_index":1082,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:23",{"_index":1081,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:24",{"_index":1083,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:25",{"_index":1070,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:29",{"_index":1076,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:58",{"_index":1073,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:63",{"_index":1079,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:76",{"_index":1072,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:82",{"_index":1075,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:94",{"_index":1078,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/user/user.component.ts:99",{"_index":1080,"title":{},"body":{"components/UserComponent.html":{}}}],["src/environments/environment.prod.t",{"_index":1178,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1180,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1181,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":638,"title":{},"body":{"classes/PagerService.html":{}}}],["startindex",{"_index":640,"title":{},"body":{"classes/PagerService.html":{}}}],["startpag",{"_index":630,"title":{},"body":{"classes/PagerService.html":{}}}],["state",{"_index":453,"title":{},"body":{"injectables/GuardService.html":{},"miscellaneous/variables.html":{}}}],["state('void",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state[\"url",{"_index":464,"title":{},"body":{"injectables/GuardService.html":{}}}],["statement",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":656,"title":{},"body":{"classes/Project.html":{},"components/ProjectComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"classes/User.html":{}}}],["status",{"_index":673,"title":{},"body":{"components/ProjectComponent.html":{},"components/TaskComponent.html":{}}}],["string",{"_index":257,"title":{},"body":{"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"components/EventsListComponent.html":{},"injectables/I18n.html":{},"components/MenuComponent.html":{},"classes/NotificationType.html":{},"classes/Project.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"classes/User.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["stringarr",{"_index":396,"title":{},"body":{"components/EventsListComponent.html":{},"components/MenuComponent.html":{}}}],["stringarr.push(str",{"_index":403,"title":{},"body":{"components/EventsListComponent.html":{},"components/MenuComponent.html":{}}}],["stringarr.revers",{"_index":407,"title":{},"body":{"components/EventsListComponent.html":{}}}],["stringarr.reverse().slice(0",{"_index":555,"title":{},"body":{"components/MenuComponent.html":{}}}],["style",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styleurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["subscrib",{"_index":297,"title":{},"body":{"components/CommentsComponent.html":{},"components/ProjectComponent.html":{}}}],["success",{"_index":591,"title":{},"body":{"components/NotificationComponent.html":{}}}],["super",{"_index":359,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{}}}],["support",{"_index":347,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["svg",{"_index":1200,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":434,"title":{},"body":{"pipes/FilterData.html":{},"components/NotificationComponent.html":{},"pipes/UserFilterData.html":{}}}],["tabl",{"_index":1184,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1183,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":504,"title":{},"body":{"components/LoginComponent.html":{}}}],["task",{"_index":82,"title":{"classes/Task.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"pipes/FilterData.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{},"coverage.html":{}}}],["task'},{'nam",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["task.author",{"_index":1034,"title":{},"body":{"components/TasksListComponent.html":{}}}],["task.component.css",{"_index":860,"title":{},"body":{"components/TaskComponent.html":{}}}],["task.component.html",{"_index":861,"title":{},"body":{"components/TaskComponent.html":{}}}],["task.datecomplet",{"_index":447,"title":{},"body":{"pipes/FilterData.html":{},"components/TasksListComponent.html":{}}}],["task.managerid",{"_index":738,"title":{},"body":{"components/ProjectComponent.html":{},"pipes/UserFilterData.html":{}}}],["task.nam",{"_index":1031,"title":{},"body":{"components/TasksListComponent.html":{}}}],["task.projectnam",{"_index":1036,"title":{},"body":{"components/TasksListComponent.html":{}}}],["task.statu",{"_index":1033,"title":{},"body":{"components/TasksListComponent.html":{}}}],["task.work",{"_index":1035,"title":{},"body":{"components/TasksListComponent.html":{}}}],["task.workerid",{"_index":1127,"title":{},"body":{"pipes/UserFilterData.html":{}}}],["task/task.compon",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["task[\"id",{"_index":946,"title":{},"body":{"components/TaskComponent.html":{}}}],["task[\"nam",{"_index":945,"title":{},"body":{"components/TaskComponent.html":{}}}],["task[\"statu",{"_index":561,"title":{},"body":{"components/MenuComponent.html":{}}}],["taskcompon",{"_index":79,"title":{"components/TaskComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{},"coverage.html":{},"index.html":{}}}],["taskdat",{"_index":438,"title":{},"body":{"pipes/FilterData.html":{}}}],["taskdate.valueof",{"_index":440,"title":{},"body":{"pipes/FilterData.html":{}}}],["taskform",{"_index":870,"title":{},"body":{"components/TaskComponent.html":{}}}],["taskform.value.projectnam",{"_index":959,"title":{},"body":{"components/TaskComponent.html":{}}}],["taskform?.value.work",{"_index":958,"title":{},"body":{"components/TaskComponent.html":{}}}],["taskid",{"_index":282,"title":{},"body":{"components/CommentsComponent.html":{}}}],["tasknam",{"_index":284,"title":{},"body":{"components/CommentsComponent.html":{}}}],["taskquant",{"_index":657,"title":{},"body":{"classes/Project.html":{},"components/ProjectComponent.html":{}}}],["taskslistcompon",{"_index":81,"title":{"components/TasksListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{},"coverage.html":{},"index.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["term",{"_index":996,"title":{},"body":{"components/TasksListComponent.html":{}}}],["text",{"_index":991,"title":{},"body":{"components/TasksListComponent.html":{}}}],["text$.pip",{"_index":993,"title":{},"body":{"components/TasksListComponent.html":{}}}],["these.dataservice.gettasks().subscrib",{"_index":732,"title":{},"body":{"components/ProjectComponent.html":{}}}],["these.dataservice.updatetask(task).subscrib",{"_index":741,"title":{},"body":{"components/ProjectComponent.html":{}}}],["this._notificationservice.setnotif",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._notificationservice.setnotification(user.firstnam",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._notifservice.setnotif",{"_index":1109,"title":{},"body":{"components/UserComponent.html":{}}}],["this._notifsservice.onnotifchange.subscrib",{"_index":588,"title":{},"body":{"components/NotificationComponent.html":{}}}],["this.activatedrout",{"_index":922,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksListComponent.html":{}}}],["this.activatedroute.params.foreach((param",{"_index":1010,"title":{},"body":{"components/TasksListComponent.html":{},"components/UserComponent.html":{}}}],["this.activatedroute.snapshot.params[\"id",{"_index":714,"title":{},"body":{"components/ProjectComponent.html":{}}}],["this.activatedroute.snapshot.params['id",{"_index":929,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.activatedroute.snapshot.params['taskid",{"_index":911,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.activatedroute.snapshot.queryparams[\"project",{"_index":1017,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.authservice.currentus",{"_index":462,"title":{},"body":{"injectables/GuardService.html":{},"components/MenuComponent.html":{},"components/ProjectsListComponent.html":{},"components/TasksListComponent.html":{}}}],["this.authservice.currentuser.id",{"_index":299,"title":{},"body":{"components/CommentsComponent.html":{},"components/TasksListComponent.html":{}}}],["this.authservice.currentuser[\"firstnam",{"_index":288,"title":{},"body":{"components/CommentsComponent.html":{},"components/ProjectComponent.html":{},"components/TaskComponent.html":{}}}],["this.authservice.currentuser[\"id",{"_index":281,"title":{},"body":{"components/CommentsComponent.html":{},"components/TaskComponent.html":{}}}],["this.authservice.currentuser[\"imglink",{"_index":290,"title":{},"body":{"components/CommentsComponent.html":{}}}],["this.authservice.currentuser[\"lastnam",{"_index":287,"title":{},"body":{"components/CommentsComponent.html":{},"components/ProjectComponent.html":{},"components/TaskComponent.html":{}}}],["this.authservice.currentuser[\"notif",{"_index":546,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.authservice.getcurrentuser().subscrib",{"_index":556,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.authservice.isadmin",{"_index":459,"title":{},"body":{"injectables/GuardService.html":{}}}],["this.authservice.ismanag",{"_index":460,"title":{},"body":{"injectables/GuardService.html":{}}}],["this.authservice.iswork",{"_index":461,"title":{},"body":{"injectables/GuardService.html":{},"components/ProjectComponent.html":{},"components/TaskComponent.html":{}}}],["this.authservice.login",{"_index":463,"title":{},"body":{"injectables/GuardService.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{}}}],["this.authservice.login(this.loginform.valu",{"_index":519,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.bodi",{"_index":607,"title":{},"body":{"classes/NotificationType.html":{}}}],["this.checkedproject",{"_index":794,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["this.com",{"_index":292,"title":{},"body":{"components/CommentsComponent.html":{}}}],["this.commentelem.nativeelement.valu",{"_index":304,"title":{},"body":{"components/CommentsComponent.html":{}}}],["this.commentsform",{"_index":278,"title":{},"body":{"components/CommentsComponent.html":{}}}],["this.commentsform.value.author",{"_index":309,"title":{},"body":{"components/CommentsComponent.html":{}}}],["this.commentsform.value.tasknam",{"_index":296,"title":{},"body":{"components/CommentsComponent.html":{}}}],["this.createus",{"_index":1099,"title":{},"body":{"components/UserComponent.html":{}}}],["this.currentus",{"_index":545,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.currentuser.notif",{"_index":547,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.currentuser.notifications[i][\"wath",{"_index":548,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.dataoperations[\"sortord",{"_index":1027,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.dataoperations[\"sorttyp",{"_index":1028,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.dataservice.bindproject(project",{"_index":791,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["this.dataservice.createproject(this.projectform.value).subscribe((r",{"_index":725,"title":{},"body":{"components/ProjectComponent.html":{}}}],["this.dataservice.createtask(this.taskform.value).subscrib",{"_index":938,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.dataservice.createuser(this.userform.value).subscrib",{"_index":1110,"title":{},"body":{"components/UserComponent.html":{}}}],["this.dataservice.deletecomment(id).subscrib",{"_index":305,"title":{},"body":{"components/CommentsComponent.html":{}}}],["this.dataservice.deleteproject(project).subscribe((r",{"_index":790,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["this.dataservice.deletetask(task).subscrib",{"_index":1024,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.dataservice.deleteuser(this.userform.value).subscrib",{"_index":1101,"title":{},"body":{"components/UserComponent.html":{}}}],["this.dataservice.getcomments(this.task[\"id\"]).subscrib",{"_index":291,"title":{},"body":{"components/CommentsComponent.html":{}}}],["this.dataservice.getevents().subscrib",{"_index":395,"title":{},"body":{"components/EventsListComponent.html":{},"components/MenuComponent.html":{}}}],["this.dataservice.getfixedprojects(this.currentuser).subscrib",{"_index":553,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.dataservice.getproject(id).subscribe((r",{"_index":716,"title":{},"body":{"components/ProjectComponent.html":{}}}],["this.dataservice.getproject(task.projectid).subscrib",{"_index":1025,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.dataservice.getproject(this.activatedroute.snapshot.params['id']).subscrib",{"_index":934,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.dataservice.getproject(this.task[\"projectid\"]).subscrib",{"_index":298,"title":{},"body":{"components/CommentsComponent.html":{}}}],["this.dataservice.getproject(this.taskform.value.projectid).subscrib",{"_index":939,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.dataservice.getprojects().subscrib",{"_index":787,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["this.dataservice.gettask(id).subscrib",{"_index":560,"title":{},"body":{"components/MenuComponent.html":{},"components/TaskComponent.html":{}}}],["this.dataservice.gettasks(id",{"_index":1018,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.dataservice.gettasks(id).subscrib",{"_index":797,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["this.dataservice.getuser(id).subscrib",{"_index":1103,"title":{},"body":{"components/UserComponent.html":{}}}],["this.dataservice.getuser(notifuserid).subscrib",{"_index":307,"title":{},"body":{"components/CommentsComponent.html":{}}}],["this.dataservice.getuser(res.uid).subscrib",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.dataservice.getuser(res[i][\"workerid\"]).subscrib",{"_index":800,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["this.dataservice.getuser(sessionstorage.getitem(\"id\")).map",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.dataservice.getuser(this.currentuser.id).subscrib",{"_index":564,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.dataservice.getuser(this.taskform.value.workerid).subscrib",{"_index":944,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.dataservice.getusers().subscrib",{"_index":749,"title":{},"body":{"components/ProjectComponent.html":{},"components/TaskComponent.html":{},"components/UsersListComponent.html":{}}}],["this.dataservice.login(data).subscrib",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.dataservice.sendcomment(this.commentsform.value).subscrib",{"_index":293,"title":{},"body":{"components/CommentsComponent.html":{}}}],["this.dataservice.sendevent(this.commentsform.value.author",{"_index":294,"title":{},"body":{"components/CommentsComponent.html":{}}}],["this.dataservice.sendevent(this.projectform.value.author",{"_index":726,"title":{},"body":{"components/ProjectComponent.html":{}}}],["this.dataservice.updateproject(p).subscrib",{"_index":943,"title":{},"body":{"components/TaskComponent.html":{},"components/TasksListComponent.html":{}}}],["this.dataservice.updateproject(this.projectform.value).subscribe((result",{"_index":729,"title":{},"body":{"components/ProjectComponent.html":{}}}],["this.dataservice.updatetask(task).subscrib",{"_index":562,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.dataservice.updatetask(this.taskform.value).subscrib",{"_index":927,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.dataservice.updateuser(this.userform.value).subscrib",{"_index":1108,"title":{},"body":{"components/UserComponent.html":{}}}],["this.dataservice.updateuser(user).subscrib",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"components/MenuComponent.html":{},"components/TaskComponent.html":{}}}],["this.dateoperations.frommodel(new",{"_index":916,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.dateoperations.tomodel(this.fromd",{"_index":925,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.dateoperations.tomodel(this.tod",{"_index":924,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.errormessag",{"_index":789,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["this.ev",{"_index":406,"title":{},"body":{"components/EventsListComponent.html":{},"components/MenuComponent.html":{}}}],["this.events.slice(this.pager.startindex",{"_index":415,"title":{},"body":{"components/EventsListComponent.html":{}}}],["this.fb.group",{"_index":279,"title":{},"body":{"components/CommentsComponent.html":{},"components/LoginComponent.html":{},"components/ProjectComponent.html":{},"components/TaskComponent.html":{},"components/UserComponent.html":{}}}],["this.fixedproject",{"_index":554,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.fromd",{"_index":889,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.getcom",{"_index":275,"title":{},"body":{"components/CommentsComponent.html":{}}}],["this.getcurrentuser(params[\"userid",{"_index":1092,"title":{},"body":{"components/UserComponent.html":{}}}],["this.getev",{"_index":568,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.getmonthshortname(month",{"_index":362,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{}}}],["this.getproject",{"_index":786,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["this.gettasks(params[\"id",{"_index":1011,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.gettasks(this.projectid",{"_index":1026,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.getus",{"_index":742,"title":{},"body":{"components/ProjectComponent.html":{},"components/TaskComponent.html":{}}}],["this.getusersinproject(project.id",{"_index":793,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["this.goback",{"_index":728,"title":{},"body":{"components/ProjectComponent.html":{}}}],["this.height",{"_index":517,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.hoveredd",{"_index":892,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.http.get(\"http://localhost:2403",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{}}}],["this.iseditus",{"_index":1094,"title":{},"body":{"components/UserComponent.html":{}}}],["this.isnewus",{"_index":1093,"title":{},"body":{"components/UserComponent.html":{}}}],["this.login",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginform",{"_index":486,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.managerid",{"_index":718,"title":{},"body":{"components/ProjectComponent.html":{}}}],["this.modalservice.open(content).result.then((result",{"_index":743,"title":{},"body":{"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{}}}],["this.msg",{"_index":1014,"title":{},"body":{"components/TasksListComponent.html":{},"components/UserComponent.html":{}}}],["this.mytodolist",{"_index":1015,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.newproject",{"_index":720,"title":{},"body":{"components/ProjectComponent.html":{}}}],["this.newtask",{"_index":923,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.notif",{"_index":594,"title":{},"body":{"components/NotificationComponent.html":{},"injectables/NotificationsService.html":{}}}],["this.notifcount",{"_index":550,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.offset().left",{"_index":509,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.offset().top",{"_index":512,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.onnotifchange.emit(this.notif",{"_index":620,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.pag",{"_index":410,"title":{},"body":{"components/EventsListComponent.html":{}}}],["this.pageditem",{"_index":414,"title":{},"body":{"components/EventsListComponent.html":{}}}],["this.pager.endindex",{"_index":416,"title":{},"body":{"components/EventsListComponent.html":{}}}],["this.pager.totalpag",{"_index":409,"title":{},"body":{"components/EventsListComponent.html":{}}}],["this.pagerservice.getpager(this.events.length",{"_index":411,"title":{},"body":{"components/EventsListComponent.html":{}}}],["this.password.nativeelement.valu",{"_index":1096,"title":{},"body":{"components/UserComponent.html":{}}}],["this.project",{"_index":788,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["this.projectform",{"_index":715,"title":{},"body":{"components/ProjectComponent.html":{}}}],["this.projectform.patchvalue(r",{"_index":717,"title":{},"body":{"components/ProjectComponent.html":{}}}],["this.projectform.value.author",{"_index":723,"title":{},"body":{"components/ProjectComponent.html":{}}}],["this.projectform.value.id",{"_index":722,"title":{},"body":{"components/ProjectComponent.html":{}}}],["this.projectform.value.manag",{"_index":745,"title":{},"body":{"components/ProjectComponent.html":{}}}],["this.projectform.value.managerid",{"_index":739,"title":{},"body":{"components/ProjectComponent.html":{}}}],["this.projectform.value.nam",{"_index":727,"title":{},"body":{"components/ProjectComponent.html":{}}}],["this.projectform.value[\"datecr",{"_index":724,"title":{},"body":{"components/ProjectComponent.html":{}}}],["this.projectid",{"_index":1012,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.pushnotification(res[\"managerid",{"_index":303,"title":{},"body":{"components/CommentsComponent.html":{}}}],["this.pushnotification(this.task[\"workerid",{"_index":301,"title":{},"body":{"components/CommentsComponent.html":{}}}],["this.renderer.addclass(this.elref.nativeel",{"_index":595,"title":{},"body":{"components/NotificationComponent.html":{}}}],["this.renderer.removeclass(this.elref.nativeel",{"_index":599,"title":{},"body":{"components/NotificationComponent.html":{}}}],["this.router.navig",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"components/TaskComponent.html":{}}}],["this.router.navigate(['/login",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{}}}],["this.router.navigate(['/task",{"_index":465,"title":{},"body":{"injectables/GuardService.html":{}}}],["this.router.navigate(['/us",{"_index":1102,"title":{},"body":{"components/UserComponent.html":{}}}],["this.router.navigate(['login",{"_index":552,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.navigate(['new",{"_index":1023,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.router.navigate(['project",{"_index":721,"title":{},"body":{"components/ProjectComponent.html":{}}}],["this.router.navigate([id",{"_index":1022,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.setpage(1",{"_index":408,"title":{},"body":{"components/EventsListComponent.html":{}}}],["this.task",{"_index":1020,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.task[\"id",{"_index":283,"title":{},"body":{"components/CommentsComponent.html":{}}}],["this.task[\"nam",{"_index":277,"title":{},"body":{"components/CommentsComponent.html":{}}}],["this.task[\"workerid",{"_index":302,"title":{},"body":{"components/CommentsComponent.html":{}}}],["this.taskform",{"_index":910,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.taskform.patchvalue(r",{"_index":912,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.taskform.value.author",{"_index":930,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.taskform.value.authorid",{"_index":931,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.taskform.value.datecomplet",{"_index":919,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.taskform.value.datecr",{"_index":913,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.taskform.value.datestart",{"_index":917,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.taskform.value.id",{"_index":926,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.taskform.value.managerid",{"_index":937,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.taskform.value.nam",{"_index":962,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.taskform.value.projectid",{"_index":928,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.taskform.value.projectnam",{"_index":935,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.taskform.value.statu",{"_index":933,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.taskform.value.work",{"_index":932,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.taskform.value.workerid",{"_index":947,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.tasks.filter(v",{"_index":997,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.titl",{"_index":719,"title":{},"body":{"components/ProjectComponent.html":{},"components/TaskComponent.html":{}}}],["this.titleproject",{"_index":1016,"title":{},"body":{"components/TasksListComponent.html":{}}}],["this.tod",{"_index":891,"title":{},"body":{"components/TaskComponent.html":{}}}],["this.typ",{"_index":608,"title":{},"body":{"classes/NotificationType.html":{}}}],["this.updateus",{"_index":1100,"title":{},"body":{"components/UserComponent.html":{}}}],["this.us",{"_index":752,"title":{},"body":{"components/ProjectComponent.html":{},"components/TaskComponent.html":{},"pipes/UserFilterData.html":{},"components/UsersListComponent.html":{}}}],["this.user.id",{"_index":1130,"title":{},"body":{"pipes/UserFilterData.html":{}}}],["this.user[\"id",{"_index":1128,"title":{},"body":{"pipes/UserFilterData.html":{}}}],["this.user[\"rol",{"_index":1129,"title":{},"body":{"pipes/UserFilterData.html":{}}}],["this.userform",{"_index":1088,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userform.patchvalue(r",{"_index":1104,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userform.value.imglink",{"_index":1097,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userform.value.not",{"_index":1106,"title":{},"body":{"components/UserComponent.html":{}}}],["this.userform.value[\"password",{"_index":1095,"title":{},"body":{"components/UserComponent.html":{}}}],["this.width",{"_index":515,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.work",{"_index":795,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["this.workers.push",{"_index":803,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["this.workers[j][\"workerid",{"_index":802,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["time",{"_index":754,"title":{},"body":{"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{}}}],["titl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectComponent.html":{},"components/TaskComponent.html":{},"components/UserComponent.html":{}}}],["titleproject",{"_index":968,"title":{},"body":{"components/TasksListComponent.html":{}}}],["todat",{"_index":871,"title":{},"body":{"components/TaskComponent.html":{}}}],["today",{"_index":430,"title":{},"body":{"pipes/FilterData.html":{}}}],["today.valueof",{"_index":441,"title":{},"body":{"pipes/FilterData.html":{}}}],["tomodel",{"_index":377,"title":{},"body":{"injectables/DateOperations.html":{}}}],["tomodel(d",{"_index":374,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{}}}],["top",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["total",{"_index":634,"title":{},"body":{"classes/PagerService.html":{}}}],["totalitem",{"_index":627,"title":{},"body":{"classes/PagerService.html":{}}}],["totalpag",{"_index":629,"title":{},"body":{"classes/PagerService.html":{}}}],["transform",{"_index":423,"title":{},"body":{"pipes/FilterData.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"pipes/UserFilterData.html":{},"miscellaneous/variables.html":{}}}],["transform(valu",{"_index":424,"title":{},"body":{"pipes/FilterData.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"pipes/UserFilterData.html":{}}}],["transition('0",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('1",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('3",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition(':ent",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translat",{"_index":357,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{}}}],["translatex",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(0",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(100",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["trigger('appearanceanim",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('routeanim",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuardService.html":{},"components/LoginComponent.html":{},"components/ProjectComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"miscellaneous/variables.html":{}}}],["tweenmax",{"_index":1170,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tweenmax.to(target",{"_index":513,"title":{},"body":{"components/LoginComponent.html":{}}}],["tweenmax:ani",{"_index":485,"title":{},"body":{"components/LoginComponent.html":{}}}],["two",{"_index":950,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["two.day",{"_index":955,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["two.month",{"_index":953,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["two.year",{"_index":951,"title":{},"body":{"components/TaskComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"components/EventsListComponent.html":{},"pipes/FilterData.html":{},"injectables/GuardService.html":{},"injectables/I18n.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"classes/NotificationType.html":{},"injectables/NotificationsService.html":{},"classes/PagerService.html":{},"classes/Project.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"classes/User.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"components/UsersListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeclass",{"_index":589,"title":{},"body":{"components/NotificationComponent.html":{}}}],["typesort",{"_index":827,"title":{},"body":{"pipes/SortData.html":{}}}],["undefin",{"_index":295,"title":{},"body":{"components/CommentsComponent.html":{},"components/ProjectComponent.html":{}}}],["underscor",{"_index":632,"title":{},"body":{"classes/PagerService.html":{}}}],["updateus",{"_index":1068,"title":{},"body":{"components/UserComponent.html":{}}}],["us",{"_index":353,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"components/ProjectComponent.html":{}}}],["useclass",{"_index":908,"title":{},"body":{"components/TaskComponent.html":{}}}],["user",{"_index":86,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"injectables/GuardService.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"classes/User.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"components/UsersListComponent.html":{},"coverage.html":{}}}],["user'},{'nam",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["user.component.css",{"_index":1058,"title":{},"body":{"components/UserComponent.html":{}}}],["user.component.html",{"_index":1059,"title":{},"body":{"components/UserComponent.html":{}}}],["user.email",{"_index":1138,"title":{},"body":{"components/UsersListComponent.html":{}}}],["user.firstnam",{"_index":756,"title":{},"body":{"components/ProjectComponent.html":{},"components/TaskComponent.html":{},"components/UsersListComponent.html":{}}}],["user.firstname.tolowercase().indexof(searchprase.tolowercas",{"_index":823,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["user.lastnam",{"_index":755,"title":{},"body":{"components/ProjectComponent.html":{},"components/TaskComponent.html":{},"components/UsersListComponent.html":{}}}],["user.lastname.tolowercase().indexof(searchprase.tolowercas",{"_index":824,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["user.latestlogind",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"components/UsersListComponent.html":{}}}],["user.notif",{"_index":314,"title":{},"body":{"components/CommentsComponent.html":{},"components/MenuComponent.html":{},"components/TaskComponent.html":{}}}],["user.notifications.push(notif",{"_index":315,"title":{},"body":{"components/CommentsComponent.html":{},"components/TaskComponent.html":{}}}],["user.notifications[i].button",{"_index":566,"title":{},"body":{"components/MenuComponent.html":{}}}],["user.notifications[i]['object'].id",{"_index":565,"title":{},"body":{"components/MenuComponent.html":{}}}],["user.phon",{"_index":1139,"title":{},"body":{"components/UsersListComponent.html":{}}}],["user.rol",{"_index":1137,"title":{},"body":{"components/UsersListComponent.html":{}}}],["user/user.compon",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["usercompon",{"_index":83,"title":{"components/UserComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{},"coverage.html":{},"index.html":{}}}],["userfilterdata",{"_index":105,"title":{"pipes/UserFilterData.html":{}},"body":{"modules/AppModule.html":{},"pipes/UserFilterData.html":{},"coverage.html":{},"index.html":{}}}],["userform",{"_index":1062,"title":{},"body":{"components/UserComponent.html":{}}}],["userform.value.datebirthday",{"_index":1116,"title":{},"body":{"components/UserComponent.html":{}}}],["userform.value.email",{"_index":1114,"title":{},"body":{"components/UserComponent.html":{}}}],["userform.value.firstnam",{"_index":1111,"title":{},"body":{"components/UserComponent.html":{}}}],["userform.value.lastnam",{"_index":1112,"title":{},"body":{"components/UserComponent.html":{}}}],["userform.value.latestlogind",{"_index":1117,"title":{},"body":{"components/UserComponent.html":{}}}],["userform.value.not",{"_index":1120,"title":{},"body":{"components/UserComponent.html":{}}}],["userform.value.phon",{"_index":1115,"title":{},"body":{"components/UserComponent.html":{}}}],["userform.value.rol",{"_index":1113,"title":{},"body":{"components/UserComponent.html":{}}}],["userid",{"_index":280,"title":{},"body":{"components/CommentsComponent.html":{}}}],["usernam",{"_index":487,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{},"components/UserComponent.html":{}}}],["users.push(res[i",{"_index":751,"title":{},"body":{"components/ProjectComponent.html":{},"components/TaskComponent.html":{}}}],["users/:userid",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["userslistcompon",{"_index":85,"title":{"components/UsersListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{},"coverage.html":{},"index.html":{}}}],["v.name.tolowercase().indexof(term.tolowercas",{"_index":998,"title":{},"body":{"components/TasksListComponent.html":{}}}],["valid",{"_index":483,"title":{},"body":{"components/LoginComponent.html":{},"components/ProjectComponent.html":{},"components/TaskComponent.html":{},"components/UserComponent.html":{}}}],["validators.requir",{"_index":488,"title":{},"body":{"components/LoginComponent.html":{},"components/ProjectComponent.html":{},"components/TaskComponent.html":{}}}],["valu",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"components/CommentsComponent.html":{},"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"components/EventsListComponent.html":{},"pipes/FilterData.html":{},"injectables/I18n.html":{},"components/MenuComponent.html":{},"injectables/NotificationsService.html":{},"classes/PagerService.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"pipes/UserFilterData.html":{},"components/UsersListComponent.html":{},"miscellaneous/variables.html":{}}}],["value.filter(task",{"_index":436,"title":{},"body":{"pipes/FilterData.html":{}}}],["value.filter(us",{"_index":822,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["value.sort(funct",{"_index":829,"title":{},"body":{"pipes/SortData.html":{}}}],["values.filter(project",{"_index":1131,"title":{},"body":{"pipes/UserFilterData.html":{}}}],["values.filter(task",{"_index":1126,"title":{},"body":{"pipes/UserFilterData.html":{}}}],["var",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["variabl",{"_index":1146,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["view",{"_index":649,"title":{},"body":{"classes/PagerService.html":{}}}],["viewchild",{"_index":270,"title":{},"body":{"components/CommentsComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["viewchild('commentelem",{"_index":274,"title":{},"body":{"components/CommentsComponent.html":{}}}],["viewchild('password",{"_index":1087,"title":{},"body":{"components/UserComponent.html":{}}}],["visibl",{"_index":705,"title":{},"body":{"components/ProjectComponent.html":{}}}],["void",{"_index":261,"title":{},"body":{"components/CommentsComponent.html":{},"components/EventsListComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationComponent.html":{},"injectables/NotificationsService.html":{},"components/ProjectComponent.html":{},"components/ProjectsListComponent.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{},"components/UserComponent.html":{},"components/UsersListComponent.html":{}}}],["wath",{"_index":312,"title":{},"body":{"components/CommentsComponent.html":{},"components/TaskComponent.html":{}}}],["wathnotif",{"_index":532,"title":{},"body":{"components/MenuComponent.html":{}}}],["week",{"_index":443,"title":{},"body":{"pipes/FilterData.html":{}}}],["weekday",{"_index":342,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"miscellaneous/variables.html":{}}}],["weekend",{"_index":708,"title":{},"body":{"components/ProjectComponent.html":{}}}],["without",{"_index":446,"title":{},"body":{"pipes/FilterData.html":{}}}],["worker",{"_index":760,"title":{},"body":{"components/ProjectsListComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{},"components/TasksListComponent.html":{}}}],["worker).subscrib",{"_index":1019,"title":{},"body":{"components/TasksListComponent.html":{}}}],["worker.work",{"_index":817,"title":{},"body":{"components/ProjectsListComponent.html":{}}}],["workerid",{"_index":804,"title":{},"body":{"components/ProjectsListComponent.html":{},"classes/Task.html":{},"components/TaskComponent.html":{}}}],["x",{"_index":514,"title":{},"body":{"components/LoginComponent.html":{},"components/TasksListComponent.html":{}}}],["x.name",{"_index":989,"title":{},"body":{"components/TasksListComponent.html":{}}}],["y",{"_index":516,"title":{},"body":{"components/LoginComponent.html":{}}}],["ye",{"_index":427,"title":{},"body":{"pipes/FilterData.html":{},"injectables/NotificationsService.html":{},"pipes/SearchPipe.html":{},"pipes/SortData.html":{},"components/TasksListComponent.html":{},"pipes/UserFilterData.html":{}}}],["year",{"_index":369,"title":{},"body":{"injectables/CustomDatepicker.html":{},"injectables/DateOperations.html":{},"injectables/I18n.html":{},"components/ProjectComponent.html":{},"components/TaskComponent.html":{}}}],["zone.j",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Главный компонент.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDepth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDepth\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDepth(outlet: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        outlet\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './SHARED/services/auth.service';\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/observable/of'\nimport { ActivatedRoute } from '@angular/router';\nimport { RouteAnimationTrigger } from './SHARED/animations';\n\n/**\n* Главный компонент.\n*/\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  animations: [RouteAnimationTrigger]\n  })\nexport class AppComponent {\n  title: 'Booster'\n  constructor(private authService: AuthService, private activatedRoute: ActivatedRoute) { }\n\n  getDepth(outlet) {\n    return outlet.activatedRouteData['depth'];\n  }\n}\n\n    \n\n    \n        \n\n\n\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'EventsListComponent', 'selector': 'app-events-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'ProjectComponent', 'selector': 'app-project'},{'name': 'ProjectsListComponent', 'selector': 'app-projects-list'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksListComponent', 'selector': 'app-tasks-list'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UsersListComponent', 'selector': 'app-users-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentsComponent\n\nCommentsComponent\n\nAppModule -->\n\nCommentsComponent->AppModule\n\n\n\n\n\nEventsListComponent\n\nEventsListComponent\n\nAppModule -->\n\nEventsListComponent->AppModule\n\n\n\n\n\nFilterData\n\nFilterData\n\nAppModule -->\n\nFilterData->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nAppModule -->\n\nMenuComponent->AppModule\n\n\n\n\n\nNotificationComponent\n\nNotificationComponent\n\nAppModule -->\n\nNotificationComponent->AppModule\n\n\n\n\n\nProjectComponent\n\nProjectComponent\n\nAppModule -->\n\nProjectComponent->AppModule\n\n\n\n\n\nProjectsListComponent\n\nProjectsListComponent\n\nAppModule -->\n\nProjectsListComponent->AppModule\n\n\n\n\n\nSearchPipe\n\nSearchPipe\n\nAppModule -->\n\nSearchPipe->AppModule\n\n\n\n\n\nSortData\n\nSortData\n\nAppModule -->\n\nSortData->AppModule\n\n\n\n\n\nTaskComponent\n\nTaskComponent\n\nAppModule -->\n\nTaskComponent->AppModule\n\n\n\n\n\nTasksListComponent\n\nTasksListComponent\n\nAppModule -->\n\nTasksListComponent->AppModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\nAppModule -->\n\nUserComponent->AppModule\n\n\n\n\n\nUserFilterData\n\nUserFilterData\n\nAppModule -->\n\nUserFilterData->AppModule\n\n\n\n\n\nUsersListComponent\n\nUsersListComponent\n\nAppModule -->\n\nUsersListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nDataService\n\nDataService\n\nAppModule -->\n\nDataService->AppModule\n\n\n\n\n\nGuardService\n\nGuardService\n\nAppModule -->\n\nGuardService->AppModule\n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nAppModule -->\n\nNotificationsService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Главный модуль.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                CommentsComponent\n                            \n                            \n                                EventsListComponent\n                            \n                            \n                                FilterData\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                MenuComponent\n                            \n                            \n                                NotificationComponent\n                            \n                            \n                                ProjectComponent\n                            \n                            \n                                ProjectsListComponent\n                            \n                            \n                                SearchPipe\n                            \n                            \n                                SortData\n                            \n                            \n                                TaskComponent\n                            \n                            \n                                TasksListComponent\n                            \n                            \n                                UserComponent\n                            \n                            \n                                UserFilterData\n                            \n                            \n                                UsersListComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                            \n                                     DataService\n                            \n                            \n                                     GuardService\n                            \n                            \n                                     NotificationsService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProjectsListComponent } from './projects-list/projects-list.component';\nimport { ProjectComponent } from './project/project.component';\nimport { TasksListComponent } from './tasks-list/tasks-list.component';\nimport { TaskComponent } from './task/task.component';\nimport { GuardService } from './SHARED/services/guard.service';\nimport { AuthService } from './SHARED/services/auth.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DataService } from './SHARED/services/data.service';\nimport { MenuComponent } from './menu/menu.component';\nimport { CommentsComponent } from './comments/comments.component';\nimport { UsersListComponent } from './users-list/users-list.component';\nimport { UserComponent } from './user/user.component';\nimport { FilterData } from './SHARED/pipes/filter-data.pipe';\nimport { SortData } from './SHARED/pipes/sort-data.pipe';\nimport { UserFilterData } from './SHARED/pipes/users-filter-data.pipe'\nimport { EventsListComponent } from './events-list/events-list.component';\nimport { SearchPipe } from './SHARED/pipes/search.pipe';\nimport { NotificationsService } from './SHARED/services/notifications.service';\nimport { NotificationComponent } from './notification/notification.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { PagerService } from './SHARED/services/pager.service';\n\n/**\n* Главный модуль.\n*/\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ProjectsListComponent,\n    ProjectComponent,\n    TasksListComponent,\n    TaskComponent,\n    MenuComponent,\n    CommentsComponent,\n    UsersListComponent,\n    UserComponent,\n    FilterData,\n    SortData,\n    EventsListComponent,\n    UserFilterData,\n    NotificationComponent,\n    SearchPipe\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    NgbModule.forRoot(),\n    FormsModule,\n    BrowserAnimationsModule\n  ],\n  providers: [GuardService, AuthService, DataService, NotificationsService, PagerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getParagraphText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetParagraphText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/app.po.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateTo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/app.po.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { ProjectsListComponent } from './projects-list/projects-list.component';\nimport { GuardService } from './SHARED/services/guard.service';\nimport { ProjectComponent } from './project/project.component';\nimport { TaskComponent } from './task/task.component';\nimport { TasksListComponent } from './tasks-list/tasks-list.component';\nimport { UsersListComponent } from './users-list/users-list.component';\nimport { UserComponent } from './user/user.component';\nimport { EventsListComponent } from './events-list/events-list.component';\n\nconst routes: Routes = [\n  {path: 'login', data: {depth: 0}, component: LoginComponent},\n  {path: '', redirectTo: 'projects', pathMatch: 'full' },\n  {path: 'events', component: EventsListComponent, canActivate: [GuardService]},\n  {path: 'tasks', data: {depth: 1}, component: TasksListComponent, canActivate: [GuardService]},\n  {path: 'new-user', component: UserComponent, canActivate: [GuardService] },\n  {path: 'users', component: UsersListComponent, canActivate: [GuardService]},\n  {path: 'users/:userId', component: UserComponent, canActivate: [GuardService]},\n  {path: 'new-project', data: {depth: 2}, component: ProjectComponent, canActivate: [GuardService]},\n  {path: 'projects', data: {depth: 1}, component: ProjectsListComponent, canActivate: [GuardService]},\n  {path: 'projects/:id', data: {depth: 2}, component: ProjectComponent, canActivate: [GuardService]},\n  {path: 'projects/:id/tasks', data: {depth: 1}, component: TasksListComponent, canActivate: [GuardService]},\n  {path: 'projects/:id/tasks/:taskId', data: {depth: 2}, component: TaskComponent, canActivate: [GuardService]},\n  {path: 'projects/:id/tasks/new-task', data: {depth: 2}, component: TaskComponent, canActivate: [GuardService]},\n  {path: '**', redirectTo: 'projects'}\n];\n\n/**\n* Модуль маршрутов.\n*/\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SHARED/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Сервис аутентификации.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                isAdmin\n                            \n                            \n                                isManager\n                            \n                            \n                                isWorker\n                            \n                            \n                                login\n                            \n                            \n                                prevUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentUser\n                            \n                            \n                                isLogin\n                            \n                            \n                                logIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, router: Router, http: HttpClient, _notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/SHARED/services/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                    DataService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/SHARED/services/auth.service.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/SHARED/services/auth.service.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogIn(data: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/SHARED/services/auth.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/SHARED/services/auth.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdmin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isAdmin:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/services/auth.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isManager\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isManager:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/services/auth.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isWorker\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isWorker:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/services/auth.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        login:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/services/auth.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prevUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        prevUrl:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/services/auth.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { DataService } from \"./data.service\";\nimport { Router } from \"@angular/router\";\nimport { HttpClient, } from '@angular/common/http';\nimport { NotificationsService } from \"./notifications.service\";\n\n/**\n* Сервис аутентификации.\n*/\n@Injectable()\nexport class AuthService {\n    prevUrl: any;\n    login: boolean = false;\n\n    currentUser;\n\n    constructor(private dataService: DataService, private router: Router, private http: HttpClient, private _notificationService: NotificationsService) { }\n\n    //Уровень доступа\n    isAdmin = true;\n    isManager = false;\n    isWorker = false;\n\n    logIn(data) {\n        // console.log(data);\n        return this.dataService.logIn(data).subscribe(\n            res => {\n                this.router.navigate(['/'])\n                sessionStorage.setItem('id', res.uid);\n\n                this.dataService.getUser(res.uid).subscribe(\n                    res => {\n                        let user = res;\n                        user.latestLoginDate = new Date();\n                        this._notificationService.setNotification(user.firstName + ', рады Вас видеть!', 1);\n\n                        this.dataService.updateUser(user).subscribe();\n                    },\n                    err => {\n                        console.log(err);\n                    }\n                )\n            },\n            err => {\n                this._notificationService.setNotification('Ошибка входа', 2)\n            }\n        );\n\n    }\n\n    isLogin() {\n        return this.http.get(\"http://localhost:2403\" + '/users/' + sessionStorage.getItem(\"id\")).map((res: Response) => {\n            if (res['id']) {\n\n                return true;\n            }\n\n            else {\n                this.router.navigate(['/login']);\n                return false;\n            }\n        }).catch(this.dataService.handleError);\n    }\n\n    getCurrentUser() {\n        return this.dataService.getUser(sessionStorage.getItem(\"id\")).map(\n            res => {\n                return res\n            },\n            err => {\n                console.log('error: ' + err);\n                this.login = false\n                return false\n            }\n\n        );\n    }\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentsComponent.html":{"url":"components/CommentsComponent.html","title":"component - CommentsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CommentsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/comments/comments.component.ts\n\n\n    \n        Description\n    \n    \n        Компонент комментариев.\nИспользуется только внутри компонента задачи.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comments\n            \n\n            \n                styleUrls\n                comments.component.css\n            \n\n\n\n            \n                templateUrl\n                ./comments.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                commentElem\n                            \n                            \n                                comments\n                            \n                            \n                                commentsForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteComment\n                            \n                            \n                                getComments\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                pushNotification\n                            \n                            \n                                sendComment\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, fb: FormBuilder, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/comments/comments.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                    DataService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        task\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/comments/comments.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteComment\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteComment(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/comments/comments.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getComments\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetComments()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/comments/comments.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/comments/comments.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pushNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \npushNotification(notifUserId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/comments/comments.component.ts:88\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notifUserId\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendComment\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendComment()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/comments/comments.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            commentElem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        commentElem:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comments/comments.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comments\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        comments:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comments/comments.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            commentsForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        commentsForm:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/comments/comments.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { DataService } from '../SHARED/services/data.service';\nimport { Input } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { AuthService } from '../SHARED/services/auth.service';\n\n/**\n* Компонент комментариев.\n* Используется только внутри компонента задачи.\n*/\n@Component({\n  selector: 'app-comments',\n  templateUrl: './comments.component.html',\n  styleUrls: ['./comments.component.css'],\n})\n\nexport class CommentsComponent implements OnInit {\n  comments = [];\n  commentsForm;\n  @ViewChild('commentElem') commentElem: ElementRef;\n\n  @Input()\n  task: string;\n\n  constructor(private dataService: DataService, private fb: FormBuilder, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.getComments();\n    console.log( this.task[\"name\"]);\n    this.commentsForm = this.fb.group({\n      userId: this.authService.currentUser[\"id\"],\n      taskId: this.task[\"id\"],\n      taskName: this.task[\"name\"],\n      body: '',\n      author: this.authService.currentUser[\"lastName\"] + \" \" + this.authService.currentUser[\"firstName\"],\n      date: new Date(),\n      imgLink: this.authService.currentUser[\"imgLink\"]\n    });\n\n\n  }\n\n  getComments() {\n    this.dataService.getComments(this.task[\"id\"]).subscribe(\n      (res) => {\n        this.comments = res;\n      }\n    )\n  }\n\n  sendComment() {\n    this.dataService.sendComment(this.commentsForm.value).subscribe(\n      res => {\n        this.dataService.sendEvent(this.commentsForm.value.author, undefined, this.commentsForm.value.taskName, 'добавил комментарий к задаче').subscribe();\n\n        this.dataService.getProject(this.task[\"projectId\"]).subscribe(\n          res => {\n            let notifUserId = '';\n\n            if (this.authService.currentUser.id == res[\"managerId\"]) this.pushNotification(this.task[\"workerId\"]);\n\n            else if (this.authService.currentUser.id == this.task[\"workerId\"]) this.pushNotification(res[\"managerId\"])\n\n            else {\n              this.pushNotification(res[\"managerId\"]);\n              this.pushNotification(this.task[\"workerId\"]);\n            }\n\n          }\n        )\n\n        this.commentElem.nativeElement.value = \"\";\n        this.getComments();\n      }\n    )\n  }\n\n  deleteComment(id) {\n    this.dataService.deleteComment(id).subscribe(\n      (res) => {\n        console.log(res);\n        this.dataService.sendEvent(this.commentsForm.value.author, undefined, this.commentsForm.value.taskName, 'удалил комментарий к задаче').subscribe();\n        this.getComments()\n      }\n    );\n  }\n\n  pushNotification(notifUserId) {\n    this.dataService.getUser(notifUserId).subscribe(\n      (result) => {\n\n        let user = result;\n        let notification = {\n          author: this.commentsForm.value.author,\n          action: 'добавил комментарий к задаче',\n          object: {\n            name: this.commentsForm.value.taskName,\n            type: 2,\n            id: this.task[\"id\"]\n          },\n          wathed: false,\n          button: false\n        }\n\n        if (!user.notifications) user.notifications = [];\n\n        user.notifications.push(notification);\n\n        this.dataService.updateUser(user).subscribe();\n      }\n    )\n  }\n\n\n}\n\n    \n\n    \n        \n  \n     Комментарии\n  \n    \n      \n      {{comment.author}}\n\n    \n    \n      {{comment.date | date:\"MM/dd/yy\"}}\n        \n      \n\n      \n        {{comment.body}}\n      \n    \n  \n\n  \n       Оставить комментарий\n  \n    \n      \n        \n        \n        {{commentsForm?.value.author}}\n      \n      \n        Комментарий: \n        \n        Отправить\n      \n\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Комментарии                  {{comment.author}}              {{comment.date | date:\"MM/dd/yy\"}}                            {{comment.body}}                     Оставить комментарий                                    {{commentsForm?.value.author}}                    Комментарий:                 Отправить            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'EventsListComponent', 'selector': 'app-events-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'ProjectComponent', 'selector': 'app-project'},{'name': 'ProjectsListComponent', 'selector': 'app-projects-list'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksListComponent', 'selector': 'app-tasks-list'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UsersListComponent', 'selector': 'app-users-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CommentsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomDatepicker.html":{"url":"injectables/CustomDatepicker.html","title":"injectable - CustomDatepicker","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CustomDatepicker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SHARED/services/calendar.service.ts\n        \n\n            \n                Description\n            \n            \n                Сервис локализации календаря.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDayAriaLabel\n                            \n                            \n                                getMonthFullName\n                            \n                            \n                                getMonthShortName\n                            \n                            \n                                getWeekdayShortName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_i18n: I18n)\n                    \n                \n                        \n                            \n                                Defined in src/app/SHARED/services/calendar.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _i18n\n                                                  \n                                                        \n                                                                    I18n\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDayAriaLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDayAriaLabel(date: NgbDateStruct)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/SHARED/services/calendar.service.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    NgbDateStruct\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMonthFullName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMonthFullName(month: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/SHARED/services/calendar.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        month\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMonthShortName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMonthShortName(month: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/SHARED/services/calendar.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        month\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getWeekdayShortName\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetWeekdayShortName(weekday: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/SHARED/services/calendar.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weekday\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { NgbDatepickerI18n, NgbDateStruct } from \"@ng-bootstrap/ng-bootstrap\";\n\n//Меняем язык календаря\nconst I18N_VALUES = {\n    'ru': {\n        weekdays: ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'],\n        months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n    }\n    // other languages you would support\n};\n\n// Define a service holding the language. You probably already have one if your app is i18ned. Or you could also\n// use the Angular LOCALE_ID value\n@Injectable()\nexport class I18n {\n    language = 'ru';\n}\n\n// Define custom service providing the months and weekdays translations\n/**\n* Сервис локализации календаря.\n*/\n@Injectable()\nexport class CustomDatepicker extends NgbDatepickerI18n {\n\n    constructor(private _i18n: I18n) {\n        super();\n    }\n\n    getWeekdayShortName(weekday: number): string {\n        return I18N_VALUES[this._i18n.language].weekdays[weekday - 1];\n    }\n    getMonthShortName(month: number): string {\n        return I18N_VALUES[this._i18n.language].months[month - 1];\n    }\n    getMonthFullName(month: number): string {\n        return this.getMonthShortName(month);\n    }\n\n    getDayAriaLabel(date: NgbDateStruct): string {\n        return `${date.day}-${date.month}-${date.year}`;\n    }\n}\n\n@Injectable()\nexport class DateOperations {\n    fromModel(date: Date): NgbDateStruct {\n        return (date && date.getFullYear) ? { year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate() } : null;\n    }\n\n    toModel(date: NgbDateStruct): Date {\n        return date ? new Date(date.year, date.month - 1, date.day) : null;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DateOperations.html":{"url":"injectables/DateOperations.html","title":"injectable - DateOperations","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DateOperations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SHARED/services/calendar.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fromModel\n                            \n                            \n                                toModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fromModel\n                            \n                            \n                        \n                    \n                \n                \n                    \nfromModel(date: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/SHARED/services/calendar.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     NgbDateStruct\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toModel\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoModel(date: NgbDateStruct)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/SHARED/services/calendar.service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    NgbDateStruct\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Date\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { NgbDatepickerI18n, NgbDateStruct } from \"@ng-bootstrap/ng-bootstrap\";\n\n//Меняем язык календаря\nconst I18N_VALUES = {\n    'ru': {\n        weekdays: ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'],\n        months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n    }\n    // other languages you would support\n};\n\n// Define a service holding the language. You probably already have one if your app is i18ned. Or you could also\n// use the Angular LOCALE_ID value\n@Injectable()\nexport class I18n {\n    language = 'ru';\n}\n\n// Define custom service providing the months and weekdays translations\n/**\n* Сервис локализации календаря.\n*/\n@Injectable()\nexport class CustomDatepicker extends NgbDatepickerI18n {\n\n    constructor(private _i18n: I18n) {\n        super();\n    }\n\n    getWeekdayShortName(weekday: number): string {\n        return I18N_VALUES[this._i18n.language].weekdays[weekday - 1];\n    }\n    getMonthShortName(month: number): string {\n        return I18N_VALUES[this._i18n.language].months[month - 1];\n    }\n    getMonthFullName(month: number): string {\n        return this.getMonthShortName(month);\n    }\n\n    getDayAriaLabel(date: NgbDateStruct): string {\n        return `${date.day}-${date.month}-${date.year}`;\n    }\n}\n\n@Injectable()\nexport class DateOperations {\n    fromModel(date: Date): NgbDateStruct {\n        return (date && date.getFullYear) ? { year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate() } : null;\n    }\n\n    toModel(date: NgbDateStruct): Date {\n        return date ? new Date(date.year, date.month - 1, date.day) : null;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventsListComponent.html":{"url":"components/EventsListComponent.html","title":"component - EventsListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventsListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/events-list/events-list.component.ts\n\n\n    \n        Description\n    \n    \n        Компонент списка событий.\nДоступен только для администратора.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-events-list\n            \n\n            \n                styleUrls\n                events-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./events-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                events\n                            \n                            \n                                pagedItems\n                            \n                            \n                                pager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, pagerService: PagerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/events-list/events-list.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                    DataService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        pagerService\n                                                  \n                                                        \n                                                                    PagerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/events-list/events-list.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPage\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPage(page: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/events-list/events-list.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            events\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        events:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/events-list/events-list.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pagedItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pagedItems:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events-list/events-list.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pager\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pager:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/events-list/events-list.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../SHARED/services/data.service';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from '../SHARED/services/auth.service';\nimport { PagerService } from '../SHARED/services/pager.service';\n\n/**\n* Компонент списка событий.\n* Доступен только для администратора.\n*/\n@Component({\n  selector: 'app-events-list',\n  templateUrl: './events-list.component.html',\n  styleUrls: ['./events-list.component.css']\n})\nexport class EventsListComponent implements OnInit {\n  events;\n  // pager object\n  pager: any = {};\n\n  // paged items\n  pagedItems: any[];\n\n  constructor(private dataService: DataService, private pagerService: PagerService) { }\n\n  ngOnInit() {\n    this.dataService.getEvents().subscribe(\n      (res) => {\n        let stringArr: string[] = [];\n        for (let i in res) {\n          if (res[i][\"taskName\"] && res[i][\"projectName\"]) { // task\n            let string = res[i]['user'] + ' ' + res[i]['action'] + \" \" + res[i]['taskName'] + ' в проекте ' + res[i]['projectName']\n            stringArr.push(string);\n          }\n\n          else if (res[i][\"taskName\"] && !res[i][\"projectName\"]) { // comment\n            let string = res[i][\"user\"] + \" \" + res[i][\"action\"] + \" \" + res[i][\"taskName\"]\n            stringArr.push(string);\n          }\n\n          else if (!res[i][\"taskName\"] && res[i][\"projectName\"]) { // project\n            let string = res[i][\"user\"] + \" \" + res[i][\"action\"] + \" \" + res[i][\"projectName\"]\n            stringArr.push(string);\n          }\n        }\n\n        this.events = stringArr.reverse();\n        this.setPage(1);\n      }\n    )\n  }\n\n  setPage(page: number) {\n    if (page  this.pager.totalPages) {\n      return;\n    }\n\n    // get pager object from service\n    this.pager = this.pagerService.getPager(this.events.length, page);\n\n    console.log(this.pager);\n    // get current page of items\n    this.pagedItems = this.events.slice(this.pager.startIndex, this.pager.endIndex + 1);\n  }\n\n\n}\n\n    \n\n    \n        \n\n    \n      \n        &laquo;\n      \n      \n        &lt;\n      \n      \n        {{page}}\n      \n      \n        >\n      \n      \n        &raquo;\n      \n    \n  \n\n    {{event}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  «                                        {{page}}                    >                    »                {{event}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'EventsListComponent', 'selector': 'app-events-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'ProjectComponent', 'selector': 'app-project'},{'name': 'ProjectsListComponent', 'selector': 'app-projects-list'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksListComponent', 'selector': 'app-tasks-list'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UsersListComponent', 'selector': 'app-users-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventsListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FilterData.html":{"url":"pipes/FilterData.html","title":"pipe - FilterData","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  FilterData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/SHARED/pipes/filter-data.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Фильтр задач по дате.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        filter\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: any, filterType?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/SHARED/pipes/filter-data.pipe.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        filterType\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { PipeTransform, Pipe } from \"@angular/core\";\n\n/**\n* Фильтр задач по дате.\n*/\n@Pipe({\n    name: 'filter'\n})\nexport class FilterData implements PipeTransform {\n    transform(value: any, filterType?: any) {\n        let now = new Date();\n        let today = new Date(now.getFullYear(), now.getMonth(), now.getDate())\n\n        switch (filterType) {\n            case \"1\": // All the tasks\n                return value;\n\n            case \"2\": // Today\n                return value.filter(task => {\n                    let date = new Date(task.dateCompletion);\n                    let taskDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n                    return taskDate.valueOf() === today.valueOf();\n                });\n\n            case \"3\": // Week\n                return value.filter(task => {\n                    let date = new Date(task.dateCompletion);\n                    let taskDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n                    return (604800000 > taskDate.valueOf() - today.valueOf() && taskDate.valueOf() - today.valueOf() >= 0);\n                });\n\n            case \"4\": // Without date\n                return value.filter(task => {\n                    return !task.dateCompletion;\n                })\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GuardService.html":{"url":"injectables/GuardService.html","title":"injectable - GuardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SHARED/services/guard.service.ts\n        \n\n            \n                Description\n            \n            \n                Сервис защиты маршрутов.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService, dataService: DataService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/SHARED/services/guard.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                    DataService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/SHARED/services/guard.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from \"@angular/router\";\nimport { AuthService } from \"./auth.service\";\nimport { DataService } from \"./data.service\";\nimport { HttpClient, } from '@angular/common/http';\n\n/**\n* Сервис защиты маршрутов.\n*/\n@Injectable()\nexport class GuardService implements CanActivate {\n    constructor(private router: Router, private authService: AuthService,\n        private dataService: DataService, private http: HttpClient) { };\n\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n\n        if (!sessionStorage.getItem(\"id\")) {\n            this.router.navigate(['/login']);\n        }\n\n        else {\n            return this.http.get(\"http://localhost:2403\" + '/users/' + sessionStorage.getItem(\"id\")).map((res: Response) => {\n                if (res['id']) {\n                    if (res[\"role\"] == \"Администратор\") {\n                        this.authService.isAdmin = true;\n                        this.authService.isManager = false;\n                        this.authService.isWorker = false;\n                    } else if (res[\"role\"] == \"Менеджер\") {\n                        this.authService.isAdmin = false;\n                        this.authService.isManager = true;\n                        this.authService.isWorker = false;\n                    } else if (res[\"role\"] == \"Исполнитель\") {\n                        this.authService.isManager = false;\n                        this.authService.isWorker = true;\n                        this.authService.isAdmin = false;\n                    }\n\n                    this.authService.currentUser = res;\n                    this.authService.login = true;\n                    \n                    if (res[\"role\"] == \"Исполнитель\" && state[\"url\"] == \"/projects\") {\n                        this.router.navigate(['/tasks']);\n                    }\n\n                    return true;\n                }\n\n                else {\n                    this.router.navigate(['/login']);\n                    return false;\n                }\n            }).catch(this.dataService.handleError);\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/I18n.html":{"url":"injectables/I18n.html","title":"injectable - I18n","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  I18n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SHARED/services/calendar.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                language\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            language\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        language:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ru'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/services/calendar.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { NgbDatepickerI18n, NgbDateStruct } from \"@ng-bootstrap/ng-bootstrap\";\n\n//Меняем язык календаря\nconst I18N_VALUES = {\n    'ru': {\n        weekdays: ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'],\n        months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n    }\n    // other languages you would support\n};\n\n// Define a service holding the language. You probably already have one if your app is i18ned. Or you could also\n// use the Angular LOCALE_ID value\n@Injectable()\nexport class I18n {\n    language = 'ru';\n}\n\n// Define custom service providing the months and weekdays translations\n/**\n* Сервис локализации календаря.\n*/\n@Injectable()\nexport class CustomDatepicker extends NgbDatepickerI18n {\n\n    constructor(private _i18n: I18n) {\n        super();\n    }\n\n    getWeekdayShortName(weekday: number): string {\n        return I18N_VALUES[this._i18n.language].weekdays[weekday - 1];\n    }\n    getMonthShortName(month: number): string {\n        return I18N_VALUES[this._i18n.language].months[month - 1];\n    }\n    getMonthFullName(month: number): string {\n        return this.getMonthShortName(month);\n    }\n\n    getDayAriaLabel(date: NgbDateStruct): string {\n        return `${date.day}-${date.month}-${date.year}`;\n    }\n}\n\n@Injectable()\nexport class DateOperations {\n    fromModel(date: Date): NgbDateStruct {\n        return (date && date.getFullYear) ? { year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate() } : null;\n    }\n\n    toModel(date: NgbDateStruct): Date {\n        return date ? new Date(date.year, date.month - 1, date.day) : null;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Форма для входа.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                form\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loginUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nloginUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/login/login.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Output\n} from '@angular/core';\nimport {\n  FormGroup,\n  Validators,\n  FormBuilder\n} from \"@angular/forms\";\nimport { AuthService } from '../SHARED/services/auth.service';\nimport { Router } from '@angular/router';\n\ndeclare var jquery:any;\ndeclare var $ :any;\ndeclare var TweenMax:any;\n\n/**\n* Форма для входа.\n*/\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  form: FormGroup;\n\n  loginForm: FormGroup;\n  errorMessage;\n\n  constructor(private fb: FormBuilder, private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: ['', [Validators.required]],\n      password: ['pass', [Validators.required]]\n    })\n\n    $(\".paralax-container\").mousemove(function (e) {\n      parallaxIt(e, \".paralax_slide\", -50);\n      parallaxIt(e, \"img\", -30);\n      parallaxIt(e, \".paralax_title\", -70);\n      parallaxIt(e, \".paralax_desc\", -55);\n    });\n\n    function parallaxIt(e, target, movement) {\n      var $this = $(\".paralax-container\");\n      var relX = e.pageX - $this.offset().left;\n      var relY = e.pageY - $this.offset().top;\n\n      TweenMax.to(target, 1, {\n        x: (relX - $this.width() / 2) / $this.width() * movement,\n        y: (relY - $this.height() / 2) / $this.height() * movement\n      });\n    }\n  }\n\n  loginUser() {\n    // this.authService.login = true;\n    console.log(this.loginForm.value);\n    this.authService.logIn(this.loginForm.value);\n\n  }\n}\n    \n\n    \n        \n  Booster\n  Система управления проектами\n\n  \n\n  \n    \n  \n  \n    \n  \n\n  О системе\n\n  \n    \n      \n        Добро пожаловать! Чтобы начать работать войдите в систему:\n        \n          \n            Имя пользователя\n            \n          \n          \n            Пароль\n            \n          \n          \n            \n            Оставаться в системе\n          \n          Войти\n        \n\n      \n      \n        Booster представляет собой автоматизированную систему управления проектами. Его использование в коммерческих целях\n          разрешено только с письменного соглашения автора.\n\n        \n          \n             Лещенко Владислав\n          \n            \n            misire351@gmail.com\n          \n          \n            \n            +380687771953\n          \n        \n\n        Назад\n      \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Booster  Система управления проектами                    О системе                    Добро пожаловать! Чтобы начать работать войдите в систему:                              Имя пользователя                                            Пароль                                                        Оставаться в системе                    Войти                            Booster представляет собой автоматизированную систему управления проектами. Его использование в коммерческих целях          разрешено только с письменного соглашения автора.                               Лещенко Владислав                                  misire351@gmail.com                                            +380687771953                          Назад            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'EventsListComponent', 'selector': 'app-events-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'ProjectComponent', 'selector': 'app-project'},{'name': 'ProjectsListComponent', 'selector': 'app-projects-list'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksListComponent', 'selector': 'app-tasks-list'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UsersListComponent', 'selector': 'app-users-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/menu/menu.component.ts\n\n\n    \n        Description\n    \n    \n        Компонент меню. Используется во всех компонентах кроме модуля.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu\n            \n\n            \n                styleUrls\n                menu.component.css\n            \n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                events\n                            \n                            \n                                fixedProject\n                            \n                            \n                                notifCounter\n                            \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                accept\n                            \n                            \n                                getEvents\n                            \n                            \n                                getFixedProject\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                wathNotif\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/menu/menu.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                    DataService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accept\n                            \n                            \n                        \n                    \n                \n                \n                    \naccept(id: , type: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/menu/menu.component.ts:107\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEvents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/menu/menu.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFixedProject\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFixedProject()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/menu/menu.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/menu/menu.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/menu/menu.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wathNotif\n                            \n                            \n                        \n                    \n                \n                \n                    \nwathNotif()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/menu/menu.component.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/menu/menu.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            events\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        events:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/menu/menu.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fixedProject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fixedProject:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/menu/menu.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifCounter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifCounter:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menu/menu.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/menu/menu.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../SHARED/services/auth.service';\nimport { Router } from '@angular/router';\nimport { DataService } from '../SHARED/services/data.service';\n\n\n/**\n* Компонент меню. Используется во всех компонентах кроме модуля.\n*/\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n  events;\n  currentUser;\n  fixedProject;\n  notifCounter: number = 0;\n  notifications;\n\n\n  constructor(private authService: AuthService, private router: Router, private dataService: DataService) { }\n\n  ngOnInit() {\n    this.currentUser = this.authService.currentUser;\n\n    if (this.authService.currentUser[\"notifications\"])\n\n    for (let i in this.currentUser.notifications) {\n      if (this.currentUser.notifications[i][\"wathed\"]) continue;\n      else this.notifCounter++;\n    }\n\n  }\n\n  logout() {\n    this.authService.login = false;\n    sessionStorage.removeItem('id');\n\n    this.router.navigate(['login']);\n  }\n\n  getFixedProject() {\n    this.dataService.getFixedProjects(this.currentUser).subscribe(\n      res => {\n        this.fixedProject = res;\n      }\n    );\n\n  }\n\n  getEvents() {\n    this.dataService.getEvents().subscribe(\n      (res) => {\n        let stringArr: string[] = [];\n        for (let i in res) {\n          if (res[i][\"taskName\"] && res[i][\"projectName\"]) { // task\n            let string = res[i]['user'] + ' ' + res[i]['action'] + \" \" + res[i]['taskName'] + ' в проекте ' + res[i]['projectName']\n            stringArr.push(string);\n          }\n\n          else if (res[i][\"taskName\"] && !res[i][\"projectName\"]) { // comment\n            let string = res[i][\"user\"] + \" \" + res[i][\"action\"] + \" \" + res[i][\"taskName\"]\n            stringArr.push(string);\n          }\n\n          else if (!res[i][\"taskName\"] && res[i][\"projectName\"]) { // project\n            let string = res[i][\"user\"] + \" \" + res[i][\"action\"] + \" \" + res[i][\"projectName\"]\n            stringArr.push(string);\n          }\n        }\n\n        this.events = stringArr.reverse().slice(0, 3);\n      }\n    )\n  }\n\n  wathNotif() {\n    this.authService.getCurrentUser().subscribe(\n      res => {\n        if (res[\"notifications\"] !== null) {\n          let user = res;\n          let length;\n          (res[\"notifications\"].length  this.notifCounter = 0\n          );\n        }\n      }\n    )\n\n\n\n\n\n\n  }\n\n  accept(id, type) {\n    if (type == 2) {\n      this.dataService.getTask(id).subscribe(\n        (res) => {\n          let task = res;\n\n          task[\"status\"] = \"В работе\";\n          this.dataService.updateTask(task).subscribe();\n\n          let arr = this.currentUser.notifications;\n\n          this.dataService.getUser(this.currentUser.id).subscribe(\n            res => {\n              let user = res;\n              console.log(res)\n              for (let i in user.notifications) {\n                if (user.notifications[i]['object'].id == id && user.notifications[i].button) {\n                  console.log('hello');\n                  user.notifications[i].button = false;\n                }\n              }\n\n              this.getEvents();\n              this.dataService.updateUser(user).subscribe();\n            }\n          )\n\n\n\n\n\n        }\n      )\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n  \n  \n    \n    \n\n\n      \n\n        \n          \n             Список дел\n        \n\n\n        \n           Проекты\n\n        \n          \n          \n            \n              {{project.projectName}}\n            \n            В избранных нету проектов\n          \n        \n\n        \n           Сотрудники\n      \n\n      \n        \n          \n            \n            {{notifCounter}} Уведомления \n          \n            Уведомления отсутствуют\n            {{notif.author}} {{notif.action}} «{{notif.object.name}}»\n\n              Принять\n            \n          \n        \n\n        \n          \n             Действия\n          \n            {{event}}\n\n            \n              Больше\n            \n          \n        \n\n\n      \n\n      \n        \n           {{currentUser.lastName}}\n        \n\n        \n          \n        \n\n      \n\n\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                 Список дел                           Проекты                                                      {{project.projectName}}                        В избранных нету проектов                                     Сотрудники                                                      {{notifCounter}} Уведомления                       Уведомления отсутствуют            {{notif.author}} {{notif.action}} «{{notif.object.name}}»              Принять                                                             Действия                      {{event}}                          Больше                                                             {{currentUser.lastName}}                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'EventsListComponent', 'selector': 'app-events-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'ProjectComponent', 'selector': 'app-project'},{'name': 'ProjectsListComponent', 'selector': 'app-projects-list'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksListComponent', 'selector': 'app-tasks-list'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UsersListComponent', 'selector': 'app-users-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationComponent.html":{"url":"components/NotificationComponent.html","title":"component - NotificationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notification/notification.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notification\n            \n\n            \n                styleUrls\n                notification.component.css\n            \n\n\n\n            \n                templateUrl\n                ./notification.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                notification\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                showNotif\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_notifsService: NotificationsService, elRef: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/notification/notification.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _notifsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notification/notification.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showNotif\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowNotif()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/notification/notification.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notification\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notification:     NotificationType\n\n                    \n                \n                    \n                        \n                            Type :     NotificationType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notification/notification.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ElementRef, Renderer2 } from '@angular/core';\nimport { NotificationsService } from '../SHARED/services/notifications.service';\nimport { NotificationType } from '../SHARED/models/notification';\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.css']\n})\nexport class NotificationComponent implements OnInit {\n  notification: NotificationType;\n\n  constructor(private _notifsService: NotificationsService, private elRef: ElementRef, private renderer: Renderer2) {\n  }\n\n  ngOnInit() {\n    this._notifsService.onNotifChange.subscribe(\n      notif => {\n        let typeClass;\n\n        switch (notif.type) {\n          case 1: typeClass = \"success\";\n            break;\n          case 2: typeClass = \"error\";\n            break;\n        }\n\n        this.notification = notif;\n\n        if (typeClass) this.renderer.addClass(this.elRef.nativeElement, typeClass);\n        this.renderer.addClass(this.elRef.nativeElement, 'show');\n\n        setTimeout(() => {\n          this.renderer.addClass(this.elRef.nativeElement, 'hide');\n          this.renderer.removeClass(this.elRef.nativeElement, 'show');\n\n          setTimeout(() => {\n            this.renderer.removeClass(this.elRef.nativeElement, 'hide');\n            this.renderer.removeClass(this.elRef.nativeElement, typeClass);\n          }, 500);\n\n        }, 3000)\n      }\n    )\n  }\n\n  showNotif() {\n\n  }\n\n}\n\n    \n\n    \n        \n  {{notification?.body}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{notification?.body}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'EventsListComponent', 'selector': 'app-events-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'ProjectComponent', 'selector': 'app-project'},{'name': 'ProjectsListComponent', 'selector': 'app-projects-list'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksListComponent', 'selector': 'app-tasks-list'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UsersListComponent', 'selector': 'app-users-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotificationType.html":{"url":"classes/NotificationType.html","title":"class - NotificationType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotificationType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SHARED/models/notification.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(body: , type: )\n                    \n                \n                        \n                            \n                                Defined in src/app/SHARED/models/notification.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        body:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/notification.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/notification.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NotificationType {\n    body: string;\n    type: number;\n\n    constructor(body, type) {\n        this.body = body;\n        this.type = type;\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SHARED/services/notifications.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                notification\n                            \n                            \n                                onNotifChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNotification\n                            \n                            \n                                setNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNotification()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/SHARED/services/notifications.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetNotification(notification: , type?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/SHARED/services/notifications.service.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            notification\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notification:     NotificationType\n\n                    \n                \n                    \n                        \n                            Type :     NotificationType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/services/notifications.service.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onNotifChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onNotifChange:     \n\n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/services/notifications.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, EventEmitter } from \"@angular/core\";\nimport { NotificationType } from '../models/notification';\n\n@Injectable()\nexport class NotificationsService {\n    private notification: NotificationType;\n\n    onNotifChange = new EventEmitter();\n\n    setNotification(notification, type?) {\n        this.notification = new NotificationType(notification, type)\n\n        this.onNotifChange.emit(this.notification);\n    }\n\n    getNotification() {\n        return this.notification;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagerService.html":{"url":"classes/PagerService.html","title":"class - PagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SHARED/services/pager.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPager\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPager\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPager(totalItems: number, currentPage: number, pageSize: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/SHARED/services/pager.service.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        totalItems\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        currentPage\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                1\n                                                        \n\n                                                \n                                                \n                                                        pageSize\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                5\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { totalItems: number; currentPage: number; pageSize: number; totalPages: any; startPage: number; ...\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as _ from 'underscore';\n\nexport class PagerService {\n    getPager(totalItems: number, currentPage: number = 1, pageSize: number = 5) {\n        // calculate total pages\n        let totalPages = Math.ceil(totalItems / pageSize);\n\n        let startPage: number, endPage: number;\n        \n        if (totalPages = totalPages) {\n                startPage = totalPages - 4;\n                endPage = totalPages;\n            } else {\n                startPage = currentPage - 2;\n                endPage = currentPage+2;\n            }\n        }\n\n        // calculate start and end item indexes\n        let startIndex = (currentPage - 1) * pageSize;\n        let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n        // create an array of pages to ng-repeat in the pager control\n        let pages = _.range(startPage, endPage + 1);\n\n        // return object with all pager properties required by the view\n        return {\n            totalItems: totalItems,\n            currentPage: currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            startIndex: startIndex,\n            endIndex: endIndex,\n            pages: pages\n        };\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Project.html":{"url":"classes/Project.html","title":"class - Project","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SHARED/models/projects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                dateCompletion\n                            \n                            \n                                dateCreation\n                            \n                            \n                                desc\n                            \n                            \n                                id\n                            \n                            \n                                manager\n                            \n                            \n                                managerId\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                taskQuantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        author:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/projects.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateCompletion\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateCompletion:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/projects.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateCreation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateCreation:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/projects.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        desc:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/projects.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/projects.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manager\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        manager:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/projects.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            managerId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        managerId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/projects.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/projects.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        status:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/projects.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskQuantity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        taskQuantity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/projects.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Project {\n    name: string;\n    desc: string;\n    status: string;\n    author: string;\n    id: string;\n    taskQuantity: number\n    dateCreation: Date\n    dateCompletion: Date\n    managerId: string;\n    manager: string;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectComponent.html":{"url":"components/ProjectComponent.html","title":"component - ProjectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProjectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project/project.component.ts\n\n\n    \n        Description\n    \n    \n        Компонент проекта. Создание нового проекта либо отображение существующего.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project\n            \n\n            \n                styleUrls\n                project.component.css\n            \n\n\n\n            \n                templateUrl\n                ./project.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                managerId\n                            \n                            \n                                newProject\n                            \n                            \n                                project\n                            \n                            \n                                projectForm\n                            \n                            \n                                statuses\n                            \n                            \n                                title\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUsers\n                            \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                open\n                            \n                            \n                                saveProject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, dataService: DataService, fb: FormBuilder, activatedRoute: ActivatedRoute, authService: AuthService, config: NgbDatepickerConfig, modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/project/project.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                    DataService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    NgbDatepickerConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUsers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/project/project.component.ts:136\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goBack\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoBack()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/project/project.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/project/project.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \nopen(content: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/project/project.component.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        content\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveProject\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveProject()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/project/project.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            managerId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        managerId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project/project.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newProject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newProject:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project/project.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            project\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        project:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project/project.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projectForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        projectForm:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project/project.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statuses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statuses:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\"В работе\", \"Завершен\", \"Отменен\", \"Не определен\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project/project.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/project/project.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project/project.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DataService } from '../SHARED/services/data.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../SHARED/services/auth.service';\nimport { NgbDatepickerConfig, NgbDateStruct, NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n/**\n* Компонент проекта. Создание нового проекта либо отображение существующего.\n*/\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css']\n})\nexport class ProjectComponent implements OnInit {\n  project; //Текущий обьъект проекта получанный через идентификатор\n  projectForm; //Форма всего проекта связанная с шаблоном\n  users;\n  managerId: string;\n  newProject: boolean = false;\n\n  title: string; //Заголовок о создании нового проекта\n  statuses = [\"В работе\", \"Завершен\", \"Отменен\", \"Не определен\"]\n\n  constructor(private router: Router, private dataService: DataService,\n    private fb: FormBuilder, private activatedRoute: ActivatedRoute,\n    private authService: AuthService, config: NgbDatepickerConfig, private modalService: NgbModal) {\n\n\n    // customize default values of datepickers used by this component tree\n    config.minDate = { year: 1900, month: 1, day: 1 };\n    config.maxDate = { year: 2099, month: 12, day: 31 };\n\n    // days that don't belong to current month are not visible\n    config.outsideDays = 'hidden';\n\n    // weekends are disabled\n    config.markDisabled = (date: NgbDateStruct) => {\n      const d = new Date(date.year, date.month - 1, date.day);\n      return d.getDay() === 0 || d.getDay() === 6;\n    };\n  }\n\n  ngOnInit() {\n    let id = this.activatedRoute.snapshot.params[\"id\"];\n\n\n    //Создаем форму проекта\n    this.projectForm = this.fb.group({\n      name: [{ value: '', disabled: this.authService.isWorker }, [Validators.required]],\n      desc: [{ value: '', disabled: this.authService.isWorker }, [Validators.required]],\n      status: [{ value: '', disabled: this.authService.isWorker }],\n      author: [{ value: '', disabled: this.authService.isWorker }],\n      id: [],\n      taskQuantity: [],\n      dateCreation: [],\n      dateCompletion: [],\n      managerId: '',\n      manager: ''\n    });\n\n    //Определяем открыть проект или создать новый\n    if (id) {\n      this.dataService.getProject(id).subscribe((res) => {\n        this.projectForm.patchValue(res);\n        this.managerId = res[\"managerId\"];\n      });\n    }\n\n    else {\n      this.title = 'Создать новый проект:';\n      this.newProject = true;\n    }\n\n  }\n\n  goBack() {\n    this.router.navigate(['projects']);\n  }\n\n  saveProject() { // Создание нового проекта\n    let these = this;\n    if (!this.projectForm.value.id) {\n      this.projectForm.value.author = this.authService.currentUser[\"firstName\"] + \" \" + this.authService.currentUser[\"lastName\"];\n      this.projectForm.value[\"dateCreation\"] = new Date();\n\n      this.dataService.createProject(this.projectForm.value).subscribe((res) => {\n        console.log(res);\n        this.dataService.sendEvent(this.projectForm.value.author, this.projectForm.value.name, undefined, 'создал проект').subscribe();\n        this.goBack();\n      })\n    }\n\n\n    else { // Обновление проекта\n      this.dataService.updateProject(this.projectForm.value).subscribe((result) => {\n\n        // console.log(result);\n\n        if (this.managerId !== result.managerId) {\n          these.dataService.getTasks().subscribe(\n            (res) => {\n\n              console.log(res);\n              for (let i in res) {\n                console.log(res[i].managerId == this.managerId && res[i].projectId == result.id);\n                if ( res[i].managerId == this.managerId && res[i].projectId == result.id) {\n                  let task = res[i];\n                  task.managerId = this.projectForm.value.managerId;\n                  console.log(task);\n                  these.dataService.updateTask(task).subscribe();\n                }\n              }\n            }\n          )\n        }\n\n        this.goBack();\n      })\n    }\n\n\n  }\n\n\n  //Вслыпающее окно участников\n  open(content) {\n    this.getUsers();\n    this.modalService.open(content).result.then((result) => {\n      this.projectForm.value.managerId = result[\"id\"];\n      this.projectForm.value.manager = result[\"lastName\"] + ' ' + result[\"firstName\"];\n    }, (reason) => { });\n  }\n\n  getUsers() {\n    this.dataService.getUsers().subscribe(\n      res => {\n        let users = [];\n\n        for (let i in res) {\n          if (res[i][\"role\"] == \"Менеджер\"){\n            users.push(res[i]);\n          }\n        }\n        this.users = users;\n      }\n    );\n  }\n \n\n}\n\n    \n\n    \n         {{title}} \n\n  \n    \n  \n  \n\n    \n      \n         Менеджер:\n      {{projectForm?.value.manager}}\n        Выбрать\n      \n    \n\n    \n      \n         Статус:\n      \n      \n        {{status}}\n      \n    \n\n\n\n    \n      Дата завершения: \n\n      \n        \n          \n            \n            \n              \n                \n              \n            \n          \n        \n      \n    \n\n\n    \n      \n         Автор проекта:\n      {{this.projectForm.value.author}}\n    \n\n  \n\n  \n  \n    Описание: \n    \n    \n  \n  \n\n\n\n  Отменить\n  Сохранить\n\n\n\n\n\n\n\n  \n    {{this.projectForm.value.name}}\n    \n      &times;\n    \n  \n  \n\n    \n      \n      \n        \n          {{user.lastName}} {{user.firstName}}\n        \n      \n\n    \n\n\n\n  \n  \n    Закрыть\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' {{title}}                              Менеджер:      {{projectForm?.value.manager}}        Выбрать                             Статус:                    {{status}}                    Дата завершения:                                                                                                                                                        Автор проекта:      {{this.projectForm.value.author}}              Описание:               Отменить  Сохранить      {{this.projectForm.value.name}}          ×                                          {{user.lastName}} {{user.firstName}}                          Закрыть  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'EventsListComponent', 'selector': 'app-events-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'ProjectComponent', 'selector': 'app-project'},{'name': 'ProjectsListComponent', 'selector': 'app-projects-list'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksListComponent', 'selector': 'app-tasks-list'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UsersListComponent', 'selector': 'app-users-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsListComponent.html":{"url":"components/ProjectsListComponent.html","title":"component - ProjectsListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProjectsListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/projects-list/projects-list.component.ts\n\n\n    \n        Description\n    \n    \n        Компонент списка проектов.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            NgbDropdownConfig\n                \n            \n\n\n            \n                selector\n                app-projects-list\n            \n\n            \n                styleUrls\n                projects-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./projects-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkedProject\n                            \n                            \n                                errorMessage\n                            \n                            \n                                projects\n                            \n                            \n                                workers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bindProject\n                            \n                            \n                                deleteProject\n                            \n                            \n                                    Private\n                                getDismissReason\n                            \n                            \n                                    Private\n                                getProjects\n                            \n                            \n                                getUsersInProject\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, router: Router, authService: AuthService, modalService: NgbModal, config: NgbDropdownConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/projects-list/projects-list.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                    DataService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    NgbDropdownConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bindProject\n                            \n                            \n                        \n                    \n                \n                \n                    \nbindProject(project: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/projects-list/projects-list.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        project\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteProject\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteProject(project: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/projects-list/projects-list.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        project\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getDismissReason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDismissReason(reason: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/projects-list/projects-list.component.ts:101\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reason\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getProjects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getProjects()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/projects-list/projects-list.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUsersInProject\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUsersInProject(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/projects-list/projects-list.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/projects-list/projects-list.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \nopen(content: , project: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/projects-list/projects-list.component.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        content\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        project\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkedProject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        checkedProject:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/projects-list/projects-list.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects-list/projects-list.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        projects:     Project[]\n\n                    \n                \n                    \n                        \n                            Type :     Project[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects-list/projects-list.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        workers:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/projects-list/projects-list.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../SHARED/services/data.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../SHARED/services/auth.service';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Project } from '../SHARED/models/projects';\nimport { NgbDropdownConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { AppearanceTrigger } from '../SHARED/animations';\n\n/**\n* Компонент списка проектов.\n*/\n@Component({\n  selector: 'app-projects-list',\n  templateUrl: './projects-list.component.html',\n  styleUrls: ['./projects-list.component.css'],\n  providers: [NgbDropdownConfig],\n  animations: [AppearanceTrigger]\n})\nexport class ProjectsListComponent implements OnInit {\n  projects: Project[] = [];\n  checkedProject;\n  workers = [];\n\n  errorMessage: string;\n  constructor(private dataService: DataService, private router: Router,\n    private authService: AuthService, private modalService: NgbModal, config: NgbDropdownConfig) {\n    config.placement = 'bottom-right';\n  }\n\n  ngOnInit() {\n    this.getProjects();\n  }\n\n  private getProjects() {\n    this.dataService.getProjects().subscribe(\n      projects => {\n        this.projects = projects;\n        \n      },\n      error => this.errorMessage = error\n    );\n  }\n\n  deleteProject(project) {\n    this.dataService.deleteProject(project).subscribe((res) => {\n      this.getProjects();\n    })\n  }\n\n  bindProject(project) {\n    this.dataService.bindProject(project, this.authService.currentUser)\n  }\n\n  //Вслыпающее окно участников\n  open(content, project) {\n    console.log(project.id);\n    this.getUsersInProject(project.id);\n\n    this.checkedProject = project;\n    this.modalService.open(content).result.then((result) => {\n      this.workers = [];\n      console.log(`Closed with: ${result}`);\n    }, (reason) => { this.workers = [] });\n  }\n\n  getUsersInProject(id) {\n    this.dataService.getTasks(id).subscribe(\n      res => {\n        nextTask: for (let i in res) {\n          if (!res[i][\"workerId\"]) {\n            continue nextTask;\n          }\n\n          this.dataService.getUser(res[i][\"workerId\"]).subscribe(\n            result => {\n\n              for (let j in this.workers) { // Проверка на повторение одного пользователя в разных задачах\n                if (res[i][\"workerId\"] == this.workers[j][\"workerId\"]) return;\n              }\n\n              this.workers.push(\n                {\n                  worker: result[\"firstName\"] + \" \" + result[\"lastName\"],\n                  workerId: res[i][\"workerId\"],\n                  img: result[\"imgLink\"]\n                }\n              );\n            }\n          )\n\n\n\n        }\n\n\n      }\n    );\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n}\n\n    \n\n    \n        \n  {{errorMessage}}\n\n\n  \n    \n       Проект\n       Задач\n       Статус\n       Менеджер\n      \n    \n  \n  \n    {{project.name}}\n     {{project.taskQuantity}} \n     {{project.status}} \n     {{project.manager}} \n    \n      \n        \n        \n          Закрепить / Открепить\n          Детали проекта\n          Учасники\n          Завершить -->\n          Удалить\n        \n      \n\n    \n  \n\n\n\n  Создать проект\n   Обновить\n\n\n\n\n\n  \n    {{checkedProject.name}}\n    \n      &times;\n    \n  \n\n  Учасников проекта еще не добавлено. Создайте задачу и назначьте исполнителя.\n  \n\n    \n      \n      \n      \n        {{worker.worker}}\n    \n  \n  \n    Закрыть\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{errorMessage}}             Проект       Задач       Статус       Менеджер                  {{project.name}}     {{project.taskQuantity}}      {{project.status}}      {{project.manager}}                                     Закрепить / Открепить          Детали проекта          Учасники          Завершить -->          Удалить                      Создать проект   Обновить      {{checkedProject.name}}          ×        Учасников проекта еще не добавлено. Создайте задачу и назначьте исполнителя.                                {{worker.worker}}            Закрыть  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'EventsListComponent', 'selector': 'app-events-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'ProjectComponent', 'selector': 'app-project'},{'name': 'ProjectsListComponent', 'selector': 'app-projects-list'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksListComponent', 'selector': 'app-tasks-list'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UsersListComponent', 'selector': 'app-users-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SearchPipe.html":{"url":"pipes/SearchPipe.html","title":"pipe - SearchPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  SearchPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/SHARED/pipes/search.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Фильтр поиска.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        search\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: , searchPrase?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/SHARED/pipes/search.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        searchPrase\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\n/**\n* Фильтр поиска.\n*/\n@Pipe(\n    {\n        name: 'search'\n    }\n)\nexport class SearchPipe implements PipeTransform {\n    transform(value, searchPrase?) {\n\n        if (searchPrase) {\n            return value.filter(user => {\n                return (~user.firstName.toLowerCase().indexOf(searchPrase.toLowerCase()) || ~user.lastName.toLowerCase().indexOf(searchPrase.toLowerCase()) || !searchPrase);\n            });\n        }\n\n        else return value\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SortData.html":{"url":"pipes/SortData.html","title":"pipe - SortData","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  SortData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/SHARED/pipes/sort-data.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Фильтр сортировки.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        sort\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: , typeSort?: , order?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/SHARED/pipes/sort-data.pipe.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        typeSort\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        order\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\n\n/**\n* Фильтр сортировки.\n*/\n@Pipe({\n    name: 'sort'\n})\nexport class SortData implements PipeTransform {\n    transform(value, typeSort?, order?) {\n        return value.sort(function (a, b) {\n\n            if (typeSort == \"1\") { // Сортировка по дате\n\n                let c = new Date(a.dateCompletion).valueOf();\n                let d = new Date(b.dateCompletion).valueOf();\n\n                if(!c) c = 0;\n                if(!d) d = 0;\n\n                if (order) return d - c;\n                if (!order) return c - d;\n            }\n\n            else if (typeSort == \"2\") { // Сортировка по имени\n                a = a.name;\n                b = b.name;\n                if (order) return b  a;\n            }\n\n            else if (typeSort == \"3\") { // Сортировка по статусу\n                a = a.status;\n                b = b.status;\n                if (order) return b  a;\n            }\n        });\n\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SHARED/models/task.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                authorId\n                            \n                            \n                                dateCompletion\n                            \n                            \n                                dateCreation\n                            \n                            \n                                dateStart\n                            \n                            \n                                desc\n                            \n                            \n                                id\n                            \n                            \n                                managerId\n                            \n                            \n                                name\n                            \n                            \n                                projectId\n                            \n                            \n                                projectName\n                            \n                            \n                                status\n                            \n                            \n                                worker\n                            \n                            \n                                workerId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        author:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/task.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authorId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authorId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/task.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateCompletion\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateCompletion:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/task.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateCreation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateCreation:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/task.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateStart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateStart:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/task.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        desc:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/task.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/task.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            managerId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        managerId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/task.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/task.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projectId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        projectId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/task.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projectName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        projectName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/task.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        status:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/task.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            worker\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        worker:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/task.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workerId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        workerId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/task.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Task{\n    name: string;\n    desc: string;\n    projectId: string;\n    status: string\n    worker: string;\n    workerId: string;\n    author: string;\n    authorId: string;\n    dateCreation: Date;\n    dateStart: Date;\n    dateCompletion: Date;\n    projectName: string;\n    managerId: string;\n    id: string\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskComponent.html":{"url":"components/TaskComponent.html","title":"component - TaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/task/task.component.ts\n\n\n    \n        Description\n    \n    \n        Компонент отображения, редактирования и создания задач.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            I18n\n                            { : , :  }\n                            DateOperations\n                \n            \n\n\n            \n                selector\n                app-task\n            \n\n            \n                styleUrls\n                task.component.css\n            \n\n\n\n            \n                templateUrl\n                ./task.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                fromDate\n                            \n                            \n                                hoveredDate\n                            \n                            \n                                isFrom\n                            \n                            \n                                isHovered\n                            \n                            \n                                isInside\n                            \n                            \n                                isTo\n                            \n                            \n                                isWorker\n                            \n                            \n                                model\n                            \n                            \n                                newTask\n                            \n                            \n                                statuses\n                            \n                            \n                                taskForm\n                            \n                            \n                                title\n                            \n                            \n                                toDate\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getDismissReason\n                            \n                            \n                                getUsers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDateSelection\n                            \n                            \n                                open\n                            \n                            \n                                saveTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, fb: FormBuilder, authService: AuthService, dataService: DataService, router: Router, modalService: NgbModal, calendar: NgbCalendar, dateOperations: DateOperations)\n                    \n                \n                        \n                            \n                                Defined in src/app/task/task.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                    DataService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        calendar\n                                                  \n                                                        \n                                                                    NgbCalendar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateOperations\n                                                  \n                                                        \n                                                                    DateOperations\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getDismissReason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDismissReason(reason: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/task/task.component.ts:212\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reason\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUsers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/task/task.component.ts:195\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/task/task.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onDateSelection\n                            \n                            \n                        \n                    \n                \n                \n                    \nonDateSelection(date: NgbDateStruct)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/task/task.component.ts:231\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                        \n                                                                    NgbDateStruct\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \nopen(content: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/task/task.component.ts:186\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        content\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveTask\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveTask()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/task/task.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disabled:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/task/task.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fromDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fromDate:     NgbDateStruct\n\n                    \n                \n                    \n                        \n                            Type :     NgbDateStruct\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/task/task.component.ts:227\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoveredDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hoveredDate:     NgbDateStruct\n\n                    \n                \n                    \n                        \n                            Type :     NgbDateStruct\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/task/task.component.ts:226\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFrom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isFrom:     \n\n                    \n                \n                    \n                        \n                            Default value : date => equals(date, this.fromDate)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/task/task.component.ts:246\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isHovered\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isHovered:     \n\n                    \n                \n                    \n                        \n                            Default value : date => this.fromDate && !this.toDate && this.hoveredDate && after(date, this.fromDate) && before(date, this.hoveredDate)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/task/task.component.ts:244\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isInside\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isInside:     \n\n                    \n                \n                    \n                        \n                            Default value : date => after(date, this.fromDate) && before(date, this.toDate)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/task/task.component.ts:245\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isTo:     \n\n                    \n                \n                    \n                        \n                            Default value : date => equals(date, this.toDate)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/task/task.component.ts:247\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isWorker\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isWorker:     \n\n                    \n                \n                    \n                        \n                            Default value : this.authService.isWorker\n                        \n                    \n                        \n                            \n                                    Defined in src/app/task/task.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     NgbDateStruct\n\n                    \n                \n                    \n                        \n                            Type :     NgbDateStruct\n\n                        \n                    \n                    \n                        \n                            Default value : { year: now.getFullYear(), month: now.getMonth() + 1, day: now.getDate() }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/task/task.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newTask\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newTask:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/task/task.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statuses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statuses:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\"В работе\", \"Выполнена\", \"Отмененная\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/task/task.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        taskForm:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/task/task.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/task/task.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toDate:     NgbDateStruct\n\n                    \n                \n                    \n                        \n                            Type :     NgbDateStruct\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/task/task.component.ts:228\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/task/task.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Input } from '@angular/core';\nimport { AuthService } from '../SHARED/services/auth.service';\nimport { DataService } from '../SHARED/services/data.service';\nimport { NgbModal, ModalDismissReasons, NgbDateStruct, NgbCalendar, NgbDatepickerI18n } from '@ng-bootstrap/ng-bootstrap';\nimport { CustomDatepicker, I18n, DateOperations } from '../SHARED/services/calendar.service'\nimport { Task } from '../SHARED/models/task';\n\nconst now = new Date();\n/**\n* Компонент отображения, редактирования и создания задач.\n*/\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css'],\n  providers: [I18n, { provide: NgbDatepickerI18n, useClass: CustomDatepicker }, DateOperations]\n})\nexport class TaskComponent implements OnInit {\n  taskForm;\n  title: string;\n  statuses = [\"В работе\", \"Выполнена\", \"Отмененная\"];\n  users;\n  newTask: boolean = false;\n\n  model: NgbDateStruct = { year: now.getFullYear(), month: now.getMonth() + 1, day: now.getDate() };\n  disabled = true;\n\n  isWorker = this.authService.isWorker;\n\n  constructor(private activatedRoute: ActivatedRoute, private fb: FormBuilder,\n    private authService: AuthService, private dataService: DataService, private router: Router, private modalService: NgbModal, calendar: NgbCalendar, private dateOperations: DateOperations) {\n\n    //this.toDate = calendar.getNext(calendar.getToday(), 'd', 12);\n  }\n\n  ngOnInit() {\n    this.taskForm = this.fb.group({\n      name: [{ value: '', disabled: this.authService.isWorker }, [Validators.required]],\n      desc: [{ value: '', disabled: this.authService.isWorker }, [Validators.required]],\n      projectId: [],\n      status: [{ disabled: this.authService.isWorker }, [Validators.required]],\n      worker: [],\n      workerId: [],\n      author: [],\n      authorId: '',\n      dateCreation: [],\n      dateStart: [],\n      dateCompletion: [],\n      projectName: [],\n      managerId: [],\n      id: []\n    });\n\n    let id = this.activatedRoute.snapshot.params['taskId'];\n\n    //Загрузка данных из сервера если это не новая задача\n    if (id && id !== 'new-task') {\n      this.dataService.getTask(id).subscribe(\n        res => {\n          this.taskForm.patchValue(res);\n          this.taskForm.value.dateCreation = new Date(res[\"dateCreation\"]);\n\n          if (!res[\"dateStart\"]) {\n            this.fromDate = this.dateOperations.fromModel(new Date());\n          }\n\n          else {\n            this.taskForm.value.dateStart = new Date(res[\"dateStart\"]);\n            this.taskForm.value.dateCompletion = new Date(res[\"dateCompletion\"]);\n\n            this.fromDate = this.dateOperations.fromModel(new Date(res[\"dateStart\"]));\n            this.toDate = this.dateOperations.fromModel(new Date(res[\"dateCompletion\"]));\n          }\n\n        },\n        err => this.router.navigate(['../'], { relativeTo: this.activatedRoute })\n      )\n    }\n\n    else if (id == 'new-task') {\n      this.title = 'Добавить задачу';\n      this.fromDate = this.dateOperations.fromModel(new Date());\n      this.newTask = true;\n    }\n\n\n\n  }\n\n  saveTask() {\n\n    if (this.dateOperations.toModel(this.toDate) !== this.taskForm.value.dateCompletion) {\n      this.taskForm.value.dateStart = this.dateOperations.toModel(this.fromDate);\n      this.taskForm.value.dateCompletion = this.dateOperations.toModel(this.toDate);\n    }\n\n    //Обновление задачи\n    if (this.taskForm.value.id) {\n      if (this.toDate) {\n        this.taskForm.value.dateStart = this.dateOperations.toModel(this.fromDate);\n        this.taskForm.value.dateCompletion = this.dateOperations.toModel(this.toDate);\n      }\n      this.dataService.updateTask(this.taskForm.value).subscribe(\n        (res) => {\n          console.log('Данные сохранены');\n          this.router.navigate(['../'], { relativeTo: this.activatedRoute });\n        }\n      );\n    }\n\n    //Создание задачи\n    else {\n      this.taskForm.value.projectId = this.activatedRoute.snapshot.params['id'];\n      this.taskForm.value.author = this.authService.currentUser[\"lastName\"] + ' ' + this.authService.currentUser[\"firstName\"];\n      this.taskForm.value.authorId = this.authService.currentUser[\"id\"];\n\n      this.taskForm.value.dateCreation = new Date();\n\n      if (this.taskForm.value.worker) {\n        this.taskForm.value.status = \"Назначенная\";\n      } else {\n        this.taskForm.value.status = \"Новая\";\n      }\n\n      if (this.toDate) {\n        this.taskForm.value.dateStart = this.dateOperations.toModel(this.fromDate);\n        this.taskForm.value.dateCompletion = this.dateOperations.toModel(this.toDate);\n      }\n\n      this.dataService.getProject(this.activatedRoute.snapshot.params['id']).subscribe(\n        res => {\n          this.taskForm.value.projectName = res[\"name\"];\n          this.taskForm.value.managerId = res[\"managerId\"];\n          this.dataService.createTask(this.taskForm.value).subscribe(\n            task => {\n              \n              this.dataService.getProject(this.taskForm.value.projectId).subscribe(\n                resp => {\n                  let p = resp;\n                  if (!p['taskQuantity']) p['taskQuantity'] = 0;\n                  p['taskQuantity']++;\n                  this.dataService.updateProject(p).subscribe();\n                }\n              )\n\n              if (this.taskForm.value.worker) {\n                this.dataService.getUser(this.taskForm.value.workerId).subscribe(\n                  (response) => {\n                    let user = response;\n                    let notification = {\n                      author: this.taskForm.value.author,\n                      action: 'добавил Вас исполнителем к задаче',\n                      object: {\n                        type: 2,\n                        name: task[\"name\"],\n                        id: task[\"id\"]\n                      },\n                      wathed: false,\n                      button: true\n                    }\n\n                    if (!user.notifications) user.notifications = [];\n\n                    user.notifications.push(notification);\n\n                    this.dataService.updateUser(user).subscribe();\n                  }\n                )\n              }\n\n              this.router.navigate(['../'], { relativeTo: this.activatedRoute })\n            },\n            (err) => console.log(\"Ошибка при создании задачи.\")\n          );\n        }\n      )\n    }\n\n  }\n\n\n  //Вслыпающее окно работников\n  open(content) {\n    this.getUsers();\n    this.modalService.open(content).result.then((result) => {\n      this.taskForm.value.workerId = result[\"id\"];\n      this.taskForm.value.worker = result[\"lastName\"] + ' ' + result[\"firstName\"];\n    }, (reason) => { });\n  }\n\n\n  getUsers() {\n    this.dataService.getUsers().subscribe(\n      res => {\n        console.log(res);\n        let users = [];\n        for (let i in res) {\n          if (res[i].role == \"Исполнитель\") {\n            users.push(res[i]);\n          }\n        }\n\n        this.users = users;\n      }\n    );\n  }\n\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return reason;\n    }\n  }\n\n\n\n  // Календарь\n\n  hoveredDate: NgbDateStruct;\n  fromDate: NgbDateStruct;\n  toDate: NgbDateStruct;\n\n\n  onDateSelection(date: NgbDateStruct) {\n    if (!this.fromDate && !this.toDate) {\n      this.fromDate = date;\n    } else if (this.fromDate && !this.toDate && after(date, this.fromDate)) {\n      this.toDate = date;\n    } else {\n      this.toDate = null;\n      this.fromDate = date;\n    }\n\n  }\n\n\n  isHovered = date => this.fromDate && !this.toDate && this.hoveredDate && after(date, this.fromDate) && before(date, this.hoveredDate);\n  isInside = date => after(date, this.fromDate) && before(date, this.toDate);\n  isFrom = date => equals(date, this.fromDate);\n  isTo = date => equals(date, this.toDate);\n\n}\n\n\nconst equals = (one: NgbDateStruct, two: NgbDateStruct) => (one && two && two.year === one.year && two.month === one.month && two.day === one.day);\n\n\nconst before = (one: NgbDateStruct, two: NgbDateStruct) =>\n  !one || !two ? false : one.year === two.year ? one.month === two.month ? one.day === two.day\n    ? false : one.day \n  !one || !two ? false : one.year === two.year ? one.month === two.month ? one.day === two.day\n    ? false : one.day > two.day : one.month > two.month : one.year > two.year;\n    \n\n    \n         {{title}} \n\n  \n    \n  \n\n\n  \n\n    \n      \n\n        \n          \n             Исполнитель:\n          {{taskForm?.value.worker}}\n            Выбрать\n          \n        \n        \n          \n             Статус:\n          \n          \n            {{status}}\n          \n        \n\n\n        \n          \n             Автор задачи: {{this.taskForm.value.author}}\n        \n\n\n        \n          \n             Название проекта: {{taskForm.value.projectName}}\n        \n\n      \n      \n         Описание: \n\n      \n    \n\n    \n      \n         Дата завершения: \n      \n\n      \n        {{this.taskForm.value.dateCompletion | date : \"dd/MM/yyyy\"}}\n      \n\n      \n      \n\n\n      \n\n        \n          {{ date.day }}\n        \n      \n\n      \n      \n      \n        Дата создания: {{this.taskForm.value.dateCreation | date: 'short' }}\n      \n\n    \n\n  \n\n  \n    Назад\n    Сохранить\n  \n\n\n\n\n\n\n\n  \n    {{this.taskForm.value.name}}\n    \n      &times;\n    \n  \n  \n\n    \n      \n      \n        \n          {{user.lastName}} {{user.firstName}}\n        \n      \n    \n\n  \n  \n    Закрыть\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' {{title}}                                                    Исполнитель:          {{taskForm?.value.worker}}            Выбрать                                                 Статус:                                {{status}}                                                 Автор задачи: {{this.taskForm.value.author}}                                       Название проекта: {{taskForm.value.projectName}}                             Описание:                              Дата завершения:                     {{this.taskForm.value.dateCompletion | date : \"dd/MM/yyyy\"}}                                          {{ date.day }}                                        Дата создания: {{this.taskForm.value.dateCreation | date: \\'short\\' }}                  Назад    Сохранить        {{this.taskForm.value.name}}          ×                                          {{user.lastName}} {{user.firstName}}                          Закрыть  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'EventsListComponent', 'selector': 'app-events-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'ProjectComponent', 'selector': 'app-project'},{'name': 'ProjectsListComponent', 'selector': 'app-projects-list'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksListComponent', 'selector': 'app-tasks-list'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UsersListComponent', 'selector': 'app-users-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksListComponent.html":{"url":"components/TasksListComponent.html","title":"component - TasksListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TasksListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tasks-list/tasks-list.component.ts\n\n\n    \n        Description\n    \n    \n        Компонент отображения всех задач.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tasks-list\n            \n\n            \n                styleUrls\n                tasks-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tasks-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataOperations\n                            \n                            \n                                formatter\n                            \n                            \n                                msg\n                            \n                            \n                                myToDoList\n                            \n                            \n                                projectId\n                            \n                            \n                                search\n                            \n                            \n                                tasks\n                            \n                            \n                                titleProject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                getTasks\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openTask\n                            \n                            \n                                sortFunc\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, dataService: DataService, activatedRoute: ActivatedRoute, config: NgbDropdownConfig, configTabs: NgbTabsetConfig, authService: AuthService, pagerService: PagerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tasks-list/tasks-list.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                    DataService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    NgbDropdownConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        configTabs\n                                                  \n                                                        \n                                                                    NgbTabsetConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        pagerService\n                                                  \n                                                        \n                                                                    PagerService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createTask\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateTask()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks-list/tasks-list.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteTask\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteTask(task: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks-list/tasks-list.component.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        task\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTasks\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTasks(id: , worker?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks-list/tasks-list.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        worker\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks-list/tasks-list.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openTask\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenTask(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks-list/tasks-list.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortFunc\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortFunc(type: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/tasks-list/tasks-list.component.ts:95\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataOperations\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataOperations:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    filterType: \"1\",\n    sortType: \"1\",\n    sortOrder: true\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks-list/tasks-list.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formatter:     \n\n                    \n                \n                    \n                        \n                            Default value : (x: { name: string }) => x.name\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks-list/tasks-list.component.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        msg:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks-list/tasks-list.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myToDoList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        myToDoList:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks-list/tasks-list.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            projectId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        projectId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks-list/tasks-list.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        search:     \n\n                    \n                \n                    \n                        \n                            Default value : (text$: Observable) =>\n    text$.pipe(\n      debounceTime(200),\n      map(term => term === '' ? []\n        : this.tasks.filter(v => v.name.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\n    )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks-list/tasks-list.component.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tasks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tasks:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tasks-list/tasks-list.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            titleProject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titleProject:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tasks-list/tasks-list.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DataService } from '../SHARED/services/data.service';\nimport { NgbDropdownConfig, NgbTabsetConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthService } from '../SHARED/services/auth.service';\nimport { FilterData } from '../SHARED/pipes/filter-data.pipe';\nimport { Observable } from 'rxjs';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { AppearanceTrigger } from '../SHARED/animations';\nimport { PagerService } from '../SHARED/services/pager.service';\n\n/**\n* Компонент отображения всех задач.\n*/\n@Component({\n  selector: 'app-tasks-list',\n  templateUrl: './tasks-list.component.html',\n  styleUrls: ['./tasks-list.component.css'],\n  animations: [AppearanceTrigger]\n})\nexport class TasksListComponent implements OnInit {\n  tasks;\n  msg: string;\n  titleProject: string;\n  projectId: string;\n  myToDoList = false;\n\n\n\n  dataOperations = {\n    filterType: \"1\",\n    sortType: \"1\",\n    sortOrder: true\n  }\n\n  constructor(private router: Router, private dataService: DataService,\n    private activatedRoute: ActivatedRoute, config: NgbDropdownConfig, configTabs: NgbTabsetConfig, private authService: AuthService, private pagerService: PagerService) {\n    config.placement = 'bottom-right';\n    configTabs.justify = 'center';\n    configTabs.type = 'pills';\n  }\n\n  ngOnInit() {\n    this.activatedRoute.params.forEach((params) => {\n      this.getTasks(params[\"id\"], this.authService.currentUser);\n      this.projectId = params[\"id\"];\n      this.msg = \"\";\n      this.myToDoList = !params[\"id\"];\n    }\n    );\n\n    this.titleProject = this.activatedRoute.snapshot.queryParams[\"project\"]; // project name\n  }\n\n  getTasks(id, worker?) {\n\n    this.dataService.getTasks(id, worker).subscribe(\n      res => {\n        this.tasks = res;\n        if (!res.length) this.msg = 'Задачи отсутствуют! Нажмите на кнопку ниже чтобы добавить первую задачу.';\n      }\n    );\n\n  }\n\n\n  openTask(id) {\n    this.router.navigate([id], { relativeTo: this.activatedRoute });\n  }\n\n  createTask() {\n    this.router.navigate(['new-task'], { relativeTo: this.activatedRoute });\n  }\n\n  deleteTask(task) {\n    this.dataService.deleteTask(task).subscribe(\n      (res) => {\n        this.dataService.getProject(task.projectId).subscribe(\n          re => {\n            let p = re;\n            p['taskQuantity']--;\n\n            this.dataService.updateProject(p).subscribe(\n              res => {\n                this.getTasks(this.projectId, this.authService.currentUser.id);\n              }\n            )\n\n          }\n        )\n      }\n    )\n  }\n\n  sortFunc(type) {\n    this.dataOperations[\"sortOrder\"] = !this.dataOperations[\"sortOrder\"];\n    this.dataOperations[\"sortType\"] = type;\n  }\n\n\n  search = (text$: Observable) =>\n    text$.pipe(\n      debounceTime(200),\n      map(term => term === '' ? []\n        : this.tasks.filter(v => v.name.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\n    );\n\n  formatter = (x: { name: string }) => x.name;\n\n}\n\n    \n\n    \n        {{titleProject}}\n\n  \n    {{msg}}\n  \n\n\n\n\n  \n    \n       Все\n    \n    \n       Сегодня\n    \n    \n       7 дней\n    \n    \n       Без сроков\n    \n\n    \n      \n    \n\n  \n\n\n   {{r.name}}\n\n\n\n\n  \n    \n      \n        \n           Название\n      \n\n      \n        \n          \n        \n      \n\n      \n        \n           Статус\n      \n      \n         Постановщик\n      \n      \n         Исполнитель\n      \n      \n         Проект\n      \n      \n    \n  \n  \n    \n      {{task.name}}\n    \n    {{task.dateCompletion | date: 'd/M/yy'}}\n    \n      {{task.status}} \n     {{task.author}} \n     {{task.worker}} \n    \n      {{task.projectName}}\n    \n    \n      \n        \n        \n          Завершить\n          Удалить\n        \n      \n    \n\n  \n\n\n\n  Назад\n  Добавить задачу\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{titleProject}}      {{msg}}               Все               Сегодня               7 дней               Без сроков                       {{r.name}}                               Название                                                                     Статус                     Постановщик                     Исполнитель                     Проект                              {{task.name}}        {{task.dateCompletion | date: \\'d/M/yy\\'}}          {{task.status}}      {{task.author}}      {{task.worker}}           {{task.projectName}}                                        Завершить          Удалить                      Назад  Добавить задачу'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'EventsListComponent', 'selector': 'app-events-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'ProjectComponent', 'selector': 'app-project'},{'name': 'ProjectsListComponent', 'selector': 'app-projects-list'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksListComponent', 'selector': 'app-tasks-list'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UsersListComponent', 'selector': 'app-users-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TasksListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/SHARED/models/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                imgLink\n                            \n                            \n                                lastestLoginDate\n                            \n                            \n                                lastName\n                            \n                            \n                                notes\n                            \n                            \n                                notifications\n                            \n                            \n                                phone\n                            \n                            \n                                role\n                            \n                            \n                                    Optional\n                                status\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/user.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firstName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/user.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/user.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imgLink\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        imgLink:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/user.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastestLoginDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastestLoginDate:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/user.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/user.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notes:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/user.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Object[]\n\n                    \n                \n                    \n                        \n                            Type :     Object[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/user.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        phone:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/user.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/user.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            status\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        status:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/user.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/SHARED/models/user.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    email: string;\n    firstName: string;\n    id: string;\n    imgLink: string;\n    lastName: string;\n    lastestLoginDate: Date;\n    notifications: Object[];\n    phone: string;    \n    role: string;\n    status?: string;\n    username: string;\n    notes: string;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserComponent.html":{"url":"components/UserComponent.html","title":"component - UserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user/user.component.ts\n\n\n    \n        Description\n    \n    \n        Компонент формы текущего пользователя.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user\n            \n\n            \n                styleUrls\n                user.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isEditUser\n                            \n                            \n                                isNewUser\n                            \n                            \n                                msg\n                            \n                            \n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                title\n                            \n                            \n                                userForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                editUser\n                            \n                            \n                                getCurrentUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveNotes\n                            \n                            \n                                saveUser\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, router: Router, activatedRoute: ActivatedRoute, fb: FormBuilder, authService: AuthService, _notifService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/user.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                    DataService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _notifService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.component.ts:108\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.component.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editUser\n                            \n                            \n                        \n                    \n                \n                \n                    \neditUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentUser(id: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveNotes\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveNotes(note: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.component.ts:94\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        note\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/user.component.ts:99\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEditUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isEditUser:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNewUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isNewUser:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        msg:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roles:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Администратор\", \"Менеджер\", \"Исполнитель\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/user.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userForm:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/user/user.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { DataService } from '../SHARED/services/data.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AppearanceTrigger } from '../SHARED/animations';\nimport { AuthService } from '../SHARED/services/auth.service';\nimport { NotificationsService } from '../SHARED/services/notifications.service';\n\n/**\n* Компонент формы текущего пользователя.\n*/\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css'],\n  animations: [AppearanceTrigger]\n})\nexport class UserComponent implements OnInit {\n  userForm;\n  title: string;\n  roles = [\"Администратор\", \"Менеджер\", \"Исполнитель\"];\n  isNewUser: boolean = false;\n  isEditUser: boolean = false;\n  msg: string = \"\";\n  @ViewChild('password') password: ElementRef;\n\n  constructor(private dataService: DataService, private router: Router, private activatedRoute: ActivatedRoute, private fb: FormBuilder, private authService: AuthService, private _notifService: NotificationsService) { }\n\n  ngOnInit() {\n    this.userForm = this.fb.group({\n      firstName: null,\n      lastName: null,\n      role: null,\n      email: null,\n      id: null,\n      phone: null,\n      imgLink: null,\n      dateBirthday: null,\n      notifications: null,\n      username: null,\n      latestLoginDate: null,\n      notes: null\n    });\n\n    this.activatedRoute.params.forEach((params) => {\n      if (params[\"userId\"]) {\n        this.getCurrentUser(params[\"userId\"]);\n      }\n\n      else {\n        this.isNewUser = true;\n        this.isEditUser = true;\n        this.msg = \"Создать профиль\"\n      }\n    })\n  }\n\n  editUser() {\n    this.isEditUser = true;\n    this.msg = \"Редактировать профиль\"\n  }\n\n  saveUser() {\n    if (this.isNewUser) {\n      this.userForm.value[\"password\"] = this.password.nativeElement.value;\n\n      if (!this.userForm.value.imgLink) this.userForm.value.imgLink = './../../assets/avatar.jpg';\n\n      this.createUser();\n    }\n    else {\n      this.updateUser();\n    }\n  }\n\n  deleteUser() {\n    this.dataService.deleteUser(this.userForm.value).subscribe(\n      res => this.router.navigate(['/users'])\n    );\n  }\n\n  getCurrentUser(id) {\n    this.dataService.getUser(id).subscribe(\n      res => {\n        this.userForm.patchValue(res);\n        console.log(\"Ответ с сервера:\");\n        console.log(res);\n\n        console.log(this.userForm.getRawValue());\n      }\n    )\n  }\n\n  saveNotes(note) {\n    this.userForm.value.notes = note.value;\n    this.updateUser();\n  }\n\n  updateUser() {\n    this.dataService.updateUser(this.userForm.value).subscribe(\n      res => this._notifService.setNotification('Успешно сохранено', 1),\n      err => this._notifService.setNotification('Ошибка сохранения', 2)\n    );\n\n    this.isEditUser = false;\n  }\n\n  createUser() {\n    this.dataService.createUser(this.userForm.value).subscribe(\n      res => this.router.navigate(['/users'])\n    );\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n      \n      \n         Имя и фамилия: \n      \n      {{userForm.value.firstName}} {{userForm.value.lastName}}\n    \n    \n      \n         Личные данные:\n      \n          -->Статус: {{userForm.value.role}}\n      \n      \n          -->Email: {{userForm.value.email}}\n      \n      \n          -->Номер: {{userForm.value.phone}}\n      \n      \n      \n          -->День рождения: {{userForm.value.dateBirthday | date}}\n      \n      \n          -->Последняя активность: {{userForm.value.latestLoginDate | date : \"HH:mm dd/M/yyyy\"}}\n      \n\n      \n         Изменить\n      \n         Удалить\n\n\n    \n\n    \n      \n         Мои заметки:\n      {{userForm.value.notes}}\n      Сохранить\n    \n  \n\n\n\n  \n    \n       {{msg}}\n    \n      \n        \n        {{userForm.value.lastName}} {{userForm.value.firstName}}\n      \n\n      \n        Имя:\n        \n      \n      \n        Фамилия:\n        \n      \n\n      \n        Email:\n        \n      \n\n      \n        Номер:\n        \n      \n      \n        Имя пользователя:\n        \n        Используется для входа в систему\n      \n      \n        Должность:\n        \n          {{role}}\n        \n      \n\n      \n        Пароль:\n        \n      \n      \n        День рождения:\n        \n      \n\n      \n        Аватар:\n        \n        \n      \n    \n    \n      Сохранить\n    \n\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                         Имя и фамилия:             {{userForm.value.firstName}} {{userForm.value.lastName}}                       Личные данные:                -->Статус: {{userForm.value.role}}                      -->Email: {{userForm.value.email}}                      -->Номер: {{userForm.value.phone}}                            -->День рождения: {{userForm.value.dateBirthday | date}}                      -->Последняя активность: {{userForm.value.latestLoginDate | date : \"HH:mm dd/M/yyyy\"}}                     Изменить               Удалить                       Мои заметки:      {{userForm.value.notes}}      Сохранить                   {{msg}}                          {{userForm.value.lastName}} {{userForm.value.firstName}}                    Имя:                            Фамилия:                            Email:                            Номер:                            Имя пользователя:                Используется для входа в систему                    Должность:                  {{role}}                            Пароль:                            День рождения:                            Аватар:                                    Сохранить      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'EventsListComponent', 'selector': 'app-events-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'ProjectComponent', 'selector': 'app-project'},{'name': 'ProjectsListComponent', 'selector': 'app-projects-list'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksListComponent', 'selector': 'app-tasks-list'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UsersListComponent', 'selector': 'app-users-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/UserFilterData.html":{"url":"pipes/UserFilterData.html","title":"pipe - UserFilterData","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  UserFilterData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/SHARED/pipes/users-filter-data.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Фильтр отображения данных соответствующих текущему пользователю.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        userFilterData\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(values?: , type?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/SHARED/pipes/users-filter-data.pipe.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        values\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/SHARED/pipes/users-filter-data.pipe.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { PipeTransform, Pipe } from \"@angular/core\";\nimport { AuthService } from \"../services/auth.service\";\n\n/**\n* Фильтр отображения данных соответствующих текущему пользователю.\n*/\n@Pipe({\n    name: 'userFilterData'\n})\n\nexport class UserFilterData implements PipeTransform {\n    user;\n\n    constructor(authService: AuthService) {\n        this.user = authService.currentUser\n    }\n    transform(values?, type?) {\n        if (values) {\n            switch (type) {\n                case '1': // Задачи\n                    return values.filter(task => { \n                        return (task.workerId == this.user[\"id\"] && this.user[\"role\"] == \"Исполнитель\" || \n                                (this.user[\"role\"] == \"Администратор\") ||\n                                (this.user.id == task.managerId))\n                    });\n\n                case '2': // Проекты\n                    return values.filter(project => {\n                        console.log();\n                        return (project.managerId == this.user[\"id\"] && this.user[\"role\"] == \"Менеджер\" || \n                                this.user[\"role\"] == \"Администратор\" )\n                    });\n            }\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersListComponent.html":{"url":"components/UsersListComponent.html","title":"component - UsersListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsersListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/users-list/users-list.component.ts\n\n\n    \n        Description\n    \n    \n        Компонент отображения списка всех пользователей.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users-list\n            \n\n            \n                styleUrls\n                users-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./users-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchPhrase\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/users-list/users-list.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                    DataService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        searchPhrase\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/users-list/users-list.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/users-list/users-list.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     User[]\n\n                    \n                \n                    \n                        \n                            Type :     User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/users-list/users-list.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { DataService } from '../SHARED/services/data.service';\nimport { AppearanceTrigger } from '../SHARED/animations';\nimport { User } from '../SHARED/models/user';\n\n/**\n* Компонент отображения списка всех пользователей.\n*/\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.css'],\n  animations: [AppearanceTrigger]\n})\nexport class UsersListComponent implements OnInit {\n  users: User[];\n\n  @Input()\n  searchPhrase: string = '';\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n    this.dataService.getUsers().subscribe(\n      res => {\n        this.users = res;\n      }\n    );\n  }\n\n}\n\n    \n\n    \n        \n  {{errorMessage}}\n\n\n\n  \n  \n\n\n  \n    \n      \n        {{user.role}}\n      \n    \n    \n      \n        {{user.lastName}} {{user.firstName}}\n      \n         {{user.email}}\n      \n         {{user.phone}}\n      Последняя активность в {{user.latestLoginDate | date : \"HH:mm dd/M/yyyy\" }}\n      \n    \n\n  \n\n\n Добавить сотрудника\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{errorMessage}}                        {{user.role}}                            {{user.lastName}} {{user.firstName}}               {{user.email}}               {{user.phone}}      Последняя активность в {{user.latestLoginDate | date : \"HH:mm dd/M/yyyy\" }}             Добавить сотрудника'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentsComponent', 'selector': 'app-comments'},{'name': 'EventsListComponent', 'selector': 'app-events-list'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'ProjectComponent', 'selector': 'app-project'},{'name': 'ProjectsListComponent', 'selector': 'app-projects-list'},{'name': 'TaskComponent', 'selector': 'app-task'},{'name': 'TasksListComponent', 'selector': 'app-tasks-list'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'UsersListComponent', 'selector': 'app-users-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    e2e/app.po.ts\n            \n            \n                class\n            \n            \n                AppPage\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/SHARED/animations.ts\n            \n            \n                variable\n            \n            \n                AppearanceTrigger\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/SHARED/animations.ts\n            \n            \n                variable\n            \n            \n                RouteAnimationTrigger\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/SHARED/models/notification.ts\n            \n            \n                class\n            \n            \n                NotificationType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/SHARED/models/projects.ts\n            \n            \n                class\n            \n            \n                Project\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    src/app/SHARED/models/task.ts\n            \n            \n                class\n            \n            \n                Task\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                    src/app/SHARED/models/user.ts\n            \n            \n                class\n            \n            \n                User\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    src/app/SHARED/pipes/filter-data.pipe.ts\n            \n            \n                pipe\n            \n            \n                FilterData\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/SHARED/pipes/search.pipe.ts\n            \n            \n                pipe\n            \n            \n                SearchPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/SHARED/pipes/sort-data.pipe.ts\n            \n            \n                pipe\n            \n            \n                SortData\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/SHARED/pipes/users-filter-data.pipe.ts\n            \n            \n                pipe\n            \n            \n                UserFilterData\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/SHARED/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                    src/app/SHARED/services/calendar.service.ts\n            \n            \n                injectable\n            \n            \n                CustomDatepicker\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                    src/app/SHARED/services/calendar.service.ts\n            \n            \n                injectable\n            \n            \n                DateOperations\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/SHARED/services/calendar.service.ts\n            \n            \n                injectable\n            \n            \n                I18n\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/SHARED/services/calendar.service.ts\n            \n            \n                variable\n            \n            \n                I18N_VALUES\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/SHARED/services/data.service.ts\n            \n            \n                injectable\n            \n            \n                DataService\n            \n            \n                65 %\n                (19/29)\n            \n        \n        \n            \n                \n                    src/app/SHARED/services/guard.service.ts\n            \n            \n                injectable\n            \n            \n                GuardService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    src/app/SHARED/services/notifications.service.ts\n            \n            \n                injectable\n            \n            \n                NotificationsService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/SHARED/services/pager.service.ts\n            \n            \n                class\n            \n            \n                PagerService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    src/app/comments/comments.component.ts\n            \n            \n                component\n            \n            \n                CommentsComponent\n            \n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                    src/app/events-list/events-list.component.ts\n            \n            \n                component\n            \n            \n                EventsListComponent\n            \n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                    src/app/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                    src/app/login/login.component.ts\n            \n            \n                variable\n            \n            \n                $\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/login/login.component.ts\n            \n            \n                variable\n            \n            \n                jquery\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/login/login.component.ts\n            \n            \n                variable\n            \n            \n                TweenMax\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/menu/menu.component.ts\n            \n            \n                component\n            \n            \n                MenuComponent\n            \n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                    src/app/notification/notification.component.ts\n            \n            \n                component\n            \n            \n                NotificationComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/project/project.component.ts\n            \n            \n                component\n            \n            \n                ProjectComponent\n            \n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                    src/app/projects-list/projects-list.component.ts\n            \n            \n                component\n            \n            \n                ProjectsListComponent\n            \n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                    src/app/task/task.component.ts\n            \n            \n                component\n            \n            \n                TaskComponent\n            \n            \n                4 %\n                (1/23)\n            \n        \n        \n            \n                \n                    src/app/task/task.component.ts\n            \n            \n                variable\n            \n            \n                after\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/task/task.component.ts\n            \n            \n                variable\n            \n            \n                before\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/task/task.component.ts\n            \n            \n                variable\n            \n            \n                equals\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/task/task.component.ts\n            \n            \n                variable\n            \n            \n                now\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/tasks-list/tasks-list.component.ts\n            \n            \n                component\n            \n            \n                TasksListComponent\n            \n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                    src/app/user/user.component.ts\n            \n            \n                component\n            \n            \n                UserComponent\n            \n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                    src/app/users-list/users-list.component.ts\n            \n            \n                component\n            \n            \n                UsersListComponent\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^5.2.0\n        \n            @angular/common : ^5.2.0\n        \n            @angular/compiler : ^5.2.0\n        \n            @angular/core : ^5.2.0\n        \n            @angular/forms : ^5.2.0\n        \n            @angular/http : ^5.2.0\n        \n            @angular/platform-browser : ^5.2.0\n        \n            @angular/platform-browser-dynamic : ^5.2.0\n        \n            @angular/router : ^5.2.0\n        \n            @ng-bootstrap/ng-bootstrap : ^1.1.2\n        \n            core-js : ^2.4.1\n        \n            rxjs : ^5.5.6\n        \n            zone.js : ^0.8.19\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentsComponent\n\nCommentsComponent\n\nAppModule -->\n\nCommentsComponent->AppModule\n\n\n\n\n\nEventsListComponent\n\nEventsListComponent\n\nAppModule -->\n\nEventsListComponent->AppModule\n\n\n\n\n\nFilterData\n\nFilterData\n\nAppModule -->\n\nFilterData->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nAppModule -->\n\nMenuComponent->AppModule\n\n\n\n\n\nNotificationComponent\n\nNotificationComponent\n\nAppModule -->\n\nNotificationComponent->AppModule\n\n\n\n\n\nProjectComponent\n\nProjectComponent\n\nAppModule -->\n\nProjectComponent->AppModule\n\n\n\n\n\nProjectsListComponent\n\nProjectsListComponent\n\nAppModule -->\n\nProjectsListComponent->AppModule\n\n\n\n\n\nSearchPipe\n\nSearchPipe\n\nAppModule -->\n\nSearchPipe->AppModule\n\n\n\n\n\nSortData\n\nSortData\n\nAppModule -->\n\nSortData->AppModule\n\n\n\n\n\nTaskComponent\n\nTaskComponent\n\nAppModule -->\n\nTaskComponent->AppModule\n\n\n\n\n\nTasksListComponent\n\nTasksListComponent\n\nAppModule -->\n\nTasksListComponent->AppModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\nAppModule -->\n\nUserComponent->AppModule\n\n\n\n\n\nUserFilterData\n\nUserFilterData\n\nAppModule -->\n\nUserFilterData->AppModule\n\n\n\n\n\nUsersListComponent\n\nUsersListComponent\n\nAppModule -->\n\nUsersListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nDataService\n\nDataService\n\nAppModule -->\n\nDataService->AppModule\n\n\n\n\n\nGuardService\n\nGuardService\n\nAppModule -->\n\nGuardService->AppModule\n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nAppModule -->\n\nNotificationsService->AppModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            2 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        12 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            14 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            $   (src/.../login.component.ts)\n                        \n                        \n                            after   (src/.../task.component.ts)\n                        \n                        \n                            AppearanceTrigger   (src/.../animations.ts)\n                        \n                        \n                            before   (src/.../task.component.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            equals   (src/.../task.component.ts)\n                        \n                        \n                            I18N_VALUES   (src/.../calendar.service.ts)\n                        \n                        \n                            jquery   (src/.../login.component.ts)\n                        \n                        \n                            now   (src/.../task.component.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            RouteAnimationTrigger   (src/.../animations.ts)\n                        \n                        \n                            TweenMax   (src/.../login.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/login/login.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        $:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jquery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        jquery:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TweenMax\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TweenMax:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/task/task.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            after\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        after:     \n\n                    \n                \n                    \n                        \n                            Default value : (one: NgbDateStruct, two: NgbDateStruct) =>\n  !one || !two ? false : one.year === two.year ? one.month === two.month ? one.day === two.day\n    ? false : one.day > two.day : one.month > two.month : one.year > two.year\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            before\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        before:     \n\n                    \n                \n                    \n                        \n                            Default value : (one: NgbDateStruct, two: NgbDateStruct) =>\n  !one || !two ? false : one.year === two.year ? one.month === two.month ? one.day === two.day\n    ? false : one.day \n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            equals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        equals:     \n\n                    \n                \n                    \n                        \n                            Default value : (one: NgbDateStruct, two: NgbDateStruct) => (one && two && two.year === one.year && two.month === one.month && two.day === one.day)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            now\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        now:     \n\n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n\n\n            \n        \n\n    src/app/SHARED/animations.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AppearanceTrigger\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AppearanceTrigger:     \n\n                    \n                \n                    \n                        \n                            Default value : trigger('appearanceAnimation', [\n    state('void', style({\n        opacity: 0\n    })),\n\n    state('*', style({\n        opacity: 1\n    })),\n\n    transition(':enter', animate('100ms'))\n])\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RouteAnimationTrigger\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        RouteAnimationTrigger:     \n\n                    \n                \n                    \n                        \n                            Default value : trigger('routeAnimation', [\n    transition('1 => 2, 2 => 3', [\n        style({ height: '!' }),\n        query(':enter', style({ transform: 'translateX(100%)' })),\n        query(':enter, :leave', style({ position: 'absolute', top: 0, left: 0, right: 0 })),\n        // animate the leave page away\n        group([\n            query(':leave', [\n                animate('0.3s cubic-bezier(.35,0,.25,1)', style({ transform: 'translateX(-100%)' })),\n            ]),\n            // and now reveal the enter\n            query(':enter', animate('0.3s cubic-bezier(.35,0,.25,1)', style({ transform: 'translateX(0)' }))),\n        ]),\n    ]),\n    transition('3 => 2, 2 => 1', [\n        style({ height: '!' }),\n        query(':enter', style({ transform: 'translateX(-100%)' })),\n        query(':enter, :leave', style({ position: 'absolute', top: 0, left: 0, right: 0 })),\n        // animate the leave page away\n        group([\n            query(':leave', [\n                animate('0.3s cubic-bezier(.35,0,.25,1)', style({ transform: 'translateX(100%)' })),\n            ]),\n            // and now reveal the enter\n            query(':enter', animate('0.3s cubic-bezier(.35,0,.25,1)', style({ transform: 'translateX(0)' }))),\n        ]),\n    ]),\n\n\n    transition('0 => *', [\n        style({ transform: 'scale(2)', opacity: 0 }),\n        animate('0.3s cubic-bezier(.35,0,.25,1)', style({ transform: 'scale(1)', opacity: 1 }))\n    ])\n\n\n])\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/SHARED/services/calendar.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            I18N_VALUES\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        I18N_VALUES:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'ru': {\n        weekdays: ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'],\n        months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n    }\n    // other languages you would support\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
